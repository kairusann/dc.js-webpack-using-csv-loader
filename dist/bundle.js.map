{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/crossfilter2/src/identity.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/crossfilter2/src/insertionsort.js","webpack:///./node_modules/crossfilter2/src/heap.js","webpack:///./node_modules/crossfilter2/index.js","webpack:///./src/data.csv","webpack:///./node_modules/dc/dc.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash.result/index.js","webpack:///./node_modules/crossfilter2/src/reduce.js","webpack:///./node_modules/crossfilter2/src/quicksort.js","webpack:///./node_modules/crossfilter2/src/permute.js","webpack:///./node_modules/crossfilter2/src/bisect.js","webpack:///./node_modules/crossfilter2/src/heapselect.js","webpack:///./node_modules/crossfilter2/src/zero.js","webpack:///./node_modules/crossfilter2/src/null.js","webpack:///./node_modules/crossfilter2/src/filter.js","webpack:///./node_modules/crossfilter2/src/array.js","webpack:///./node_modules/crossfilter2/src/crossfilter.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/dc.min.css","webpack:///./src/dc.min.css?98f7","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","ascending","a","b","NaN","bisector","compare","f","length","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","Math","sqrt","src_extent","min","max","array_array","slice","map","constant","identity","src_range","start","stop","step","arguments","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","type","set","callback","concat","constructor","on","typename","types","T","trim","split","indexOf","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","bind","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","create","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_rgb","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","duration","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","Infinity","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","width","height","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","keys","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","src_density","density","Float32Array","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","undefined","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","d3_geo_src_constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","circles","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","seconds","minute_minute","getMinutes","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","src_minute","src_second","utcTime","sequential","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","crossfilter_identity","insertionsort_by","heap_by","heap","sift","crossfilter","Expt","Run","Speed","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","version","constants","CHART_CLASS","DEBUG_GROUP_CLASS","STACK_CLASS","DESELECTED_CLASS","SELECTED_CLASS","NODE_INDEX_NAME","GROUP_INDEX_NAME","DEFAULT_CHART_GROUP","EVENT_DELAY","NEGLIGIBLE_NUMBER","_renderlet","chartRegistry","_chartMap","initializeChartGroup","chart","register","deregister","anchorName","registerChart","deregisterChart","hasChart","deregisterAllCharts","filterAll","charts","refocusAll","focus","renderAll","render","redrawAll","disableTransitions","optionalTransition","enable","afterTransition","units","integers","fp","_f","resolution","utils","isNegligible","override","obj","functionName","newFunction","existingFunction","renderlet","instanceOfChart","__dcFlag__","errors","Exception","msg","_msg","message","InvalidStateException","BadArgumentException","dateFormat","printers","filters","printSingleValue","pluck","isFloat","fformat","isInteger","toTimeFunc","getTime","timeDay","percentage","subtract","isNumber","val","_logger","_alreadyWarned","_config","_schemeCategory20c","_defaultColors","_idCounter","findChild","nodeName","uniqueId","nameToId","appendOrSelect","tag","element","safeNumber","arraysEqual","elem","allChildren","paths","console","toHierarchy","accessor","parts","currentNode","childNode","currentPath","getAncestors","arraysIdentical","logger","enableDebugLog","warn","warnOnce","debug","deprecate","fn","warned","config","defaultColors","events","trigger","closure","RangedFilter","low","high","isFiltered","filterType","TwoDimensionalFilter","RangedTwoDimensionalFilter","fromBottomLeft","HierarchyFilter","baseMixin","_chart","_dimension","_group","_anchor","_svg","_isChild","_width","_height","_orderSort","_legend","_commitHandler","_minWidth","_defaultWidthCalc","_widthCalc","_minHeight","_defaultHeightCalc","_heightCalc","_useViewBoxResizing","_keyAccessor","_valueAccessor","_label","_ordering","_renderLabel","_title","keyAccessor","valueAccessor","_renderTitle","_controlsUseVisibility","_transitionDuration","_transitionDelay","_filterPrinter","_mandatoryAttributes","_chartGroup","_listeners","_filters","_filterHandler","dimension","filterRange","filterFunction","filterExact","_data","all","sizeSvg","checkForMandatoryAttributes","minWidth","minHeight","useViewBoxResizing","expireCache","_groupName","ordering","orderFunction","quicksort","_computeOrderedGroups","dataCopy","anchor","chartGroup","chartID","rootElement","svgElement","resetSvg","filterPrinter","filterPrinterFunction","controlsUseVisibility","useVisibility","turnOnControls","attribute","turnOffControls","transitionDuration","transitionDelay","_doRender","_activateRenderlets","_doRedraw","commitHandler","redrawGroup","renderGroup","_invokeFilteredListener","_invokeZoomedListener","_hasFilterHandler","some","hasFilterHandler","hasFilter","_removeFilterHandler","removeFilterHandler","_addFilterHandler","addFilterHandler","_resetFilterHandler","resetFilterHandler","replaceFilter","fs","applyFilters","highlightSelected","fadeDeselected","resetHighlight","onClick","filterHandler","legendables","legendHighlight","legendReset","legendToggle","isLegendableHidden","label","labelFunction","enableLabels","renderLabel","title","titleFunction","renderTitle","renderletFunction","legend","options","opts","applyOptions","marginMixin","_margin","margins","effectiveWidth","effectiveHeight","colorMixin","_colors","scaleOrdinal","_defaultAccessor","_colorAccessor","colorScale","scaleQuantize","ordinalColors","linearColors","scaleLinear","interpolateHcl","colorAccessor","defaultColorAccessor","colorDomain","calculateColorDomain","newDomain","getColor","colorCalculator","coordinateGridMixin","_g","_chartBodyG","_origX","_xOriginalDomain","GRID_LINE_CLASS","VERTICAL_CLASS","schemeCategory10","_xAxisLabel","_lastXDomain","_yAxisLabel","_gBrush","_round","_unitCount","_rangeChart","_focusChart","_xAxis","_xUnits","_xAxisPadding","_xAxisPaddingUnit","_xElasticity","_xAxisLabelPadding","_yAxis","_yAxisPadding","_yElasticity","_yAxisLabelPadding","_brush","_brushOn","_parentBrushOn","_renderHorizontalGridLine","_renderVerticalGridLine","_resizing","_zoomScale","_zoomOutRestrict","_zoom","_nullZoom","_hasBeenMouseZoomable","_mouseZoomable","_clipPadding","_outerRangeBandPadding","_rangeBandPadding","_useRightYAxis","prepareXAxis","isOrdinal","scaleBand","elasticX","_ordinalXDomain","xAxisMin","xAxisMax","xdom","xAxisLength","_useOuterPadding","gridLineG","linesGEnter","_xAxisY","linesGEnterUpdate","renderVerticalGridLines","createYAxis","getClipPathId","generateClipPath","defs","chartBodyClip","yAxisHeight","drawChart","_prepareYAxis","plotData","renderXAxis","elasticY","renderYAxis","renderBrush","redrawBrush","fadeDeselectedArea","zoomHandler","noRaiseEvents","domFilter","rangesEqual","updateD3zoomTransform","origDomain","xScale","zoomIdentity","checkExtents","ext","outerLimits","range2","resizing","rangeChart","focusChart","zoomScale","zoomOutRestrict","_generateG","href","gElement","mouseZoomable","chartBodyG","xOriginalDomain","xUnits","xAxis","xAxisPadding","xAxisPaddingUnit","xUnitCount","useRightYAxis","axisXG","axisXLab","xAxisLabel","labelText","yAxisMin","yAxisMax","_renderHorizontalGridLinesForAxis","renderYAxisLabel","axisClass","labelXPosition","axisYLab","labelYPosition","Y_AXIS_LABEL_CLASS","renderYAxisAt","axisYG","axisPosition","_yAxisX","labelPosition","yAxisLabel","yScale","yAxis","renderHorizontalGridLines","yAxisPadding","_filter","doTransition","_brushing","setBrushExtents","createBrushHandlePaths","gBrush","brushHandles","resizeHandlePath","extendBrush","brushIsEmpty","rangedFilter","applyBrushSelection","scaledSelection","clipPadding","_preprocessData","_enableMouseZoom","_disableMouseZoom","zoomScaleMin","refocused","brushOn","parentBrushOn","stackMixin","prepareValues","layer","layerIdx","valAccessor","String","allValues","hidden","domainValues","xDomain","domainFilter","evadeDomainFilter","_stackLayout","_stack","_titles","_hidableStacks","_evadeDomainFilter","findLayerByName","flattenStack","valueses","visibility","hidableStacks","hideStack","stackName","showStack","getValueAccessorByIndex","titleAccessor","stackLayout","layers","v4data","col","ys","flat","capMixin","_cap","_takeFront","_othersLabel","kv","_othersGrouper","topItems","restItems","restItemsSum","restKeys","others","othersLabel","cappedKeyAccessor","cappedValueAccessor","rest","items","cap","takeFront","othersGrouper","grouperFunction","_onClick","bubbleMixin","_maxBubbleRelativeSize","_minRadiusWithLabel","_sortBubbleSize","_elasticRadius","BUBBLE_NODE_CLASS","BUBBLE_CLASS","MIN_RADIUS","radiusAccessor","radiusValueAccessor","_r","_rValueAccessor","bubbleRadiusScale","elasticRadius","calculateRadiusDomain","rMin","rMax","bubbleR","shouldLabel","labelOpacity","labelPointerEvent","_doRenderLabel","bubbleGEnter","doUpdateLabels","labels","_doRenderTitles","doUpdateTitles","sortBubbleSize","minRadius","minRadiusWithLabel","maxBubbleRelativeSize","relativeSize","isSelectedNode","pieChart","_givenRadius","_cx","_cy","_externalLabelRadius","_sliceCssClass","_labelCssClass","_sliceGroupCssClass","_labelGroupCssClass","_emptyCssClass","_emptyTitle","_innerRadius","_externalRadiusPadding","_minAngleForLabel","_drawPaths","maxRadius","pieData","buildArcs","slices","removeElements","slicesEnter","createSliceNodes","slicePath","safeArc","tweenPie","createSlicePath","createTitles","labelsEnter","classes","highlightSlice","positionLabels","updateLabelPaths","createLabels","createElements","slicePaths","updateSlicePaths","updateLabels","updateTitles","updateElements","isSelectedSlice","_applyLabelText","whether","polyline","arc2","_current","isOffCanvas","highlightSliceFromLegendable","legendable","highlighted","slicesCap","sliceHasNoData","sliceTooSmall","externalRadiusPadding","minAngleForLabel","emptyTitle","externalLabels","externalLabelRadius","drawPaths","sunburstChart","sunburstData","partitionNodes","tweenSlice","currentFilter","isPathFiltered","tweenTarget","assign","pathFilter","filtersForPath","exactMatch","barChart","_barWidth","MIN_BAR_WIDTH","LABEL_PADDING","_gap","_centerBar","_alwaysUseRounding","barHeight","labelXPos","labelYPos","barXPos","colorFilter","inv","_rescale","_render","numberOfBars","barPadding","calculateBarWidth","last","layerIndex","bars","barsEnterUpdate","renderBars","labelsEnterUpdate","renderLabels","centerBar","outerPadding","gap","alwaysUseRounding","_xAxisMax","lineChart","_defined","_dashStyle","TOOLTIP_G_CLASS","DOT_CIRCLE_CLASS","Y_AXIS_REF_LINE_CLASS","X_AXIS_REF_LINE_CLASS","_renderArea","_dotRadius","_dataPointRadius","_dataPointFillOpacity","_dataPointStrokeOpacity","_interpolate","_tension","_xyTipsOn","getCurveFactory","curveLinear","linear-closed","curveLinearClosed","curveStep","step-before","curveStepBefore","step-after","curveStepAfter","curveBasis","basis-open","curveBasisOpen","basis-closed","curveBasisClosed","curveBundle","curveCardinal","cardinal-open","curveCardinalOpen","cardinal-closed","curveCardinalClosed","monotone","curveMonotoneX","safeD","getDotRadius","dot","dashstyle","item","chartBody","layersList","layersEnter","drawLine","drawArea","xyTipsOn","tooltipListClass","tooltips","createRefLines","dots","dotsEnterModify","showDot","yAxisRefPathD","xAxisRefPathD","showRefLines","hideDot","hideRefLines","drawDots","labelsEnterModify","drawLabels","dashStyle","renderArea","dotRadius","renderDataPoints","fillOpacity","strokeOpacity","_legendables","dataCount","_formatNumber","_html","formatNumber","formatter","tot","selected","dataTable","_endSlice","LABEL_CSS_CLASS","ROW_CSS_CLASS","COLUMN_CSS_CLASS","GROUP_CSS_CLASS","HEAD_CSS_CLASS","_size","_columns","_sortBy","_order","_beginSlice","_showGroups","rowEnter","bAllFunctions","thead","headrow","headcols","_doColumnHeaderFormat","rowGroup","renderGroups","_doColumnValueFormat","_doColumnHeaderFnToString","_doColumnHeaderCapitalize","i2","lastIndexOf","beginSlice","endSlice","sortBy","showGroups","dataGrid","ITEM_CSS_CLASS","GRID_CSS_CLASS","_htmlGroup","itemGroup","htmlGroup","sortByFunction","bubbleChart","bubbleLocator","bubbleG","updateNodes","renderNodes","removeNodes","compositeChart","_rightY","SUB_CHART_CLASS","_children","_childOptions","_shareColors","_shareTitle","_alignYAxes","_rightYAxis","_rightYAxisLabel","_rightYAxisLabelPadding","_rightAxisGridLines","generateChildG","leftYAxisChildren","rightYAxisChildren","getYAxisMin","getYAxisMax","__generateG","lyAxisMin","lyAxisMax","ryAxisMin","ryAxisMax","alignYAxes","extentRatio","alignYAxisRanges","calculateYAxisRanges","needDomain","needRange","prepareLeftYAxis","rightY","rightYAxis","prepareRightYAxis","rightYAxisLabel","useRightAxisGridLines","childOptions","subChartArray","shareColors","shareTitle","seriesChart","_seriesAccessor","_charts","_chartFunction","_seriesSort","_valueSort","clearChart","resetChildren","childrenChanged","keep","nester","sub","subChart","_compose","chartFunction","seriesAccessor","seriesSort","sortFunction","valueSort","geoChoroplethChart","_projectionFlag","_projection","_geoPath","geoPath","_geoJsons","groupAll","generateLayeredData","geoJson","isDataLayer","regionG","layerSelector","isSelected","isDeselected","layerNameClass","regionClass","baseClasses","renderRegionG","currentFill","renderPaths","getKey","_getGeoPath","selectedRegion","overlayGeoJson","geoAlbersUsa","geoJsons","removeGeoJson","bubbleOverlay","BUBBLE_OVERLAY_CLASS","_points","mapData","getNodeG","bubbleNodeClass","nodeG","flag","debugG","debugText","rowChart","_elasticX","_rowData","_labelOffsetX","_labelOffsetY","_hasLabelOffsetY","_dyOffset","_titleLabelOffsetX","_fixedBarHeight","_rowCssClass","_titleRowCssClass","_renderTitleLabel","drawAxis","axisG","calculateAxisScale","isSelectedRow","rootValue","renderTitleLabel","titlelab","rowsCap","fixedBarHeight","labelOffsetX","labelOffsetY","labelOffsety","titleLabelOffsetX","_maxItems","_itemHeight","_horizontal","_legendWidth","_itemWidth","_autoItemWidth","_legendText","legendItemHeight","itemEnter","_cumulativeLegendTextWidth","itemWidth","getBBox","itemHeight","horizontal","legendWidth","autoItemWidth","legendText","maxItems","htmlLegend","_container","_legendItemClass","_highlightSelected","_defaultLegendItemCssClass","_l","legendItemClassName","legendItemClass","scatterPlot","_symbol","_existenceAccessor","originalKeyAccessor","existenceAccessor","_locator","_highlightedSize","_symbolSize","_excludedSize","_excludedColor","_excludedOpacity","_emptySize","_emptyOpacity","_nonemptyOpacity","_emptyColor","_filtered","elementSize","renderTitles","resizeSymbolsWhere","condition","oldSize","__filter","excludedOpacity","excludedColor","customSymbol","symbolSize","highlightedSize","excludedSize","hiddenSize","emptySize","emptyColor","emptyOpacity","nonemptyOpacity","coord","ranged2DFilter","setBrushY","numberDisplay","_lastValue","valObj","sorted","maxBin","newValue","span","easeQuad","interpStart","interp","interpolateNumber","num","heatMap","_chartBody","_cols","_rows","_colOrdering","_rowOrdering","_colScale","_rowScale","_xBorderRadius","_yBorderRadius","_colsLabel","_rowsLabel","colsLabel","rowsLabel","_xAxisOnClick","filterAxis","_yAxisOnClick","_boxOnClick","cellsOnAxis","unfilteredCellsOnAxis","rowOrdering","cols","colOrdering","rowCount","colCount","boxWidth","boxHeight","boxes","gEnter","boxOnClick","gCols","gColsText","xAxisOnClick","gRows","gRowsText","yAxisOnClick","handler","xBorderRadius","yBorderRadius","boxWhiskers","boxQuartiles","box","Number","whiskers","quartiles","quartileData","whiskerIndices","whiskerData","outlierIndices","__chart__","medianLine","whisker","outlier","boxTick","whiskerTick","boxPlot","_whiskers","q3","iqr","_box","_tickFormat","_boxWidth","innerChartWidth","boxPadding","boxTransform","_calculatedBoxWidth","boxesG","updateBoxes","boxesGEnter","renderBoxes","removeBoxes","selectMenu","_select","OPTION_CSS_CLASS","_promptText","_multiple","_promptValue","_numberVisible","_filterDisplayed","ua","navigator","userAgent","onChange","selectedOptions","option","promptText","filterDisplayed","multiple","promptValue","numberVisible","textFilterWidget","_normalize","_filterFunctionFactory","query","_placeHolder","normalize","placeHolder","filterFunctionFactory","cboxMenu","_cbox","_inputType","_randVal","checked","li","renderOptions","abstractBubbleChart","baseChart","capped","colorChart","coordinateGridChart","marginable","stackableChart","eval","global","FUNC_ERROR_TEXT","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","freeSelf","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","IE_PROTO","funcToString","objectToString","reIsNative","Symbol","getNative","nativeCreate","symbolProto","symbolToString","Hash","ListCache","MapCache","assocIndexOf","baseIsNative","isObject","isFunction","isHostObject","func","toSource","getMapData","getValue","hash","stringToPath","memoize","isSymbol","baseToString","quote","toKey","resolver","memoized","Cache","isObjectLike","defaultValue","isKey","castPath","reduceIncrement","reduceDecrement","reduceAdd","reduceSubtract","xFilterInsertionsort","quicksort_by","insertionsort","quicksort_sizeThreshold","sixth","i5","i3","i4","e3","e4","x4","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","greatValue","lessValue","bisect_by","xFilterHeap","heapselect_by","queue","Uint8Array","crossfilter_array8","crossfilter_arrayLengthen","crossfilter_arrayWiden","Uint16Array","Uint32Array","crossfilter_array32","crossfilter_arrayUntyped","crossfilter_bitarray","subarrays","masks","lengthen","len","dest","truncate","zeroExcept","zeroExceptMask","mask","only","onlyExcept","onlyOffset","onlyOne","array8","array16","array32","arrayLengthen","arrayWiden","bitarray","xfilterArray","xfilterFilter","crossfilter_null","crossfilter_zero","xfilterHeapselect","xfilterHeap","xfilterReduce","packageJson","REMOVED_INDEX","crossfilter_index","crossfilter_range","crossfilter_capacity","predicate","newIndex","removed","usePred","index1","index2","filterListeners","removeDataListeners","index3","index4","triggerOnChange","iterable","accessorPath","newValues","iterablesIndexCount","newIterablesIndexCount","iterablesIndexFilterStatus","newIterablesIndexFilterStatus","refilterFunction","filterValue","filterValuePresent","hasCurrentFilter","top_offset","hi0","toSkip","lo0","iterablesEmptyRows","bottom_offset","orderNatural","dispose","refilter","indexListeners","dimensionGroups","dataListeners","preAdd","postAdd","removeData","tmp","newData","unsortedIndex","sortMap","lo1","hi1","old_n0","oldValues","oldIndex","oldIterablesIndexFilterStatus","oldiiclength","index5","reIndex","oldDataIndex","filterIndexBounds","filterIndexFunction","added","valueIndexAdded","valueIndexRemoved","newAdded","newRemoved","indexLength","reduceCount","reduceSum","reduceRemove","reduceInitial","n0old","groupWidth","groupCapacity","resetNeeded","g0","oldGroups","initial","k0","groupIncrement","updateMany","resetMany","updateOne","resetOne","oldK","seenGroups","filterOne","filterOffset","notFilter","reduceValue","allFiltered","ignore_dimensions","maskForDimensions","callbacks","isElementFiltered","dimensions","eventName","heapselect","css","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","memo","stylesInDom","isOldIE","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","addStyle","listToStyles","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","attrs","addAttrs","el","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","childNodes","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals","_data_csv__WEBPACK_IMPORTED_MODULE_1__","_data_csv__WEBPACK_IMPORTED_MODULE_1___default","body","schemeSet1","runDimension","speedSumGroup"],"mappings":"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AAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,OAAgCF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAiCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAiCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAiCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,EAAAC,MAAA,MAA+BF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAAC,IAAA,GAAAC,MAAA,MAAgCF,KAAA,EAAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","'use strict';\n\nfunction crossfilter_identity(d) {\n  return d;\n}\n\nmodule.exports = crossfilter_identity;\n","export var name = \"d3\";\nexport var version = \"5.4.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (x(d, i, data) + o) >> k,\n          yi = (y(d, i, data) + o) >> k;\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        ++values0[xi + yi * n];\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n\nmodule.exports = insertionsort_by(crossfilter_identity);\nmodule.exports.by = insertionsort_by;\n","'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\n\nmodule.exports = heap_by(crossfilter_identity);\nmodule.exports.by = heap_by;\n","module.exports = require(\"./src/crossfilter\").crossfilter;\n","module.exports = [{\"Expt\":1,\"Run\":1,\"Speed\":850},{\"Expt\":1,\"Run\":2,\"Speed\":740},{\"Expt\":1,\"Run\":3,\"Speed\":900},{\"Expt\":1,\"Run\":4,\"Speed\":1070},{\"Expt\":1,\"Run\":5,\"Speed\":930},{\"Expt\":1,\"Run\":6,\"Speed\":850},{\"Expt\":1,\"Run\":7,\"Speed\":950},{\"Expt\":1,\"Run\":8,\"Speed\":980},{\"Expt\":1,\"Run\":9,\"Speed\":980},{\"Expt\":1,\"Run\":10,\"Speed\":880},{\"Expt\":1,\"Run\":11,\"Speed\":1000},{\"Expt\":1,\"Run\":12,\"Speed\":980},{\"Expt\":1,\"Run\":13,\"Speed\":930},{\"Expt\":1,\"Run\":14,\"Speed\":650},{\"Expt\":1,\"Run\":15,\"Speed\":760},{\"Expt\":1,\"Run\":16,\"Speed\":810},{\"Expt\":1,\"Run\":17,\"Speed\":1000},{\"Expt\":1,\"Run\":18,\"Speed\":1000},{\"Expt\":1,\"Run\":19,\"Speed\":960},{\"Expt\":1,\"Run\":20,\"Speed\":960},{\"Expt\":2,\"Run\":1,\"Speed\":960},{\"Expt\":2,\"Run\":2,\"Speed\":940},{\"Expt\":2,\"Run\":3,\"Speed\":960},{\"Expt\":2,\"Run\":4,\"Speed\":940},{\"Expt\":2,\"Run\":5,\"Speed\":880},{\"Expt\":2,\"Run\":6,\"Speed\":800},{\"Expt\":2,\"Run\":7,\"Speed\":850},{\"Expt\":2,\"Run\":8,\"Speed\":880},{\"Expt\":2,\"Run\":9,\"Speed\":900},{\"Expt\":2,\"Run\":10,\"Speed\":840},{\"Expt\":2,\"Run\":11,\"Speed\":830},{\"Expt\":2,\"Run\":12,\"Speed\":790},{\"Expt\":2,\"Run\":13,\"Speed\":810},{\"Expt\":2,\"Run\":14,\"Speed\":880},{\"Expt\":2,\"Run\":15,\"Speed\":880},{\"Expt\":2,\"Run\":16,\"Speed\":830},{\"Expt\":2,\"Run\":17,\"Speed\":800},{\"Expt\":2,\"Run\":18,\"Speed\":790},{\"Expt\":2,\"Run\":19,\"Speed\":760},{\"Expt\":2,\"Run\":20,\"Speed\":800},{\"Expt\":3,\"Run\":1,\"Speed\":880},{\"Expt\":3,\"Run\":2,\"Speed\":880},{\"Expt\":3,\"Run\":3,\"Speed\":880},{\"Expt\":3,\"Run\":4,\"Speed\":860},{\"Expt\":3,\"Run\":5,\"Speed\":720},{\"Expt\":3,\"Run\":6,\"Speed\":720},{\"Expt\":3,\"Run\":7,\"Speed\":620},{\"Expt\":3,\"Run\":8,\"Speed\":860},{\"Expt\":3,\"Run\":9,\"Speed\":970},{\"Expt\":3,\"Run\":10,\"Speed\":950},{\"Expt\":3,\"Run\":11,\"Speed\":880},{\"Expt\":3,\"Run\":12,\"Speed\":910},{\"Expt\":3,\"Run\":13,\"Speed\":850},{\"Expt\":3,\"Run\":14,\"Speed\":870},{\"Expt\":3,\"Run\":15,\"Speed\":840},{\"Expt\":3,\"Run\":16,\"Speed\":840},{\"Expt\":3,\"Run\":17,\"Speed\":850},{\"Expt\":3,\"Run\":18,\"Speed\":840},{\"Expt\":3,\"Run\":19,\"Speed\":840},{\"Expt\":3,\"Run\":20,\"Speed\":840},{\"Expt\":4,\"Run\":1,\"Speed\":890},{\"Expt\":4,\"Run\":2,\"Speed\":810},{\"Expt\":4,\"Run\":3,\"Speed\":810},{\"Expt\":4,\"Run\":4,\"Speed\":820},{\"Expt\":4,\"Run\":5,\"Speed\":800},{\"Expt\":4,\"Run\":6,\"Speed\":770},{\"Expt\":4,\"Run\":7,\"Speed\":760},{\"Expt\":4,\"Run\":8,\"Speed\":740},{\"Expt\":4,\"Run\":9,\"Speed\":750},{\"Expt\":4,\"Run\":10,\"Speed\":760},{\"Expt\":4,\"Run\":11,\"Speed\":910},{\"Expt\":4,\"Run\":12,\"Speed\":920},{\"Expt\":4,\"Run\":13,\"Speed\":890},{\"Expt\":4,\"Run\":14,\"Speed\":860},{\"Expt\":4,\"Run\":15,\"Speed\":880},{\"Expt\":4,\"Run\":16,\"Speed\":720},{\"Expt\":4,\"Run\":17,\"Speed\":840},{\"Expt\":4,\"Run\":18,\"Speed\":850},{\"Expt\":4,\"Run\":19,\"Speed\":850},{\"Expt\":4,\"Run\":20,\"Speed\":780},{\"Expt\":5,\"Run\":1,\"Speed\":890},{\"Expt\":5,\"Run\":2,\"Speed\":840},{\"Expt\":5,\"Run\":3,\"Speed\":780},{\"Expt\":5,\"Run\":4,\"Speed\":810},{\"Expt\":5,\"Run\":5,\"Speed\":760},{\"Expt\":5,\"Run\":6,\"Speed\":810},{\"Expt\":5,\"Run\":7,\"Speed\":790},{\"Expt\":5,\"Run\":8,\"Speed\":810},{\"Expt\":5,\"Run\":9,\"Speed\":820},{\"Expt\":5,\"Run\":10,\"Speed\":850},{\"Expt\":5,\"Run\":11,\"Speed\":870},{\"Expt\":5,\"Run\":12,\"Speed\":870},{\"Expt\":5,\"Run\":13,\"Speed\":810},{\"Expt\":5,\"Run\":14,\"Speed\":740},{\"Expt\":5,\"Run\":15,\"Speed\":810},{\"Expt\":5,\"Run\":16,\"Speed\":940},{\"Expt\":5,\"Run\":17,\"Speed\":950},{\"Expt\":5,\"Run\":18,\"Speed\":800},{\"Expt\":5,\"Run\":19,\"Speed\":810},{\"Expt\":5,\"Run\":20,\"Speed\":870}]","/*!\n *  dc 3.0.3\n *  http://dc-js.github.io/dc.js/\n *  Copyright 2012-2016 Nick Zhu & the dc.js Developers\n *  https://github.com/dc-js/dc.js/blob/master/AUTHORS\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n(function() { function _dc(d3, crossfilter) {\n'use strict';\n\n/**\n * The entire dc.js library is scoped under the **dc** name space. It does not introduce\n * anything else into the global name space.\n *\n * Most `dc` functions are designed to allow function chaining, meaning they return the current chart\n * instance whenever it is appropriate.  The getter forms of functions do not participate in function\n * chaining because they return values that are not the chart, although some,\n * such as {@link dc.baseMixin#svg .svg} and {@link dc.coordinateGridMixin#xAxis .xAxis},\n * return values that are themselves chainable d3 objects.\n * @namespace dc\n * @version 3.0.3\n * @example\n * // Example chaining\n * chart.width(300)\n *      .height(300)\n *      .filter('sunday');\n */\n/*jshint -W079*/\nvar dc = {\n    version: '3.0.3',\n    constants: {\n        CHART_CLASS: 'dc-chart',\n        DEBUG_GROUP_CLASS: 'debug',\n        STACK_CLASS: 'stack',\n        DESELECTED_CLASS: 'deselected',\n        SELECTED_CLASS: 'selected',\n        NODE_INDEX_NAME: '__index__',\n        GROUP_INDEX_NAME: '__group_index__',\n        DEFAULT_CHART_GROUP: '__default_chart_group__',\n        EVENT_DELAY: 40,\n        NEGLIGIBLE_NUMBER: 1e-10\n    },\n    _renderlet: null\n};\n/*jshint +W079*/\n\n/**\n * The dc.chartRegistry object maintains sets of all instantiated dc.js charts under named groups\n * and the default group.\n *\n * A chart group often corresponds to a crossfilter instance. It specifies\n * the set of charts which should be updated when a filter changes on one of the charts or when the\n * global functions {@link dc.filterAll dc.filterAll}, {@link dc.refocusAll dc.refocusAll},\n * {@link dc.renderAll dc.renderAll}, {@link dc.redrawAll dc.redrawAll}, or chart functions\n * {@link dc.baseMixin#renderGroup baseMixin.renderGroup},\n * {@link dc.baseMixin#redrawGroup baseMixin.redrawGroup} are called.\n *\n * @namespace chartRegistry\n * @memberof dc\n * @type {{has, register, deregister, clear, list}}\n */\ndc.chartRegistry = (function () {\n    // chartGroup:string => charts:array\n    var _chartMap = {};\n\n    function initializeChartGroup (group) {\n        if (!group) {\n            group = dc.constants.DEFAULT_CHART_GROUP;\n        }\n\n        if (!_chartMap[group]) {\n            _chartMap[group] = [];\n        }\n\n        return group;\n    }\n\n    return {\n        /**\n         * Determine if a given chart instance resides in any group in the registry.\n         * @method has\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @returns {Boolean}\n         */\n        has: function (chart) {\n            for (var e in _chartMap) {\n                if (_chartMap[e].indexOf(chart) >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /**\n         * Add given chart instance to the given group, creating the group if necessary.\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n         * @method register\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @param {String} [group] Group name\n         */\n        register: function (chart, group) {\n            group = initializeChartGroup(group);\n            _chartMap[group].push(chart);\n        },\n\n        /**\n         * Remove given chart instance from the given group, creating the group if necessary.\n         * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n         * @method deregister\n         * @memberof dc.chartRegistry\n         * @param {Object} chart dc.js chart instance\n         * @param {String} [group] Group name\n         */\n        deregister: function (chart, group) {\n            group = initializeChartGroup(group);\n            for (var i = 0; i < _chartMap[group].length; i++) {\n                if (_chartMap[group][i].anchorName() === chart.anchorName()) {\n                    _chartMap[group].splice(i, 1);\n                    break;\n                }\n            }\n        },\n\n        /**\n         * Clear given group if one is provided, otherwise clears all groups.\n         * @method clear\n         * @memberof dc.chartRegistry\n         * @param {String} group Group name\n         */\n        clear: function (group) {\n            if (group) {\n                delete _chartMap[group];\n            } else {\n                _chartMap = {};\n            }\n        },\n\n        /**\n         * Get an array of each chart instance in the given group.\n         * If no group is provided, the charts in the default group are returned.\n         * @method list\n         * @memberof dc.chartRegistry\n         * @param {String} [group] Group name\n         * @returns {Array<Object>}\n         */\n        list: function (group) {\n            group = initializeChartGroup(group);\n            return _chartMap[group];\n        }\n    };\n})();\n\n/**\n * Add given chart instance to the given group, creating the group if necessary.\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n * @memberof dc\n * @method registerChart\n * @param {Object} chart dc.js chart instance\n * @param {String} [group] Group name\n */\ndc.registerChart = function (chart, group) {\n    dc.chartRegistry.register(chart, group);\n};\n\n/**\n * Remove given chart instance from the given group, creating the group if necessary.\n * If no group is provided, the default group `dc.constants.DEFAULT_CHART_GROUP` will be used.\n * @memberof dc\n * @method deregisterChart\n * @param {Object} chart dc.js chart instance\n * @param {String} [group] Group name\n */\ndc.deregisterChart = function (chart, group) {\n    dc.chartRegistry.deregister(chart, group);\n};\n\n/**\n * Determine if a given chart instance resides in any group in the registry.\n * @memberof dc\n * @method hasChart\n * @param {Object} chart dc.js chart instance\n * @returns {Boolean}\n */\ndc.hasChart = function (chart) {\n    return dc.chartRegistry.has(chart);\n};\n\n/**\n * Clear given group if one is provided, otherwise clears all groups.\n * @memberof dc\n * @method deregisterAllCharts\n * @param {String} group Group name\n */\ndc.deregisterAllCharts = function (group) {\n    dc.chartRegistry.clear(group);\n};\n\n/**\n * Clear all filters on all charts within the given chart group. If the chart group is not given then\n * only charts that belong to the default chart group will be reset.\n * @memberof dc\n * @method filterAll\n * @param {String} [group]\n */\ndc.filterAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].filterAll();\n    }\n};\n\n/**\n * Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is\n * not given then only charts that belong to the default chart group will be reset.\n * @memberof dc\n * @method refocusAll\n * @param {String} [group]\n */\ndc.refocusAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        if (charts[i].focus) {\n            charts[i].focus();\n        }\n    }\n};\n\n/**\n * Re-render all charts belong to the given chart group. If the chart group is not given then only\n * charts that belong to the default chart group will be re-rendered.\n * @memberof dc\n * @method renderAll\n * @param {String} [group]\n */\ndc.renderAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].render();\n    }\n\n    if (dc._renderlet !== null) {\n        dc._renderlet(group);\n    }\n};\n\n/**\n * Redraw all charts belong to the given chart group. If the chart group is not given then only charts\n * that belong to the default chart group will be re-drawn. Redraw is different from re-render since\n * when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting\n * from scratch.\n * @memberof dc\n * @method redrawAll\n * @param {String} [group]\n */\ndc.redrawAll = function (group) {\n    var charts = dc.chartRegistry.list(group);\n    for (var i = 0; i < charts.length; ++i) {\n        charts[i].redraw();\n    }\n\n    if (dc._renderlet !== null) {\n        dc._renderlet(group);\n    }\n};\n\n/**\n * If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\n * immediately.\n * @memberof dc\n * @member disableTransitions\n * @type {Boolean}\n * @default false\n */\ndc.disableTransitions = false;\n\n/**\n * Start a transition on a selection if transitions are globally enabled\n * ({@link dc.disableTransitions} is false) and the duration is greater than zero; otherwise return\n * the selection. Since most operations are the same on a d3 selection and a d3 transition, this\n * allows a common code path for both cases.\n * @memberof dc\n * @method transition\n * @param {d3.selection} selection - the selection to be transitioned\n * @param {Number|Function} [duration=250] - the duration of the transition in milliseconds, a\n * function returning the duration, or 0 for no transition\n * @param {Number|Function} [delay] - the delay of the transition in milliseconds, or a function\n * returning the delay, or 0 for no delay\n * @param {String} [name] - the name of the transition (if concurrent transitions on the same\n * elements are needed)\n * @returns {d3.transition|d3.selection}\n */\ndc.transition = function (selection, duration, delay, name) {\n    if (dc.disableTransitions || duration <= 0) {\n        return selection;\n    }\n\n    var s = selection.transition(name);\n\n    if (duration >= 0 || duration !== undefined) {\n        s = s.duration(duration);\n    }\n    if (delay >= 0 || delay !== undefined) {\n        s = s.delay(delay);\n    }\n\n    return s;\n};\n\n/* somewhat silly, but to avoid duplicating logic */\ndc.optionalTransition = function (enable, duration, delay, name) {\n    if (enable) {\n        return function (selection) {\n            return dc.transition(selection, duration, delay, name);\n        };\n    } else {\n        return function (selection) {\n            return selection;\n        };\n    }\n};\n\n// See http://stackoverflow.com/a/20773846\ndc.afterTransition = function (transition, callback) {\n    if (transition.empty() || !transition.duration) {\n        callback.call(transition);\n    } else {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .on('end', function () {\n                if (!--n) {\n                    callback.call(transition);\n                }\n            });\n    }\n};\n\n/**\n * @namespace units\n * @memberof dc\n * @type {{}}\n */\ndc.units = {};\n\n/**\n * The default value for {@link dc.coordinateGridMixin#xUnits .xUnits} for the\n * {@link dc.coordinateGridMixin Coordinate Grid Chart} and should\n * be used when the x values are a sequence of integers.\n * It is a function that counts the number of integers in the range supplied in its start and end parameters.\n * @method integers\n * @memberof dc.units\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @example\n * chart.xUnits(dc.units.integers) // already the default\n * @param {Number} start\n * @param {Number} end\n * @returns {Number}\n */\ndc.units.integers = function (start, end) {\n    return Math.abs(end - start);\n};\n\n/**\n * This argument can be passed to the {@link dc.coordinateGridMixin#xUnits .xUnits} function of a\n * coordinate grid chart to specify ordinal units for the x axis. Usually this parameter is used in\n * combination with passing\n * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\n * to {@link dc.coordinateGridMixin#x .x}.\n *\n * As of dc.js 3.0, this is purely a placeholder or magic value which causes the chart to go into ordinal mode; the\n * function is not called.\n * @method ordinal\n * @memberof dc.units\n * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @see {@link dc.coordinateGridMixin#x coordinateGridMixin.x}\n * @example\n * chart.xUnits(dc.units.ordinal)\n *      .x(d3.scaleOrdinal())\n */\ndc.units.ordinal = function () {\n    throw new Error('dc.units.ordinal should not be called - it is a placeholder');\n};\n\n/**\n * @namespace fp\n * @memberof dc.units\n * @type {{}}\n */\ndc.units.fp = {};\n/**\n * This function generates an argument for the {@link dc.coordinateGridMixin Coordinate Grid Chart}\n * {@link dc.coordinateGridMixin#xUnits .xUnits} function specifying that the x values are floating-point\n * numbers with the given precision.\n * The returned function determines how many values at the given precision will fit into the range\n * supplied in its start and end parameters.\n * @method precision\n * @memberof dc.units.fp\n * @see {@link dc.coordinateGridMixin#xUnits coordinateGridMixin.xUnits}\n * @example\n * // specify values (and ticks) every 0.1 units\n * chart.xUnits(dc.units.fp.precision(0.1)\n * // there are 500 units between 0.5 and 1 if the precision is 0.001\n * var thousandths = dc.units.fp.precision(0.001);\n * thousandths(0.5, 1.0) // returns 500\n * @param {Number} precision\n * @returns {Function} start-end unit function\n */\ndc.units.fp.precision = function (precision) {\n    var _f = function (s, e) {\n        var d = Math.abs((e - s) / _f.resolution);\n        if (dc.utils.isNegligible(d - Math.floor(d))) {\n            return Math.floor(d);\n        } else {\n            return Math.ceil(d);\n        }\n    };\n    _f.resolution = precision;\n    return _f;\n};\n\ndc.round = {};\ndc.round.floor = function (n) {\n    return Math.floor(n);\n};\ndc.round.ceil = function (n) {\n    return Math.ceil(n);\n};\ndc.round.round = function (n) {\n    return Math.round(n);\n};\n\ndc.override = function (obj, functionName, newFunction) {\n    var existingFunction = obj[functionName];\n    obj['_' + functionName] = existingFunction;\n    obj[functionName] = newFunction;\n};\n\ndc.renderlet = function (_) {\n    if (!arguments.length) {\n        return dc._renderlet;\n    }\n    dc._renderlet = _;\n    return dc;\n};\n\ndc.instanceOfChart = function (o) {\n    return o instanceof Object && o.__dcFlag__ && true;\n};\n\ndc.errors = {};\n\ndc.errors.Exception = function (msg) {\n    var _msg = msg || 'Unexpected internal error';\n\n    this.message = _msg;\n\n    this.toString = function () {\n        return _msg;\n    };\n    this.stack = (new Error()).stack;\n};\ndc.errors.Exception.prototype = Object.create(Error.prototype);\ndc.errors.Exception.prototype.constructor = dc.errors.Exception;\n\ndc.errors.InvalidStateException = function () {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.errors.InvalidStateException.prototype = Object.create(dc.errors.Exception.prototype);\ndc.errors.InvalidStateException.prototype.constructor = dc.errors.InvalidStateException;\n\ndc.errors.BadArgumentException = function () {\n    dc.errors.Exception.apply(this, arguments);\n};\n\ndc.errors.BadArgumentException.prototype = Object.create(dc.errors.Exception.prototype);\ndc.errors.BadArgumentException.prototype.constructor = dc.errors.BadArgumentException;\n\n/**\n * The default date format for dc.js\n * @name dateFormat\n * @memberof dc\n * @type {Function}\n * @default d3.timeFormat('%m/%d/%Y')\n */\ndc.dateFormat = d3.timeFormat('%m/%d/%Y');\n\n/**\n * @namespace printers\n * @memberof dc\n * @type {{}}\n */\ndc.printers = {};\n\n/**\n * Converts a list of filters into a readable string.\n * @method filters\n * @memberof dc.printers\n * @param {Array<dc.filters>} filters\n * @returns {String}\n */\ndc.printers.filters = function (filters) {\n    var s = '';\n\n    for (var i = 0; i < filters.length; ++i) {\n        if (i > 0) {\n            s += ', ';\n        }\n        s += dc.printers.filter(filters[i]);\n    }\n\n    return s;\n};\n\n/**\n * Converts a filter into a readable string.\n * @method filter\n * @memberof dc.printers\n * @param {dc.filters|any|Array<any>} filter\n * @returns {String}\n */\ndc.printers.filter = function (filter) {\n    var s = '';\n\n    if (typeof filter !== 'undefined' && filter !== null) {\n        if (filter instanceof Array) {\n            if (filter.length >= 2) {\n                s = '[' + dc.utils.printSingleValue(filter[0]) + ' -> ' + dc.utils.printSingleValue(filter[1]) + ']';\n            } else if (filter.length >= 1) {\n                s = dc.utils.printSingleValue(filter[0]);\n            }\n        } else {\n            s = dc.utils.printSingleValue(filter);\n        }\n    }\n\n    return s;\n};\n\n/**\n * Returns a function that given a string property name, can be used to pluck the property off an object.  A function\n * can be passed as the second argument to also alter the data being returned.\n *\n * This can be a useful shorthand method to create accessor functions.\n * @method pluck\n * @memberof dc\n * @example\n * var xPluck = dc.pluck('x');\n * var objA = {x: 1};\n * xPluck(objA) // 1\n * @example\n * var xPosition = dc.pluck('x', function (x, i) {\n *     // `this` is the original datum,\n *     // `x` is the x property of the datum,\n *     // `i` is the position in the array\n *     return this.radius + x;\n * });\n * dc.selectAll('.circle').data(...).x(xPosition);\n * @param {String} n\n * @param {Function} [f]\n * @returns {Function}\n */\ndc.pluck = function (n, f) {\n    if (!f) {\n        return function (d) { return d[n]; };\n    }\n    return function (d, i) { return f.call(d, d[n], i); };\n};\n\n/**\n * @namespace utils\n * @memberof dc\n * @type {{}}\n */\ndc.utils = {};\n\n/**\n * Print a single value filter.\n * @method printSingleValue\n * @memberof dc.utils\n * @param {any} filter\n * @returns {String}\n */\ndc.utils.printSingleValue = function (filter) {\n    var s = '' + filter;\n\n    if (filter instanceof Date) {\n        s = dc.dateFormat(filter);\n    } else if (typeof(filter) === 'string') {\n        s = filter;\n    } else if (dc.utils.isFloat(filter)) {\n        s = dc.utils.printSingleValue.fformat(filter);\n    } else if (dc.utils.isInteger(filter)) {\n        s = Math.round(filter);\n    }\n\n    return s;\n};\ndc.utils.printSingleValue.fformat = d3.format('.2f');\n\n// convert 'day' to 'timeDay' and similar\ndc.utils.toTimeFunc = function (t) {\n    return 'time' + t.charAt(0).toUpperCase() + t.slice(1);\n};\n\n/**\n * Arbitrary add one value to another.\n *\n * If the value l is of type Date, adds r units to it. t becomes the unit.\n * For example dc.utils.add(dt, 3, 'week') will add 3 (r = 3) weeks (t= 'week') to dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * dc.utils.add(30, 10) will give 40 and dc.utils.add(30, '10') will give 33.\n *\n * They also generate strange results if l is a string.\n * @method add\n * @memberof dc.utils\n * @param {Date|Number} l the value to modify\n * @param {String|Number} r the amount by which to modify the value\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n * @returns {Date|Number}\n */\ndc.utils.add = function (l, r, t) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() + r);\n        }\n        t = t || d3.timeDay;\n        if (typeof t !== 'function') {\n            t = d3[dc.utils.toTimeFunc(t)];\n        }\n        return t.offset(l, r);\n    } else if (typeof r === 'string') {\n        var percentage = (+r / 100);\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l + r;\n    }\n};\n\n/**\n * Arbitrary subtract one value from another.\n *\n * If the value l is of type Date, subtracts r units from it. t becomes the unit.\n * For example dc.utils.subtract(dt, 3, 'week') will subtract 3 (r = 3) weeks (t= 'week') from dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * dc.utils.subtract(30, 10) will give 20 and dc.utils.subtract(30, '10') will give 27.\n *\n * They also generate strange results if l is a string.\n * @method subtract\n * @memberof dc.utils\n * @param {Date|Number} l the value to modify\n * @param {String|Number} r the amount by which to modify the value\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n * @returns {Date|Number}\n */\ndc.utils.subtract = function (l, r, t) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() - r);\n        }\n        t = t || d3.timeDay;\n        if (typeof t !== 'function') {\n            t = d3[dc.utils.toTimeFunc(t)];\n        }\n        return t.offset(l, -r);\n    } else if (typeof r === 'string') {\n        var percentage = (+r / 100);\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l - r;\n    }\n};\n\n/**\n * Is the value a number?\n * @method isNumber\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isNumber = function (n) {\n    return n === +n;\n};\n\n/**\n * Is the value a float?\n * @method isFloat\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isFloat = function (n) {\n    return n === +n && n !== (n | 0);\n};\n\n/**\n * Is the value an integer?\n * @method isInteger\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isInteger = function (n) {\n    return n === +n && n === (n | 0);\n};\n\n/**\n * Is the value very close to zero?\n * @method isNegligible\n * @memberof dc.utils\n * @param {any} n\n * @returns {Boolean}\n */\ndc.utils.isNegligible = function (n) {\n    return !dc.utils.isNumber(n) || (n < dc.constants.NEGLIGIBLE_NUMBER && n > -dc.constants.NEGLIGIBLE_NUMBER);\n};\n\n/**\n * Ensure the value is no greater or less than the min/max values.  If it is return the boundary value.\n * @method clamp\n * @memberof dc.utils\n * @param {any} val\n * @param {any} min\n * @param {any} max\n * @returns {any}\n */\ndc.utils.clamp = function (val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n};\n\n/**\n * Given `x`, return a function that always returns `x`.\n *\n * {@link https://github.com/d3/d3/blob/master/CHANGES.md#internals `d3.functor` was removed in d3 version 4}.\n * This function helps to implement the replacement,\n * `typeof x === \"function\" ? x : dc.utils.constant(x)`\n * @method constant\n * @memberof dc.utils\n * @param {any} x\n * @returns {Function}\n */\ndc.utils.constant = function (x) {\n    return function () {\n        return x;\n    };\n};\n\n/**\n * Using a simple static counter, provide a unique integer id.\n * @method uniqueId\n * @memberof dc.utils\n * @returns {Number}\n */\nvar _idCounter = 0;\ndc.utils.uniqueId = function () {\n    return ++_idCounter;\n};\n\n/**\n * Convert a name to an ID.\n * @method nameToId\n * @memberof dc.utils\n * @param {String} name\n * @returns {String}\n */\ndc.utils.nameToId = function (name) {\n    return name.toLowerCase().replace(/[\\s]/g, '_').replace(/[\\.']/g, '');\n};\n\n/**\n * Append or select an item on a parent element.\n * @method appendOrSelect\n * @memberof dc.utils\n * @param {d3.selection} parent\n * @param {String} selector\n * @param {String} tag\n * @returns {d3.selection}\n */\ndc.utils.appendOrSelect = function (parent, selector, tag) {\n    tag = tag || selector;\n    var element = parent.select(selector);\n    if (element.empty()) {\n        element = parent.append(tag);\n    }\n    return element;\n};\n\n/**\n * Return the number if the value is a number; else 0.\n * @method safeNumber\n * @memberof dc.utils\n * @param {Number|any} n\n * @returns {Number}\n */\ndc.utils.safeNumber = function (n) { return dc.utils.isNumber(+n) ? +n : 0;};\n\n/**\n * Return true if both arrays are equal, if both array are null these are considered equal\n * @method arraysEqual\n * @memberof dc.utils\n * @param {Array|null} a1\n * @param {Array|null} a2\n * @returns {Boolean}\n */\ndc.utils.arraysEqual = function (a1, a2) {\n    if (!a1 || !a2) {\n        return a1 === a2;\n    }\n\n    return a1.length === a2.length &&\n        // If elements are not integers/strings, we hope that it will match because of toString\n        // Test cases cover dates as well.\n        a1.every(function (elem, i) {\n            return elem === a2[i] || elem.toString() === a2[i].toString();\n        });\n};\n\n// ******** Sunburst Chart ********\ndc.utils.allChildren = function (node) {\n    var paths = [];\n    paths.push(node.path);\n    console.log('currentNode', node);\n    if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            paths = paths.concat(dc.utils.allChildren(node.children[i]));\n        }\n    }\n    return paths;\n};\n\n// builds a d3 Hierarchy from a collection\n// TODO: turn this monster method something better.\ndc.utils.toHierarchy = function (list, accessor) {\n    var root = {'key': 'root', 'children': []};\n    for (var i = 0; i < list.length; i++) {\n        var data = list[i];\n        var parts = data.key;\n        var value = accessor(data);\n        var currentNode = root;\n        for (var j = 0; j < parts.length; j++) {\n            var currentPath = parts.slice(0, j + 1);\n            var children = currentNode.children;\n            var nodeName = parts[j];\n            var childNode;\n            if (j + 1 < parts.length) {\n                // Not yet at the end of the sequence; move down the tree.\n                childNode = findChild(children, nodeName);\n\n                // If we don't already have a child node for this branch, create it.\n                if (childNode === void 0) {\n                    childNode = {'key': nodeName, 'children': [], 'path': currentPath};\n                    children.push(childNode);\n                }\n                currentNode = childNode;\n            } else {\n                // Reached the end of the sequence; create a leaf node.\n                childNode = {'key': nodeName, 'value': value, 'data': data, 'path': currentPath};\n                children.push(childNode);\n            }\n        }\n    }\n    return root;\n};\n\nfunction findChild (children, nodeName) {\n    for (var k = 0; k < children.length; k++) {\n        if (children[k].key === nodeName) {\n            return children[k];\n        }\n    }\n}\n\ndc.utils.getAncestors = function (node) {\n    var path = [];\n    var current = node;\n    while (current.parent) {\n        path.unshift(current.name);\n        current = current.parent;\n    }\n    return path;\n};\n\ndc.utils.arraysIdentical = function (a, b) {\n    var i = a.length;\n    if (i !== b.length) {\n        return false;\n    }\n    while (i--) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Provides basis logging and deprecation utilities\n * @class logger\n * @memberof dc\n * @returns {dc.logger}\n */\ndc.logger = (function () {\n\n    var _logger = {};\n\n    /**\n     * Enable debug level logging. Set to `false` by default.\n     * @name enableDebugLog\n     * @memberof dc.logger\n     * @instance\n     */\n    _logger.enableDebugLog = false;\n\n    /**\n     * Put a warning message to console\n     * @method warn\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.warn('Invalid use of .tension on CurveLinear');\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.warn = function (msg) {\n        if (console) {\n            if (console.warn) {\n                console.warn(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return _logger;\n    };\n\n    var _alreadyWarned = {};\n\n    /**\n     * Put a warning message to console. It will warn only on unique messages.\n     * @method warnOnce\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.warnOnce('Invalid use of .tension on CurveLinear');\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.warnOnce = function (msg) {\n        if (!_alreadyWarned[msg]) {\n            _alreadyWarned[msg] = true;\n\n            dc.logger.warn(msg);\n        }\n\n        return _logger;\n    };\n\n    /**\n     * Put a debug message to console. It is controlled by `dc.logger.enableDebugLog`\n     * @method debug\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * dc.logger.debug('Total number of slices: ' + numSlices);\n     * @param {String} [msg]\n     * @returns {dc.logger}\n     */\n    _logger.debug = function (msg) {\n        if (_logger.enableDebugLog && console) {\n            if (console.debug) {\n                console.debug(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return _logger;\n    };\n\n    /**\n     * Use it to deprecate a function. It will return a wrapped version of the function, which will\n     * will issue a warning when invoked. For each function, warning will be issued only once.\n     *\n     * @method deprecate\n     * @memberof dc.logger\n     * @instance\n     * @example\n     * _chart.interpolate = dc.logger.deprecate(function (interpolate) {\n     *    if (!arguments.length) {\n     *        return _interpolate;\n     *    }\n     *    _interpolate = interpolate;\n     *    return _chart;\n     * }, 'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\n     * @param {Function} [fn]\n     * @param {String} [msg]\n     * @returns {Function}\n     */\n    _logger.deprecate = function (fn, msg) {\n        // Allow logging of deprecation\n        var warned = false;\n        function deprecated () {\n            if (!warned) {\n                _logger.warn(msg);\n                warned = true;\n            }\n            return fn.apply(this, arguments);\n        }\n        return deprecated;\n    };\n\n    return _logger;\n})();\n\n/**\n * General configuration\n *\n * @class config\n * @memberof dc\n * @returns {dc.config}\n */\ndc.config = (function () {\n    var _config = {};\n\n    // D3v5 has removed schemeCategory20c, copied here for backward compatibility\n    var _schemeCategory20c = [\n        '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d',\n        '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476',\n        '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n        '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\n    var _defaultColors = _schemeCategory20c;\n\n    /**\n     * Set the default color scheme for ordinal charts. Changing it will impact all ordinal charts.\n     *\n     * By default it is set to a copy of\n     * `d3.schemeCategory20c` for backward compatibility. This color scheme has been\n     * [removed from D3v5](https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50).\n     * In DC 3.1 release it will change to a more appropriate default.\n     *\n     * @example\n     * dc.config.defaultColors(d3.schemeSet1)\n     * @method defaultColors\n     * @memberof dc.config\n     * @instance\n     * @param {Array} [colors]\n     * @returns {Array|dc.config}\n     */\n    _config.defaultColors = function (colors) {\n        if (!arguments.length) {\n            // Issue warning if it uses _schemeCategory20c\n            if (_defaultColors === _schemeCategory20c) {\n                dc.logger.warnOnce('You are using d3.schemeCategory20c, which has been removed in D3v5. ' +\n                    'See the explanation at https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50. ' +\n                    'DC is using it for backward compatibility, however it will be changed in DCv3.1. ' +\n                    'You can change it by calling dc.config.defaultColors(newScheme). ' +\n                    'See https://github.com/d3/d3-scale-chromatic for some alternatives.');\n            }\n            return _defaultColors;\n        }\n        _defaultColors = colors;\n        return _config;\n    };\n\n    return _config;\n})();\n\ndc.events = {\n    current: null\n};\n\n/**\n * This function triggers a throttled event function with a specified delay (in milli-seconds).  Events\n * that are triggered repetitively due to user interaction such brush dragging might flood the library\n * and invoke more renders than can be executed in time. Using this function to wrap your event\n * function allows the library to smooth out the rendering by throttling events and only responding to\n * the most recent event.\n * @name events.trigger\n * @memberof dc\n * @example\n * chart.on('renderlet', function(chart) {\n *     // smooth the rendering through event throttling\n *     dc.events.trigger(function(){\n *         // focus some other chart to the range selected by user on this chart\n *         someOtherChart.focus(chart.filter());\n *     });\n * })\n * @param {Function} closure\n * @param {Number} [delay]\n */\ndc.events.trigger = function (closure, delay) {\n    if (!delay) {\n        closure();\n        return;\n    }\n\n    dc.events.current = closure;\n\n    setTimeout(function () {\n        if (closure === dc.events.current) {\n            closure();\n        }\n    }, delay);\n};\n\n/**\n * The dc.js filters are functions which are passed into crossfilter to chose which records will be\n * accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one\n * dimension will affect all the other dimensions but not that one.  dc always applies a filter\n * function to the dimension; the function combines multiple filters and if any of them accept a\n * record, it is filtered in.\n *\n * These filter constructors are used as appropriate by the various charts to implement brushing.  We\n * mention below which chart uses which filter.  In some cases, many instances of a filter will be added.\n *\n * Each of the dc.js filters is an object with the following properties:\n * * `isFiltered` - a function that returns true if a value is within the filter\n * * `filterType` - a string identifying the filter, here the name of the constructor\n *\n * Currently these filter objects are also arrays, but this is not a requirement. Custom filters\n * can be used as long as they have the properties above.\n * @namespace filters\n * @memberof dc\n * @type {{}}\n */\ndc.filters = {};\n\n/**\n * RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X\n * axis brushing for the {@link dc.coordinateGridMixin coordinate grid charts}.\n *\n * Its `filterType` is 'RangedFilter'\n * @name RangedFilter\n * @memberof dc.filters\n * @param {Number} low\n * @param {Number} high\n * @returns {Array<Number>}\n * @constructor\n */\ndc.filters.RangedFilter = function (low, high) {\n    var range = new Array(low, high);\n    range.isFiltered = function (value) {\n        return value >= this[0] && value < this[1];\n    };\n    range.filterType = 'RangedFilter';\n\n    return range;\n};\n\n/**\n * TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the\n * {@link dc.heatMap heat map chart} to include particular cells as they are clicked.  (Rows and columns are\n * filtered by filtering all the cells in the row or column.)\n *\n * Its `filterType` is 'TwoDimensionalFilter'\n * @name TwoDimensionalFilter\n * @memberof dc.filters\n * @param {Array<Number>} filter\n * @returns {Array<Number>}\n * @constructor\n */\ndc.filters.TwoDimensionalFilter = function (filter) {\n    if (filter === null) { return null; }\n\n    var f = filter;\n    f.isFiltered = function (value) {\n        return value.length && value.length === f.length &&\n               value[0] === f[0] && value[1] === f[1];\n    };\n    f.filterType = 'TwoDimensionalFilter';\n\n    return f;\n};\n\n/**\n * The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular\n * region. It is used by the {@link dc.scatterPlot scatter plot} to implement rectangular brushing.\n *\n * It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that\n * `x1 <= x2` and `y1 <= y2`. It then returns a filter which accepts any points which are in the\n * rectangular range including the lower values but excluding the higher values.\n *\n * If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as\n * two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <\n * x2`.\n *\n * Its `filterType` is 'RangedTwoDimensionalFilter'\n * @name RangedTwoDimensionalFilter\n * @memberof dc.filters\n * @param {Array<Array<Number>>} filter\n * @returns {Array<Array<Number>>}\n * @constructor\n */\ndc.filters.RangedTwoDimensionalFilter = function (filter) {\n    if (filter === null) { return null; }\n\n    var f = filter;\n    var fromBottomLeft;\n\n    if (f[0] instanceof Array) {\n        fromBottomLeft = [\n            [Math.min(filter[0][0], filter[1][0]), Math.min(filter[0][1], filter[1][1])],\n            [Math.max(filter[0][0], filter[1][0]), Math.max(filter[0][1], filter[1][1])]\n        ];\n    } else {\n        fromBottomLeft = [[filter[0], -Infinity], [filter[1], Infinity]];\n    }\n\n    f.isFiltered = function (value) {\n        var x, y;\n\n        if (value instanceof Array) {\n            x = value[0];\n            y = value[1];\n        } else {\n            x = value;\n            y = fromBottomLeft[0][1];\n        }\n\n        return x >= fromBottomLeft[0][0] && x < fromBottomLeft[1][0] &&\n               y >= fromBottomLeft[0][1] && y < fromBottomLeft[1][1];\n    };\n    f.filterType = 'RangedTwoDimensionalFilter';\n\n    return f;\n};\n\n// ******** Sunburst Chart ********\n\n/**\n * HierarchyFilter is a filter which accepts a key path as an array. It matches any node at, or\n * child of, the given path. It is used by the {@link dc.sunburstChart sunburst chart} to include particular cells and all\n * their children as they are clicked.\n *\n * @name HierarchyFilter\n * @memberof dc.filters\n * @param {String} path\n * @returns {Array<String>}\n * @constructor\n */\ndc.filters.HierarchyFilter = function (path) {\n    if (path === null) {\n        return null;\n    }\n\n    var filter = path.slice(0);\n    filter.isFiltered = function (value) {\n        if (!(filter.length && value && value.length && value.length >= filter.length)) {\n            return false;\n        }\n\n        for (var i = 0; i < filter.length; i++) {\n            if (value[i] !== filter[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n    return filter;\n};\n\n/**\n * `dc.baseMixin` is an abstract functional object representing a basic `dc` chart object\n * for all chart and widget implementations. Methods from the {@link #dc.baseMixin dc.baseMixin} are inherited\n * and available on all chart implementations in the `dc` library.\n * @name baseMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.baseMixin}\n */\ndc.baseMixin = function (_chart) {\n    _chart.__dcFlag__ = dc.utils.uniqueId();\n\n    var _dimension;\n    var _group;\n\n    var _anchor;\n    var _root;\n    var _svg;\n    var _isChild;\n\n    var _minWidth = 200;\n    var _defaultWidthCalc = function (element) {\n        var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n        return (width && width > _minWidth) ? width : _minWidth;\n    };\n    var _widthCalc = _defaultWidthCalc;\n\n    var _minHeight = 200;\n    var _defaultHeightCalc = function (element) {\n        var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n        return (height && height > _minHeight) ? height : _minHeight;\n    };\n    var _heightCalc = _defaultHeightCalc;\n    var _width, _height;\n    var _useViewBoxResizing = false;\n\n    var _keyAccessor = dc.pluck('key');\n    var _valueAccessor = dc.pluck('value');\n    var _label = dc.pluck('key');\n\n    var _ordering = dc.pluck('key');\n    var _orderSort;\n\n    var _renderLabel = false;\n\n    var _title = function (d) {\n        return _chart.keyAccessor()(d) + ': ' + _chart.valueAccessor()(d);\n    };\n    var _renderTitle = true;\n    var _controlsUseVisibility = false;\n\n    var _transitionDuration = 750;\n\n    var _transitionDelay = 0;\n\n    var _filterPrinter = dc.printers.filters;\n\n    var _mandatoryAttributes = ['dimension', 'group'];\n\n    var _chartGroup = dc.constants.DEFAULT_CHART_GROUP;\n\n    var _listeners = d3.dispatch(\n        'preRender',\n        'postRender',\n        'preRedraw',\n        'postRedraw',\n        'filtered',\n        'zoomed',\n        'renderlet',\n        'pretransition');\n\n    var _legend;\n    var _commitHandler;\n\n    var _filters = [];\n    var _filterHandler = function (dimension, filters) {\n        if (filters.length === 0) {\n            dimension.filter(null);\n        } else if (filters.length === 1 && !filters[0].isFiltered) {\n            // single value and not a function-based filter\n            dimension.filterExact(filters[0]);\n        } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n            // single range-based filter\n            dimension.filterRange(filters[0]);\n        } else {\n            dimension.filterFunction(function (d) {\n                for (var i = 0; i < filters.length; i++) {\n                    var filter = filters[i];\n                    if (filter.isFiltered && filter.isFiltered(d)) {\n                        return true;\n                    } else if (filter <= d && filter >= d) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return filters;\n    };\n\n    var _data = function (group) {\n        return group.all();\n    };\n\n    /**\n     * Set or get the height attribute of a chart. The height is applied to the SVGElement generated by\n     * the chart when rendered (or re-rendered). If a value is given, then it will be used to calculate\n     * the new height and the chart returned for method chaining.  The value can either be a numeric, a\n     * function, or falsy. If no value is specified then the value of the current height attribute will\n     * be returned.\n     *\n     * By default, without an explicit height being given, the chart will select the width of its\n     * anchor element. If that isn't possible it defaults to 200 (provided by the\n     * {@link dc.baseMixin#minHeight minHeight} property). Setting the value falsy will return\n     * the chart to the default behavior.\n     * @method height\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#minHeight minHeight}\n     * @example\n     * // Default height\n     * chart.height(function (element) {\n     *     var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n     *     return (height && height > chart.minHeight()) ? height : chart.minHeight();\n     * });\n     *\n     * chart.height(250); // Set the chart's height to 250px;\n     * chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function\n     * chart.height(null); // reset the height to the default auto calculation\n     * @param {Number|Function} [height]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.height = function (height) {\n        if (!arguments.length) {\n            if (!dc.utils.isNumber(_height)) {\n                // only calculate once\n                _height = _heightCalc(_root.node());\n            }\n            return _height;\n        }\n        _heightCalc = height ? (typeof height === 'function' ? height : dc.utils.constant(height)) : _defaultHeightCalc;\n        _height = undefined;\n        return _chart;\n    };\n\n    /**\n     * Set or get the width attribute of a chart.\n     * @method width\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#height height}\n     * @see {@link dc.baseMixin#minWidth minWidth}\n     * @example\n     * // Default width\n     * chart.width(function (element) {\n     *     var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n     *     return (width && width > chart.minWidth()) ? width : chart.minWidth();\n     * });\n     * @param {Number|Function} [width]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.width = function (width) {\n        if (!arguments.length) {\n            if (!dc.utils.isNumber(_width)) {\n                // only calculate once\n                _width = _widthCalc(_root.node());\n            }\n            return _width;\n        }\n        _widthCalc = width ? (typeof width === 'function' ? width : dc.utils.constant(width)) : _defaultWidthCalc;\n        _width = undefined;\n        return _chart;\n    };\n\n    /**\n     * Set or get the minimum width attribute of a chart. This only has effect when used with the default\n     * {@link dc.baseMixin#width width} function.\n     * @method minWidth\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#width width}\n     * @param {Number} [minWidth=200]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.minWidth = function (minWidth) {\n        if (!arguments.length) {\n            return _minWidth;\n        }\n        _minWidth = minWidth;\n        return _chart;\n    };\n\n    /**\n     * Set or get the minimum height attribute of a chart. This only has effect when used with the default\n     * {@link dc.baseMixin#height height} function.\n     * @method minHeight\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#height height}\n     * @param {Number} [minHeight=200]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.minHeight = function (minHeight) {\n        if (!arguments.length) {\n            return _minHeight;\n        }\n        _minHeight = minHeight;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off using the SVG\n     * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox `viewBox` attribute}.\n     * When enabled, `viewBox` will be set on the svg root element instead of `width` and `height`.\n     * Requires that the chart aspect ratio be defined using chart.width(w) and chart.height(h).\n     *\n     * This will maintain the aspect ratio while enabling the chart to resize responsively to the\n     * space given to the chart using CSS. For example, the chart can use `width: 100%; height:\n     * 100%` or absolute positioning to resize to its parent div.\n     *\n     * Since the text will be sized as if the chart is drawn according to the width and height, and\n     * will be resized if the chart is any other size, you need to set the chart width and height so\n     * that the text looks good. In practice, 600x400 seems to work pretty well for most charts.\n     *\n     * You can see examples of this resizing strategy in the [Chart Resizing\n     * Examples](http://dc-js.github.io/dc.js/resizing/); just add `?resize=viewbox` to any of the\n     * one-chart examples to enable `useViewBoxResizing`.\n     * @method useViewBoxResizing\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [useViewBoxResizing=false]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.useViewBoxResizing = function (useViewBoxResizing) {\n        if (!arguments.length) {\n            return _useViewBoxResizing;\n        }\n        _useViewBoxResizing = useViewBoxResizing;\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Set or get the dimension attribute of a chart. In `dc`, a dimension can be any valid\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter dimension}\n     *\n     * If a value is given, then it will be used as the new dimension. If no value is specified then\n     * the current dimension will be returned.\n     * @method dimension\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter.dimension}\n     * @example\n     * var index = crossfilter([]);\n     * var dimension = index.dimension(dc.pluck('key'));\n     * chart.dimension(dimension);\n     * @param {crossfilter.dimension} [dimension]\n     * @returns {crossfilter.dimension|dc.baseMixin}\n     */\n    _chart.dimension = function (dimension) {\n        if (!arguments.length) {\n            return _dimension;\n        }\n        _dimension = dimension;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * Set the data callback or retrieve the chart's data set. The data callback is passed the chart's\n     * group and by default will return\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all}.\n     * This behavior may be modified to, for instance, return only the top 5 groups.\n     * @method data\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // Default data function\n     * chart.data(function (group) { return group.all(); });\n     *\n     * chart.data(function (group) { return group.top(5); });\n     * @param {Function} [callback]\n     * @returns {*|dc.baseMixin}\n     */\n    _chart.data = function (callback) {\n        if (!arguments.length) {\n            return _data.call(_chart, _group);\n        }\n        _data = typeof callback === 'function' ? callback : dc.utils.constant(callback);\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Set or get the group attribute of a chart. In `dc` a group is a\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter group}.\n     * Usually the group should be created from the particular dimension associated with the same chart. If a value is\n     * given, then it will be used as the new group.\n     *\n     * If no value specified then the current group will be returned.\n     * If `name` is specified then it will be used to generate legend label.\n     * @method group\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n     * @example\n     * var index = crossfilter([]);\n     * var dimension = index.dimension(dc.pluck('key'));\n     * chart.dimension(dimension);\n     * chart.group(dimension.group(crossfilter.reduceSum()));\n     * @param {crossfilter.group} [group]\n     * @param {String} [name]\n     * @returns {crossfilter.group|dc.baseMixin}\n     */\n    _chart.group = function (group, name) {\n        if (!arguments.length) {\n            return _group;\n        }\n        _group = group;\n        _chart._groupName = name;\n        _chart.expireCache();\n        return _chart;\n    };\n\n    /**\n     * Get or set an accessor to order ordinal dimensions.  The chart uses\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\n     * to sort elements; this accessor returns the value to order on.\n     * @method ordering\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#quicksort_by crossfilter.quicksort.by}\n     * @example\n     * // Default ordering accessor\n     * _chart.ordering(dc.pluck('key'));\n     * @param {Function} [orderFunction]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.ordering = function (orderFunction) {\n        if (!arguments.length) {\n            return _ordering;\n        }\n        _ordering = orderFunction;\n        _orderSort = crossfilter.quicksort.by(_ordering);\n        _chart.expireCache();\n        return _chart;\n    };\n\n    _chart._computeOrderedGroups = function (data) {\n        var dataCopy = data.slice(0);\n\n        if (dataCopy.length <= 1) {\n            return dataCopy;\n        }\n\n        if (!_orderSort) {\n            _orderSort = crossfilter.quicksort.by(_ordering);\n        }\n\n        return _orderSort(dataCopy, 0, dataCopy.length);\n    };\n\n    /**\n     * Clear all filters associated with this chart. The same effect can be achieved by calling\n     * {@link dc.baseMixin#filter chart.filter(null)}.\n     * @method filterAll\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.filterAll = function () {\n        return _chart.filter(null);\n    };\n\n    /**\n     * Execute d3 single selection in the chart's scope using the given selector and return the d3\n     * selection.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     * @method select\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3.select}\n     * @example\n     * // Has the same effect as d3.select('#chart-id').select(selector)\n     * chart.select(selector)\n     * @returns {d3.selection}\n     */\n    _chart.select = function (s) {\n        return _root.select(s);\n    };\n\n    /**\n     * Execute in scope d3 selectAll using the given selector and return d3 selection result.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     * @method selectAll\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#selectAll d3.selectAll}\n     * @example\n     * // Has the same effect as d3.select('#chart-id').selectAll(selector)\n     * chart.selectAll(selector)\n     * @returns {d3.selection}\n     */\n    _chart.selectAll = function (s) {\n        return _root ? _root.selectAll(s) : null;\n    };\n\n    /**\n     * Set the root SVGElement to either be an existing chart's root; or any valid [d3 single\n     * selector](https://github.com/d3/d3-selection/blob/master/README.md#selecting-elements) specifying a dom\n     * block element such as a div; or a dom element or d3 selection. Optionally registers the chart\n     * within the chartGroup. This class is called internally on chart initialization, but be called\n     * again to relocate the chart. However, it will orphan any previously created SVGElements.\n     * @method anchor\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {anchorChart|anchorSelector|anchorNode} [parent]\n     * @param {String} [chartGroup]\n     * @returns {String|node|d3.selection|dc.baseMixin}\n     */\n    _chart.anchor = function (parent, chartGroup) {\n        if (!arguments.length) {\n            return _anchor;\n        }\n        if (dc.instanceOfChart(parent)) {\n            _anchor = parent.anchor();\n            _root = parent.root();\n            _isChild = true;\n        } else if (parent) {\n            if (parent.select && parent.classed) { // detect d3 selection\n                _anchor = parent.node();\n            } else {\n                _anchor = parent;\n            }\n            _root = d3.select(_anchor);\n            _root.classed(dc.constants.CHART_CLASS, true);\n            dc.registerChart(_chart, chartGroup);\n            _isChild = false;\n        } else {\n            throw new dc.errors.BadArgumentException('parent must be defined');\n        }\n        _chartGroup = chartGroup;\n        return _chart;\n    };\n\n    /**\n     * Returns the DOM id for the chart's anchored location.\n     * @method anchorName\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {String}\n     */\n    _chart.anchorName = function () {\n        var a = _chart.anchor();\n        if (a && a.id) {\n            return a.id;\n        }\n        if (a && a.replace) {\n            return a.replace('#', '');\n        }\n        return 'dc-chart' + _chart.chartID();\n    };\n\n    /**\n     * Returns the root element where a chart resides. Usually it will be the parent div element where\n     * the SVGElement was created. You can also pass in a new root element however this is usually handled by\n     * dc internally. Resetting the root element on a chart outside of dc internals may have\n     * unexpected consequences.\n     * @method root\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement HTMLElement}\n     * @param {HTMLElement} [rootElement]\n     * @returns {HTMLElement|dc.baseMixin}\n     */\n    _chart.root = function (rootElement) {\n        if (!arguments.length) {\n            return _root;\n        }\n        _root = rootElement;\n        return _chart;\n    };\n\n    /**\n     * Returns the top SVGElement for this specific chart. You can also pass in a new SVGElement,\n     * however this is usually handled by dc internally. Resetting the SVGElement on a chart outside\n     * of dc internals may have unexpected consequences.\n     * @method svg\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\n     * @param {SVGElement|d3.selection} [svgElement]\n     * @returns {SVGElement|d3.selection|dc.baseMixin}\n     */\n    _chart.svg = function (svgElement) {\n        if (!arguments.length) {\n            return _svg;\n        }\n        _svg = svgElement;\n        return _chart;\n    };\n\n    /**\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\n     * @method resetSvg\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\n     * @returns {SVGElement}\n     */\n    _chart.resetSvg = function () {\n        _chart.select('svg').remove();\n        return generateSvg();\n    };\n\n    function sizeSvg () {\n        if (_svg) {\n            if (!_useViewBoxResizing) {\n                _svg\n                    .attr('width', _chart.width())\n                    .attr('height', _chart.height());\n            } else if (!_svg.attr('viewBox')) {\n                _svg\n                    .attr('viewBox', '0 0 ' + _chart.width() + ' ' + _chart.height());\n            }\n        }\n    }\n\n    function generateSvg () {\n        _svg = _chart.root().append('svg');\n        sizeSvg();\n        return _svg;\n    }\n\n    /**\n     * Set or get the filter printer function. The filter printer function is used to generate human\n     * friendly text for filter value(s) associated with the chart instance. The text will get shown\n     * in the `.filter element; see {@link dc.baseMixin#turnOnControls turnOnControls}.\n     *\n     * By default dc charts use a default filter printer {@link dc.printers.filters dc.printers.filters}\n     * that provides simple printing support for both single value and ranged filters.\n     * @method filterPrinter\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // for a chart with an ordinal brush, print the filters in upper case\n     * chart.filterPrinter(function(filters) {\n     *   return filters.map(function(f) { return f.toUpperCase(); }).join(', ');\n     * });\n     * // for a chart with a range brush, print the filter as start and extent\n     * chart.filterPrinter(function(filters) {\n     *   return 'start ' + dc.utils.printSingleValue(filters[0][0]) +\n     *     ' extent ' + dc.utils.printSingleValue(filters[0][1] - filters[0][0]);\n     * });\n     * @param {Function} [filterPrinterFunction=dc.printers.filters]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.filterPrinter = function (filterPrinterFunction) {\n        if (!arguments.length) {\n            return _filterPrinter;\n        }\n        _filterPrinter = filterPrinterFunction;\n        return _chart;\n    };\n\n    /**\n     * If set, use the `visibility` attribute instead of the `display` attribute for showing/hiding\n     * chart reset and filter controls, for less disruption to the layout.\n     * @method controlsUseVisibility\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [controlsUseVisibility=false]\n     * @returns {Boolean|dc.baseMixin}\n     **/\n    _chart.controlsUseVisibility = function (useVisibility) {\n        if (!arguments.length) {\n            return _controlsUseVisibility;\n        }\n        _controlsUseVisibility = useVisibility;\n        return _chart;\n    };\n\n    /**\n     * Turn on optional control elements within the root element. dc currently supports the\n     * following html control elements.\n     * * root.selectAll('.reset') - elements are turned on if the chart has an active filter. This type\n     * of control element is usually used to store a reset link to allow user to reset filter on a\n     * certain chart. This element will be turned off automatically if the filter is cleared.\n     * * root.selectAll('.filter') elements are turned on if the chart has an active filter. The text\n     * content of this element is then replaced with the current filter value using the filter printer\n     * function. This type of element will be turned off automatically if the filter is cleared.\n     * @method turnOnControls\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.turnOnControls = function () {\n        if (_root) {\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\n            _chart.selectAll('.reset').style(attribute, null);\n            _chart.selectAll('.filter').text(_filterPrinter(_chart.filters())).style(attribute, null);\n        }\n        return _chart;\n    };\n\n    /**\n     * Turn off optional control elements within the root element.\n     * @method turnOffControls\n     * @memberof dc.baseMixin\n     * @see {@link dc.baseMixin#turnOnControls turnOnControls}\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.turnOffControls = function () {\n        if (_root) {\n            var attribute = _chart.controlsUseVisibility() ? 'visibility' : 'display';\n            var value = _chart.controlsUseVisibility() ? 'hidden' : 'none';\n            _chart.selectAll('.reset').style(attribute, value);\n            _chart.selectAll('.filter').style(attribute, value).text(_chart.filter());\n        }\n        return _chart;\n    };\n\n    /**\n     * Set or get the animation transition duration (in milliseconds) for this chart instance.\n     * @method transitionDuration\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Number} [duration=750]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.transitionDuration = function (duration) {\n        if (!arguments.length) {\n            return _transitionDuration;\n        }\n        _transitionDuration = duration;\n        return _chart;\n    };\n\n    /**\n     * Set or get the animation transition delay (in milliseconds) for this chart instance.\n     * @method transitionDelay\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Number} [delay=0]\n     * @returns {Number|dc.baseMixin}\n     */\n    _chart.transitionDelay = function (delay) {\n        if (!arguments.length) {\n            return _transitionDelay;\n        }\n        _transitionDelay = delay;\n        return _chart;\n    };\n\n    _chart._mandatoryAttributes = function (_) {\n        if (!arguments.length) {\n            return _mandatoryAttributes;\n        }\n        _mandatoryAttributes = _;\n        return _chart;\n    };\n\n    function checkForMandatoryAttributes (a) {\n        if (!_chart[a] || !_chart[a]()) {\n            throw new dc.errors.InvalidStateException('Mandatory attribute chart.' + a +\n                ' is missing on chart[#' + _chart.anchorName() + ']');\n        }\n    }\n\n    /**\n     * Invoking this method will force the chart to re-render everything from scratch. Generally it\n     * should only be used to render the chart for the first time on the page or if you want to make\n     * sure everything is redrawn from scratch instead of relying on the default incremental redrawing\n     * behaviour.\n     * @method render\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.render = function () {\n        _height = _width = undefined; // force recalculate\n        _listeners.call('preRender', _chart, _chart);\n\n        if (_mandatoryAttributes) {\n            _mandatoryAttributes.forEach(checkForMandatoryAttributes);\n        }\n\n        var result = _chart._doRender();\n\n        if (_legend) {\n            _legend.render();\n        }\n\n        _chart._activateRenderlets('postRender');\n\n        return result;\n    };\n\n    _chart._activateRenderlets = function (event) {\n        _listeners.call('pretransition', _chart, _chart);\n        if (_chart.transitionDuration() > 0 && _svg) {\n            _svg.transition().duration(_chart.transitionDuration()).delay(_chart.transitionDelay())\n                .on('end', function () {\n                    _listeners.call('renderlet', _chart, _chart);\n                    if (event) {\n                        _listeners.call(event, _chart, _chart);\n                    }\n                });\n        } else {\n            _listeners.call('renderlet', _chart, _chart);\n            if (event) {\n                _listeners.call(event, _chart, _chart);\n            }\n        }\n    };\n\n    /**\n     * Calling redraw will cause the chart to re-render data changes incrementally. If there is no\n     * change in the underlying data dimension then calling this method will have no effect on the\n     * chart. Most chart interaction in dc will automatically trigger this method through internal\n     * events (in particular {@link dc.redrawAll dc.redrawAll}); therefore, you only need to\n     * manually invoke this function if data is manipulated outside of dc's control (for example if\n     * data is loaded in the background using\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}).\n     * @method redraw\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.redraw = function () {\n        sizeSvg();\n        _listeners.call('preRedraw', _chart, _chart);\n\n        var result = _chart._doRedraw();\n\n        if (_legend) {\n            _legend.render();\n        }\n\n        _chart._activateRenderlets('postRedraw');\n\n        return result;\n    };\n\n    /**\n     * Gets/sets the commit handler. If the chart has a commit handler, the handler will be called when\n     * the chart's filters have changed, in order to send the filter data asynchronously to a server.\n     *\n     * Unlike other functions in dc.js, the commit handler is asynchronous. It takes two arguments:\n     * a flag indicating whether this is a render (true) or a redraw (false), and a callback to be\n     * triggered once the commit is filtered. The callback has the standard node.js continuation signature\n     * with error first and result second.\n     * @method commitHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.commitHandler = function (commitHandler) {\n        if (!arguments.length) {\n            return _commitHandler;\n        }\n        _commitHandler = commitHandler;\n        return _chart;\n    };\n\n    /**\n     * Redraws all charts in the same group as this chart, typically in reaction to a filter\n     * change. If the chart has a {@link dc.baseMixin.commitFilter commitHandler}, it will\n     * be executed and waited for.\n     * @method redrawGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.redrawGroup = function () {\n        if (_commitHandler) {\n            _commitHandler(false, function (error, result) {\n                if (error) {\n                    console.log(error);\n                } else {\n                    dc.redrawAll(_chart.chartGroup());\n                }\n            });\n        } else {\n            dc.redrawAll(_chart.chartGroup());\n        }\n        return _chart;\n    };\n\n    /**\n     * Renders all charts in the same group as this chart. If the chart has a\n     * {@link dc.baseMixin.commitFilter commitHandler}, it will be executed and waited for\n     * @method renderGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.renderGroup = function () {\n        if (_commitHandler) {\n            _commitHandler(false, function (error, result) {\n                if (error) {\n                    console.log(error);\n                } else {\n                    dc.renderAll(_chart.chartGroup());\n                }\n            });\n        } else {\n            dc.renderAll(_chart.chartGroup());\n        }\n        return _chart;\n    };\n\n    _chart._invokeFilteredListener = function (f) {\n        if (f !== undefined) {\n            _listeners.call('filtered', _chart, _chart, f);\n        }\n    };\n\n    _chart._invokeZoomedListener = function () {\n        _listeners.call('zoomed', _chart, _chart);\n    };\n\n    var _hasFilterHandler = function (filters, filter) {\n        if (filter === null || typeof(filter) === 'undefined') {\n            return filters.length > 0;\n        }\n        return filters.some(function (f) {\n            return filter <= f && filter >= f;\n        });\n    };\n\n    /**\n     * Set or get the has-filter handler. The has-filter handler is a function that checks to see if\n     * the chart's current filters (first argument) include a specific filter (second argument).  Using a custom has-filter handler allows\n     * you to change the way filters are checked for and replaced.\n     * @method hasFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default has-filter handler\n     * chart.hasFilterHandler(function (filters, filter) {\n     *     if (filter === null || typeof(filter) === 'undefined') {\n     *         return filters.length > 0;\n     *     }\n     *     return filters.some(function (f) {\n     *         return filter <= f && filter >= f;\n     *     });\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.hasFilterHandler(function(filters, filter) {\n     *     return false;\n     * });\n     * @param {Function} [hasFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.hasFilterHandler = function (hasFilterHandler) {\n        if (!arguments.length) {\n            return _hasFilterHandler;\n        }\n        _hasFilterHandler = hasFilterHandler;\n        return _chart;\n    };\n\n    /**\n     * Check whether any active filter or a specific filter is associated with particular chart instance.\n     * This function is **not chainable**.\n     * @method hasFilter\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#hasFilterHandler hasFilterHandler}\n     * @param {*} [filter]\n     * @returns {Boolean}\n     */\n    _chart.hasFilter = function (filter) {\n        return _hasFilterHandler(_filters, filter);\n    };\n\n    var _removeFilterHandler = function (filters, filter) {\n        for (var i = 0; i < filters.length; i++) {\n            if (filters[i] <= filter && filters[i] >= filter) {\n                filters.splice(i, 1);\n                break;\n            }\n        }\n        return filters;\n    };\n\n    /**\n     * Set or get the remove filter handler. The remove filter handler is a function that removes a\n     * filter from the chart's current filters. Using a custom remove filter handler allows you to\n     * change how filters are removed or perform additional work when removing a filter, e.g. when\n     * using a filter server other than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method removeFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default remove filter handler\n     * chart.removeFilterHandler(function (filters, filter) {\n     *     for (var i = 0; i < filters.length; i++) {\n     *         if (filters[i] <= filter && filters[i] >= filter) {\n     *             filters.splice(i, 1);\n     *             break;\n     *         }\n     *     }\n     *     return filters;\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.removeFilterHandler(function(filters, filter) {\n     *     return filters;\n     * });\n     * @param {Function} [removeFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.removeFilterHandler = function (removeFilterHandler) {\n        if (!arguments.length) {\n            return _removeFilterHandler;\n        }\n        _removeFilterHandler = removeFilterHandler;\n        return _chart;\n    };\n\n    var _addFilterHandler = function (filters, filter) {\n        filters.push(filter);\n        return filters;\n    };\n\n    /**\n     * Set or get the add filter handler. The add filter handler is a function that adds a filter to\n     * the chart's filter list. Using a custom add filter handler allows you to change the way filters\n     * are added or perform additional work when adding a filter, e.g. when using a filter server other\n     * than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method addFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default add filter handler\n     * chart.addFilterHandler(function (filters, filter) {\n     *     filters.push(filter);\n     *     return filters;\n     * });\n     *\n     * // custom filter handler (no-op)\n     * chart.addFilterHandler(function(filters, filter) {\n     *     return filters;\n     * });\n     * @param {Function} [addFilterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.addFilterHandler = function (addFilterHandler) {\n        if (!arguments.length) {\n            return _addFilterHandler;\n        }\n        _addFilterHandler = addFilterHandler;\n        return _chart;\n    };\n\n    var _resetFilterHandler = function (filters) {\n        return [];\n    };\n\n    /**\n     * Set or get the reset filter handler. The reset filter handler is a function that resets the\n     * chart's filter list by returning a new list. Using a custom reset filter handler allows you to\n     * change the way filters are reset, or perform additional work when resetting the filters,\n     * e.g. when using a filter server other than crossfilter.\n     *\n     * The handler should return a new or modified array as the result.\n     * @method resetFilterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default remove filter handler\n     * function (filters) {\n     *     return [];\n     * }\n     *\n     * // custom filter handler (no-op)\n     * chart.resetFilterHandler(function(filters) {\n     *     return filters;\n     * });\n     * @param {Function} [resetFilterHandler]\n     * @returns {dc.baseMixin}\n     */\n    _chart.resetFilterHandler = function (resetFilterHandler) {\n        if (!arguments.length) {\n            return _resetFilterHandler;\n        }\n        _resetFilterHandler = resetFilterHandler;\n        return _chart;\n    };\n\n    function applyFilters (filters) {\n        if (_chart.dimension() && _chart.dimension().filter) {\n            var fs = _filterHandler(_chart.dimension(), filters);\n            if (fs) {\n                filters = fs;\n            }\n        }\n        return filters;\n    }\n\n    /**\n     * Replace the chart filter. This is equivalent to calling `chart.filter(null).filter(filter)`\n     * but more efficient because the filter is only applied once.\n     *\n     * @method replaceFilter\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {*} [filter]\n     * @returns {dc.baseMixin}\n     **/\n    _chart.replaceFilter = function (filter) {\n        _filters = _resetFilterHandler(_filters);\n        _chart.filter(filter);\n        return _chart;\n    };\n\n    /**\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\n     * is given.\n     *\n     * The filter parameter can take one of these forms:\n     * * A single value: the value will be toggled (added if it is not present in the current\n     * filters, removed if it is present)\n     * * An array containing a single array of values (`[[value,value,value]]`): each value is\n     * toggled\n     * * When appropriate for the chart, a {@link dc.filters dc filter object} such as\n     *   * {@link dc.filters.RangedFilter `dc.filters.RangedFilter`} for the\n     * {@link dc.coordinateGridMixin dc.coordinateGridMixin} charts\n     *   * {@link dc.filters.TwoDimensionalFilter `dc.filters.TwoDimensionalFilter`} for the\n     * {@link dc.heatMap heat map}\n     *   * {@link dc.filters.RangedTwoDimensionalFilter `dc.filters.RangedTwoDimensionalFilter`}\n     * for the {@link dc.scatterPlot scatter plot}\n     * * `null`: the filter will be reset using the\n     * {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\n     *\n     * Note that this is always a toggle (even when it doesn't make sense for the filter type). If\n     * you wish to replace the current filter, either call `chart.filter(null)` first - or it's more\n     * efficient to call {@link dc.baseMixin#replaceFilter `chart.replaceFilter(filter)`} instead.\n     *\n     * Each toggle is executed by checking if the value is already present using the\n     * {@link dc.baseMixin#hasFilterHandler hasFilterHandler}; if it is not present, it is added\n     * using the {@link dc.baseMixin#addFilterHandler addFilterHandler}; if it is already present,\n     * it is removed using the {@link dc.baseMixin#removeFilterHandler removeFilterHandler}.\n     *\n     * Once the filters array has been updated, the filters are applied to the\n     * crossfilter dimension, using the {@link dc.baseMixin#filterHandler filterHandler}.\n     *\n     * Once you have set the filters, call {@link dc.baseMixin#redrawGroup `chart.redrawGroup()`}\n     * (or {@link dc.redrawAll `dc.redrawAll()`}) to redraw the chart's group.\n     * @method filter\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link dc.baseMixin#addFilterHandler addFilterHandler}\n     * @see {@link dc.baseMixin#removeFilterHandler removeFilterHandler}\n     * @see {@link dc.baseMixin#resetFilterHandler resetFilterHandler}\n     * @see {@link dc.baseMixin#filterHandler filterHandler}\n     * @example\n     * // filter by a single string\n     * chart.filter('Sunday');\n     * // filter by a single age\n     * chart.filter(18);\n     * // filter by a set of states\n     * chart.filter([['MA', 'TX', 'ND', 'WA']]);\n     * // filter by range -- note the use of dc.filters.RangedFilter, which is different\n     * // from the syntax for filtering a crossfilter dimension directly, dimension.filter([15,20])\n     * chart.filter(dc.filters.RangedFilter(15,20));\n     * @param {*} [filter]\n     * @returns {dc.baseMixin}\n     */\n    _chart.filter = function (filter) {\n        if (!arguments.length) {\n            return _filters.length > 0 ? _filters[0] : null;\n        }\n        var filters = _filters;\n        if (filter instanceof Array && filter[0] instanceof Array && !filter.isFiltered) {\n            // toggle each filter\n            filter[0].forEach(function (f) {\n                if (_hasFilterHandler(filters, f)) {\n                    filters = _removeFilterHandler(filters, f);\n                } else {\n                    filters = _addFilterHandler(filters, f);\n                }\n            });\n        } else if (filter === null) {\n            filters = _resetFilterHandler(filters);\n        } else {\n            if (_hasFilterHandler(filters, filter)) {\n                filters = _removeFilterHandler(filters, filter);\n            } else {\n                filters = _addFilterHandler(filters, filter);\n            }\n        }\n        _filters = applyFilters(filters);\n        _chart._invokeFilteredListener(filter);\n\n        if (_root !== null && _chart.hasFilter()) {\n            _chart.turnOnControls();\n        } else {\n            _chart.turnOffControls();\n        }\n\n        return _chart;\n    };\n\n    /**\n     * Returns all current filters. This method does not perform defensive cloning of the internal\n     * filter array before returning, therefore any modification of the returned array will effect the\n     * chart's internal filter storage.\n     * @method filters\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {Array<*>}\n     */\n    _chart.filters = function () {\n        return _filters;\n    };\n\n    _chart.highlightSelected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, true);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    _chart.fadeDeselected = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, true);\n    };\n\n    _chart.resetHighlight = function (e) {\n        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);\n        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);\n    };\n\n    /**\n     * This function is passed to d3 as the onClick handler for each chart. The default behavior is to\n     * filter on the clicked datum (passed to the callback) and redraw the chart group.\n     * @method onClick\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {*} datum\n     */\n    _chart.onClick = function (datum) {\n        var filter = _chart.keyAccessor()(datum);\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    /**\n     * Set or get the filter handler. The filter handler is a function that performs the filter action\n     * on a specific dimension. Using a custom filter handler allows you to perform additional logic\n     * before or after filtering.\n     * @method filterHandler\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter crossfilter.dimension.filter}\n     * @example\n     * // the default filter handler handles all possible cases for the charts in dc.js\n     * // you can replace it with something more specialized for your own chart\n     * chart.filterHandler(function (dimension, filters) {\n     *     if (filters.length === 0) {\n     *         // the empty case (no filtering)\n     *         dimension.filter(null);\n     *     } else if (filters.length === 1 && !filters[0].isFiltered) {\n     *         // single value and not a function-based filter\n     *         dimension.filterExact(filters[0]);\n     *     } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n     *         // single range-based filter\n     *         dimension.filterRange(filters[0]);\n     *     } else {\n     *         // an array of values, or an array of filter objects\n     *         dimension.filterFunction(function (d) {\n     *             for (var i = 0; i < filters.length; i++) {\n     *                 var filter = filters[i];\n     *                 if (filter.isFiltered && filter.isFiltered(d)) {\n     *                     return true;\n     *                 } else if (filter <= d && filter >= d) {\n     *                     return true;\n     *                 }\n     *             }\n     *             return false;\n     *         });\n     *     }\n     *     return filters;\n     * });\n     *\n     * // custom filter handler\n     * chart.filterHandler(function(dimension, filter){\n     *     var newFilter = filter + 10;\n     *     dimension.filter(newFilter);\n     *     return newFilter; // set the actual filter value to the new value\n     * });\n     * @param {Function} [filterHandler]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.filterHandler = function (filterHandler) {\n        if (!arguments.length) {\n            return _filterHandler;\n        }\n        _filterHandler = filterHandler;\n        return _chart;\n    };\n\n    // abstract function stub\n    _chart._doRender = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        // do nothing in base, should be overridden by sub-function\n        return [];\n    };\n\n    _chart.legendHighlight = function () {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendReset = function () {\n        // do nothing in base, should be overridden by sub-function\n    };\n\n    _chart.legendToggle = function () {\n        // do nothing in base, should be overriden by sub-function\n    };\n\n    _chart.isLegendableHidden = function () {\n        // do nothing in base, should be overridden by sub-function\n        return false;\n    };\n\n    /**\n     * Set or get the key accessor function. The key accessor function is used to retrieve the key\n     * value from the crossfilter group. Key values are used differently in different charts, for\n     * example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.\n     * @method keyAccessor\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default key accessor\n     * chart.keyAccessor(function(d) { return d.key; });\n     * // custom key accessor for a multi-value crossfilter reduction\n     * chart.keyAccessor(function(p) { return p.value.absGain; });\n     * @param {Function} [keyAccessor]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.keyAccessor = function (keyAccessor) {\n        if (!arguments.length) {\n            return _keyAccessor;\n        }\n        _keyAccessor = keyAccessor;\n        return _chart;\n    };\n\n    /**\n     * Set or get the value accessor function. The value accessor function is used to retrieve the\n     * value from the crossfilter group. Group values are used differently in different charts, for\n     * example values correspond to slice sizes in a pie chart and y axis positions in a grid\n     * coordinate chart.\n     * @method valueAccessor\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default value accessor\n     * chart.valueAccessor(function(d) { return d.value; });\n     * // custom value accessor for a multi-value crossfilter reduction\n     * chart.valueAccessor(function(p) { return p.value.percentageGain; });\n     * @param {Function} [valueAccessor]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.valueAccessor = function (valueAccessor) {\n        if (!arguments.length) {\n            return _valueAccessor;\n        }\n        _valueAccessor = valueAccessor;\n        return _chart;\n    };\n\n    /**\n     * Set or get the label function. The chart class will use this function to render labels for each\n     * child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every\n     * chart supports the label function, for example line chart does not use this function\n     * at all. By default, enables labels; pass false for the second parameter if this is not desired.\n     * @method label\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default label function just return the key\n     * chart.label(function(d) { return d.key; });\n     * // label function has access to the standard d3 data binding and can get quite complicated\n     * chart.label(function(d) { return d.data.key + '(' + Math.floor(d.data.value / all.value() * 100) + '%)'; });\n     * @param {Function} [labelFunction]\n     * @param {Boolean} [enableLabels=true]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.label = function (labelFunction, enableLabels) {\n        if (!arguments.length) {\n            return _label;\n        }\n        _label = labelFunction;\n        if ((enableLabels === undefined) || enableLabels) {\n            _renderLabel = true;\n        }\n        return _chart;\n    };\n\n    /**\n     * Turn on/off label rendering\n     * @method renderLabel\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [renderLabel=false]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.renderLabel = function (renderLabel) {\n        if (!arguments.length) {\n            return _renderLabel;\n        }\n        _renderLabel = renderLabel;\n        return _chart;\n    };\n\n    /**\n     * Set or get the title function. The chart class will use this function to render the SVGElement title\n     * (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice\n     * in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;\n     * however in grid coordinate charts you need to turn off the brush in order to see titles, because\n     * otherwise the brush layer will block tooltip triggering.\n     * @method title\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * // default title function shows \"key: value\"\n     * chart.title(function(d) { return d.key + ': ' + d.value; });\n     * // title function has access to the standard d3 data binding and can get quite complicated\n     * chart.title(function(p) {\n     *    return p.key.getFullYear()\n     *        + '\\n'\n     *        + 'Index Gain: ' + numberFormat(p.value.absGain) + '\\n'\n     *        + 'Index Gain in Percentage: ' + numberFormat(p.value.percentageGain) + '%\\n'\n     *        + 'Fluctuation / Index Ratio: ' + numberFormat(p.value.fluctuationPercentage) + '%';\n     * });\n     * @param {Function} [titleFunction]\n     * @returns {Function|dc.baseMixin}\n     */\n    _chart.title = function (titleFunction) {\n        if (!arguments.length) {\n            return _title;\n        }\n        _title = titleFunction;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off title rendering, or return the state of the render title flag if no arguments are\n     * given.\n     * @method renderTitle\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {Boolean} [renderTitle=true]\n     * @returns {Boolean|dc.baseMixin}\n     */\n    _chart.renderTitle = function (renderTitle) {\n        if (!arguments.length) {\n            return _renderTitle;\n        }\n        _renderTitle = renderTitle;\n        return _chart;\n    };\n\n    /**\n     * A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added\n     * to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked\n     * right after the chart finishes its transitions, giving you a way to modify the SVGElements.\n     * Renderlet functions take the chart instance as the only input parameter and you can\n     * use the dc API or use raw d3 to achieve pretty much any effect.\n     *\n     * Use {@link dc.baseMixin#on on} with a 'renderlet' prefix.\n     * Generates a random key for the renderlet, which makes it hard to remove.\n     * @method renderlet\n     * @memberof dc.baseMixin\n     * @instance\n     * @deprecated\n     * @example\n     * // do this instead of .renderlet(function(chart) { ... })\n     * chart.on(\"renderlet\", function(chart){\n     *     // mix of dc API and d3 manipulation\n     *     chart.select('g.y').style('display', 'none');\n     *     // its a closure so you can also access other chart variable available in the closure scope\n     *     moveChart.filter(chart.filter());\n     * });\n     * @param {Function} renderletFunction\n     * @returns {dc.baseMixin}\n     */\n    _chart.renderlet = dc.logger.deprecate(function (renderletFunction) {\n        _chart.on('renderlet.' + dc.utils.uniqueId(), renderletFunction);\n        return _chart;\n    }, 'chart.renderlet has been deprecated.  Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)');\n\n    /**\n     * Get or set the chart group to which this chart belongs. Chart groups are rendered or redrawn\n     * together since it is expected they share the same underlying crossfilter data set.\n     * @method chartGroup\n     * @memberof dc.baseMixin\n     * @instance\n     * @param {String} [chartGroup]\n     * @returns {String|dc.baseMixin}\n     */\n    _chart.chartGroup = function (chartGroup) {\n        if (!arguments.length) {\n            return _chartGroup;\n        }\n        if (!_isChild) {\n            dc.deregisterChart(_chart, _chartGroup);\n        }\n        _chartGroup = chartGroup;\n        if (!_isChild) {\n            dc.registerChart(_chart, _chartGroup);\n        }\n        return _chart;\n    };\n\n    /**\n     * Expire the internal chart cache. dc charts cache some data internally on a per chart basis to\n     * speed up rendering and avoid unnecessary calculation; however it might be useful to clear the\n     * cache if you have changed state which will affect rendering.  For example, if you invoke\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}\n     * function or reset group or dimension after rendering, it is a good idea to\n     * clear the cache to make sure charts are rendered properly.\n     * @method expireCache\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {dc.baseMixin}\n     */\n    _chart.expireCache = function () {\n        // do nothing in base, should be overridden by sub-function\n        return _chart;\n    };\n\n    /**\n     * Attach a dc.legend widget to this chart. The legend widget will automatically draw legend labels\n     * based on the color setting and names associated with each group.\n     * @method legend\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n     * @param {dc.legend} [legend]\n     * @returns {dc.legend|dc.baseMixin}\n     */\n    _chart.legend = function (legend) {\n        if (!arguments.length) {\n            return _legend;\n        }\n        _legend = legend;\n        _legend.parent(_chart);\n        return _chart;\n    };\n\n    /**\n     * Returns the internal numeric ID of the chart.\n     * @method chartID\n     * @memberof dc.baseMixin\n     * @instance\n     * @returns {String}\n     */\n    _chart.chartID = function () {\n        return _chart.__dcFlag__;\n    };\n\n    /**\n     * Set chart options using a configuration object. Each key in the object will cause the method of\n     * the same name to be called with the value to set that attribute for the chart.\n     * @method options\n     * @memberof dc.baseMixin\n     * @instance\n     * @example\n     * chart.options({dimension: myDimension, group: myGroup});\n     * @param {{}} opts\n     * @returns {dc.baseMixin}\n     */\n    _chart.options = function (opts) {\n        var applyOptions = [\n            'anchor',\n            'group',\n            'xAxisLabel',\n            'yAxisLabel',\n            'stack',\n            'title',\n            'point',\n            'getColor',\n            'overlayGeoJson'\n        ];\n\n        for (var o in opts) {\n            if (typeof(_chart[o]) === 'function') {\n                if (opts[o] instanceof Array && applyOptions.indexOf(o) !== -1) {\n                    _chart[o].apply(_chart, opts[o]);\n                } else {\n                    _chart[o].call(_chart, opts[o]);\n                }\n            } else {\n                dc.logger.debug('Not a valid option setter name: ' + o);\n            }\n        }\n        return _chart;\n    };\n\n    /**\n     * All dc chart instance supports the following listeners.\n     * Supports the following events:\n     * * `renderlet` - This listener function will be invoked after transitions after redraw and render. Replaces the\n     * deprecated {@link dc.baseMixin#renderlet renderlet} method.\n     * * `pretransition` - Like `.on('renderlet', ...)` but the event is fired before transitions start.\n     * * `preRender` - This listener function will be invoked before chart rendering.\n     * * `postRender` - This listener function will be invoked after chart finish rendering including\n     * all renderlets' logic.\n     * * `preRedraw` - This listener function will be invoked before chart redrawing.\n     * * `postRedraw` - This listener function will be invoked after chart finish redrawing\n     * including all renderlets' logic.\n     * * `filtered` - This listener function will be invoked after a filter is applied, added or removed.\n     * * `zoomed` - This listener function will be invoked after a zoom is triggered.\n     * @method on\n     * @memberof dc.baseMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on d3.dispatch.on}\n     * @example\n     * .on('renderlet', function(chart, filter){...})\n     * .on('pretransition', function(chart, filter){...})\n     * .on('preRender', function(chart){...})\n     * .on('postRender', function(chart){...})\n     * .on('preRedraw', function(chart){...})\n     * .on('postRedraw', function(chart){...})\n     * .on('filtered', function(chart, filter){...})\n     * .on('zoomed', function(chart, filter){...})\n     * @param {String} event\n     * @param {Function} listener\n     * @returns {dc.baseMixin}\n     */\n    _chart.on = function (event, listener) {\n        _listeners.on(event, listener);\n        return _chart;\n    };\n\n    return _chart;\n};\n\n/**\n * Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid\n * Charts.\n * @name marginMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.marginMixin}\n */\ndc.marginMixin = function (_chart) {\n    var _margin = {top: 10, right: 50, bottom: 30, left: 30};\n\n    /**\n     * Get or set the margins for a particular coordinate grid chart instance. The margins is stored as\n     * an associative Javascript array.\n     * @method margins\n     * @memberof dc.marginMixin\n     * @instance\n     * @example\n     * var leftMargin = chart.margins().left; // 30 by default\n     * chart.margins().left = 50;\n     * leftMargin = chart.margins().left; // now 50\n     * @param {{top: Number, right: Number, left: Number, bottom: Number}} [margins={top: 10, right: 50, bottom: 30, left: 30}]\n     * @returns {{top: Number, right: Number, left: Number, bottom: Number}|dc.marginMixin}\n     */\n    _chart.margins = function (margins) {\n        if (!arguments.length) {\n            return _margin;\n        }\n        _margin = margins;\n        return _chart;\n    };\n\n    _chart.effectiveWidth = function () {\n        return _chart.width() - _chart.margins().left - _chart.margins().right;\n    };\n\n    _chart.effectiveHeight = function () {\n        return _chart.height() - _chart.margins().top - _chart.margins().bottom;\n    };\n\n    return _chart;\n};\n\n/**\n * The Color Mixin is an abstract chart functional class providing universal coloring support\n * as a mix-in for any concrete chart implementation.\n * @name colorMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.colorMixin}\n */\ndc.colorMixin = function (_chart) {\n    var _colors = d3.scaleOrdinal(dc.config.defaultColors());\n    var _defaultAccessor = true;\n\n    var _colorAccessor = function (d) { return _chart.keyAccessor()(d); };\n\n    /**\n     * Retrieve current color scale or set a new color scale. This methods accepts any function that\n     * operates like a d3 scale.\n     * @method colors\n     * @memberof dc.colorMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @example\n     * // alternate categorical scale\n     * chart.colors(d3.scale.category20b());\n     * // ordinal scale\n     * chart.colors(d3.scaleOrdinal().range(['red','green','blue']));\n     * // convenience method, the same as above\n     * chart.ordinalColors(['red','green','blue']);\n     * // set a linear scale\n     * chart.linearColors([\"#4575b4\", \"#ffffbf\", \"#a50026\"]);\n     * @param {d3.scale} [colorScale=d3.scaleOrdinal(d3.schemeCategory20c)]\n     * @returns {d3.scale|dc.colorMixin}\n     */\n    _chart.colors = function (colorScale) {\n        if (!arguments.length) {\n            return _colors;\n        }\n        if (colorScale instanceof Array) {\n            _colors = d3.scaleQuantize().range(colorScale); // deprecated legacy support, note: this fails for ordinal domains\n        } else {\n            _colors = typeof colorScale === 'function' ? colorScale : dc.utils.constant(colorScale);\n        }\n        return _chart;\n    };\n\n    /**\n     * Convenience method to set the color scale to\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal} with\n     * range `r`.\n     * @method ordinalColors\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<String>} r\n     * @returns {dc.colorMixin}\n     */\n    _chart.ordinalColors = function (r) {\n        return _chart.colors(d3.scaleOrdinal().range(r));\n    };\n\n    /**\n     * Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.\n     * @method linearColors\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<Number>} r\n     * @returns {dc.colorMixin}\n     */\n    _chart.linearColors = function (r) {\n        return _chart.colors(d3.scaleLinear()\n                             .range(r)\n                             .interpolate(d3.interpolateHcl));\n    };\n\n    /**\n     * Set or the get color accessor function. This function will be used to map a data point in a\n     * crossfilter group to a color value on the color scale. The default function uses the key\n     * accessor.\n     * @method colorAccessor\n     * @memberof dc.colorMixin\n     * @instance\n     * @example\n     * // default index based color accessor\n     * .colorAccessor(function (d, i){return i;})\n     * // color accessor for a multi-value crossfilter reduction\n     * .colorAccessor(function (d){return d.value.absGain;})\n     * @param {Function} [colorAccessor]\n     * @returns {Function|dc.colorMixin}\n     */\n    _chart.colorAccessor = function (colorAccessor) {\n        if (!arguments.length) {\n            return _colorAccessor;\n        }\n        _colorAccessor = colorAccessor;\n        _defaultAccessor = false;\n        return _chart;\n    };\n\n    // what is this?\n    _chart.defaultColorAccessor = function () {\n        return _defaultAccessor;\n    };\n\n    /**\n     * Set or get the current domain for the color mapping function. The domain must be supplied as an\n     * array.\n     *\n     * Note: previously this method accepted a callback function. Instead you may use a custom scale\n     * set by {@link dc.colorMixin#colors .colors}.\n     * @method colorDomain\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {Array<String>} [domain]\n     * @returns {Array<String>|dc.colorMixin}\n     */\n    _chart.colorDomain = function (domain) {\n        if (!arguments.length) {\n            return _colors.domain();\n        }\n        _colors.domain(domain);\n        return _chart;\n    };\n\n    /**\n     * Set the domain by determining the min and max values as retrieved by\n     * {@link dc.colorMixin#colorAccessor .colorAccessor} over the chart's dataset.\n     * @method calculateColorDomain\n     * @memberof dc.colorMixin\n     * @instance\n     * @returns {dc.colorMixin}\n     */\n    _chart.calculateColorDomain = function () {\n        var newDomain = [d3.min(_chart.data(), _chart.colorAccessor()),\n                         d3.max(_chart.data(), _chart.colorAccessor())];\n        _colors.domain(newDomain);\n        return _chart;\n    };\n\n    /**\n     * Get the color for the datum d and counter i. This is used internally by charts to retrieve a color.\n     * @method getColor\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {*} d\n     * @param {Number} [i]\n     * @returns {String}\n     */\n    _chart.getColor = function (d, i) {\n        return _colors(_colorAccessor.call(this, d, i));\n    };\n\n    /**\n     * **Deprecated.** Get/set the color calculator. This actually replaces the\n     * {@link dc.colorMixin#getColor getColor} method!\n     *\n     * This is not recommended, since using a {@link dc.colorMixin#colorAccessor colorAccessor} and\n     * color scale ({@link dc.colorMixin#colors .colors}) is more powerful and idiomatic d3.\n     * @method colorCalculator\n     * @memberof dc.colorMixin\n     * @instance\n     * @param {*} [colorCalculator]\n     * @returns {Function|dc.colorMixin}\n     */\n    _chart.colorCalculator = dc.logger.deprecate(function (colorCalculator) {\n        if (!arguments.length) {\n            return _chart.getColor;\n        }\n        _chart.getColor = colorCalculator;\n        return _chart;\n    }, 'colorMixin.colorCalculator has been deprecated. Please colorMixin.colors and colorMixin.colorAccessor instead');\n\n    return _chart;\n};\n\n/**\n * Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based\n * concrete chart types, e.g. bar chart, line chart, and bubble chart.\n * @name coordinateGridMixin\n * @memberof dc\n * @mixin\n * @mixes dc.colorMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @param {Object} _chart\n * @returns {dc.coordinateGridMixin}\n */\ndc.coordinateGridMixin = function (_chart) {\n    var GRID_LINE_CLASS = 'grid-line';\n    var HORIZONTAL_CLASS = 'horizontal';\n    var VERTICAL_CLASS = 'vertical';\n    var Y_AXIS_LABEL_CLASS = 'y-axis-label';\n    var X_AXIS_LABEL_CLASS = 'x-axis-label';\n    var CUSTOM_BRUSH_HANDLE_CLASS = 'custom-brush-handle';\n    var DEFAULT_AXIS_LABEL_PADDING = 12;\n\n    _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin(_chart)));\n\n    _chart.colors(d3.scaleOrdinal(d3.schemeCategory10));\n    _chart._mandatoryAttributes().push('x');\n    var _parent;\n    var _g;\n    var _chartBodyG;\n\n    var _x;\n    var _origX; // Will hold orginial scale in case of zoom\n    var _xOriginalDomain;\n    var _xAxis = d3.axisBottom();\n    var _xUnits = dc.units.integers;\n    var _xAxisPadding = 0;\n    var _xAxisPaddingUnit = d3.timeDay;\n    var _xElasticity = false;\n    var _xAxisLabel;\n    var _xAxisLabelPadding = 0;\n    var _lastXDomain;\n\n    var _y;\n    var _yAxis = null;\n    var _yAxisPadding = 0;\n    var _yElasticity = false;\n    var _yAxisLabel;\n    var _yAxisLabelPadding = 0;\n\n    var _brush = d3.brushX();\n    var _gBrush;\n    var _brushOn = true;\n    var _parentBrushOn = false;\n    var _round;\n\n    var _renderHorizontalGridLine = false;\n    var _renderVerticalGridLine = false;\n\n    var _resizing = false;\n    var _unitCount;\n\n    var _zoomScale = [1, Infinity];\n    var _zoomOutRestrict = true;\n\n    var _zoom = d3.zoom().on('zoom', onZoom);\n    var _nullZoom = d3.zoom().on('zoom', null);\n    var _hasBeenMouseZoomable = false;\n\n    var _rangeChart;\n    var _focusChart;\n\n    var _mouseZoomable = false;\n    var _clipPadding = 0;\n\n    var _outerRangeBandPadding = 0.5;\n    var _rangeBandPadding = 0;\n\n    var _useRightYAxis = false;\n\n    /**\n     * When changing the domain of the x or y scale, it is necessary to tell the chart to recalculate\n     * and redraw the axes. (`.rescale()` is called automatically when the x or y scale is replaced\n     * with {@link dc.coordinateGridMixin+x .x()} or {@link dc.coordinateGridMixin#y .y()}, and has\n     * no effect on elastic scales.)\n     * @method rescale\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {dc.coordinateGridMixin}\n     */\n    _chart.rescale = function () {\n        _unitCount = undefined;\n        _resizing = true;\n        return _chart;\n    };\n\n    _chart.resizing = function () {\n        return _resizing;\n    };\n\n    /**\n     * Get or set the range selection chart associated with this instance. Setting the range selection\n     * chart using this function will automatically update its selection brush when the current chart\n     * zooms in. In return the given range chart will also automatically attach this chart as its focus\n     * chart hence zoom in when range brush updates.\n     *\n     * Usually the range and focus charts will share a dimension. The range chart will set the zoom\n     * boundaries for the focus chart, so its dimension values must be compatible with the domain of\n     * the focus chart.\n     *\n     * See the [Nasdaq 100 Index](http://dc-js.github.com/dc.js/) example for this effect in action.\n     * @method rangeChart\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {dc.coordinateGridMixin} [rangeChart]\n     * @returns {dc.coordinateGridMixin}\n     */\n    _chart.rangeChart = function (rangeChart) {\n        if (!arguments.length) {\n            return _rangeChart;\n        }\n        _rangeChart = rangeChart;\n        _rangeChart.focusChart(_chart);\n        return _chart;\n    };\n\n    /**\n     * Get or set the scale extent for mouse zooms.\n     * @method zoomScale\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Array<Number|Date>} [extent=[1, Infinity]]\n     * @returns {Array<Number|Date>|dc.coordinateGridMixin}\n     */\n    _chart.zoomScale = function (extent) {\n        if (!arguments.length) {\n            return _zoomScale;\n        }\n        _zoomScale = extent;\n        return _chart;\n    };\n\n    /**\n     * Get or set the zoom restriction for the chart. If true limits the zoom to origional domain of the chart.\n     * @method zoomOutRestrict\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [zoomOutRestrict=true]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.zoomOutRestrict = function (zoomOutRestrict) {\n        if (!arguments.length) {\n            return _zoomOutRestrict;\n        }\n        _zoomOutRestrict = zoomOutRestrict;\n        return _chart;\n    };\n\n    _chart._generateG = function (parent) {\n        if (parent === undefined) {\n            _parent = _chart.svg();\n        } else {\n            _parent = parent;\n        }\n\n        var href = window.location.href.split('#')[0];\n\n        _g = _parent.append('g');\n\n        _chartBodyG = _g.append('g').attr('class', 'chart-body')\n            .attr('transform', 'translate(' + _chart.margins().left + ', ' + _chart.margins().top + ')')\n            .attr('clip-path', 'url(' + href + '#' + getClipPathId() + ')');\n\n        return _g;\n    };\n\n    /**\n     * Get or set the root g element. This method is usually used to retrieve the g element in order to\n     * overlay custom svg drawing programatically. **Caution**: The root g element is usually generated\n     * by dc.js internals, and resetting it might produce unpredictable result.\n     * @method g\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {SVGElement} [gElement]\n     * @returns {SVGElement|dc.coordinateGridMixin}\n     */\n    _chart.g = function (gElement) {\n        if (!arguments.length) {\n            return _g;\n        }\n        _g = gElement;\n        return _chart;\n    };\n\n    /**\n     * Set or get mouse zoom capability flag (default: false). When turned on the chart will be\n     * zoomable using the mouse wheel. If the range selector chart is attached zooming will also update\n     * the range selection brush on the associated range selector chart.\n     * @method mouseZoomable\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [mouseZoomable=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.mouseZoomable = function (mouseZoomable) {\n        if (!arguments.length) {\n            return _mouseZoomable;\n        }\n        _mouseZoomable = mouseZoomable;\n        return _chart;\n    };\n\n    /**\n     * Retrieve the svg group for the chart body.\n     * @method chartBodyG\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {SVGElement} [chartBodyG]\n     * @returns {SVGElement}\n     */\n    _chart.chartBodyG = function (chartBodyG) {\n        if (!arguments.length) {\n            return _chartBodyG;\n        }\n        _chartBodyG = chartBodyG;\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Get or set the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale} or\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales ordinal scale}\n     * @method x\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @example\n     * // set x to a linear scale\n     * chart.x(d3.scaleLinear().domain([-2500, 2500]))\n     * // set x to a time scale to generate histogram\n     * chart.x(d3.scaleTime().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\n     * @param {d3.scale} [xScale]\n     * @returns {d3.scale|dc.coordinateGridMixin}\n     */\n    _chart.x = function (xScale) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = xScale;\n        _xOriginalDomain = _x.domain();\n        _chart.rescale();\n        return _chart;\n    };\n\n    _chart.xOriginalDomain = function () {\n        return _xOriginalDomain;\n    };\n\n    /**\n     * Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate\n     * the number of data projections on the x axis such as the number of bars for a bar chart or the\n     * number of dots for a line chart.\n     *\n     * This function is expected to return a Javascript array of all data points on the x axis, or\n     * the number of points on the axis. d3 time range functions [d3.timeDays, d3.timeMonths, and\n     * d3.timeYears](https://github.com/d3/d3-time/blob/master/README.md#intervals) are all valid\n     * xUnits functions.\n     *\n     * dc.js also provides a few units function, see the {@link dc.units Units Namespace} for\n     * a list of built-in units functions.\n     *\n     * Note that as of dc.js 3.0, `dc.units.ordinal` is not a real function, because it is not\n     * possible to define this function compliant with the d3 range functions. It was already a\n     * magic value which caused charts to behave differently, and now it is completely so.\n     * @method xUnits\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * // set x units to count days\n     * chart.xUnits(d3.timeDays);\n     * // set x units to count months\n     * chart.xUnits(d3.timeMonths);\n     *\n     * // A custom xUnits function can be used as long as it follows the following interface:\n     * // units in integer\n     * function(start, end) {\n     *      // simply calculates how many integers in the domain\n     *      return Math.abs(end - start);\n     * }\n     *\n     * // fixed units\n     * function(start, end) {\n     *      // be aware using fixed units will disable the focus/zoom ability on the chart\n     *      return 1000;\n     * }\n     * @param {Function} [xUnits=dc.units.integers]\n     * @returns {Function|dc.coordinateGridMixin}\n     */\n    _chart.xUnits = function (xUnits) {\n        if (!arguments.length) {\n            return _xUnits;\n        }\n        _xUnits = xUnits;\n        return _chart;\n    };\n\n    /**\n     * Set or get the x axis used by a particular coordinate grid chart instance. This function is most\n     * useful when x axis customization is required. The x axis in dc.js is an instance of a\n     * {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3 bottom axis object};\n     * therefore it supports any valid d3 axisBottom manipulation.\n     *\n     * **Caution**: The x axis is usually generated internally by dc; resetting it may cause\n     * unexpected results. Note also that when used as a getter, this function is not chainable:\n     * it returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.xAxis()` will fail}.\n     * @method xAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3.axisBottom}\n     * @example\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function(v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axis} [xAxis=d3.axisBottom()]\n     * @returns {d3.axis|dc.coordinateGridMixin}\n     */\n    _chart.xAxis = function (xAxis) {\n        if (!arguments.length) {\n            return _xAxis;\n        }\n        _xAxis = xAxis;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will\n     * attempt to recalculate the x axis range whenever a redraw event is triggered.\n     * @method elasticX\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [elasticX=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.elasticX = function (elasticX) {\n        if (!arguments.length) {\n            return _xElasticity;\n        }\n        _xElasticity = elasticX;\n        return _chart;\n    };\n\n    /**\n     * Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x\n     * axis if elasticX is turned on; otherwise it is ignored.\n     *\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n     * number or date x axes.  When padding a date axis, an integer represents number of units being padded\n     * and a percentage string will be treated the same as an integer. The unit will be determined by the\n     * xAxisPaddingUnit variable.\n     * @method xAxisPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number|String} [padding=0]\n     * @returns {Number|String|dc.coordinateGridMixin}\n     */\n    _chart.xAxisPadding = function (padding) {\n        if (!arguments.length) {\n            return _xAxisPadding;\n        }\n        _xAxisPadding = padding;\n        return _chart;\n    };\n\n    /**\n     * Set or get x axis padding unit for the elastic x axis. The padding unit will determine which unit to\n     * use when applying xAxis padding if elasticX is turned on and if x-axis uses a time dimension;\n     * otherwise it is ignored.\n     *\n     * The padding unit should be a\n     * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n     * For backward compatibility with dc.js 2.0, it can also be the name of a d3 time interval\n     * ('day', 'hour', etc). Available arguments are the\n     * [d3 time intervals](https://github.com/d3/d3-time/blob/master/README.md#intervals d3.timeInterval).\n     * @method xAxisPaddingUnit\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [unit=d3.timeDay]\n     * @returns {String|dc.coordinateGridMixin}\n     */\n    _chart.xAxisPaddingUnit = function (unit) {\n        if (!arguments.length) {\n            return _xAxisPaddingUnit;\n        }\n        _xAxisPaddingUnit = unit;\n        return _chart;\n    };\n\n    /**\n     * Returns the number of units displayed on the x axis. If the x axis is ordinal (`xUnits` is\n     * `dc.units.ordinal`), this is the number of items in the domain of the x scale. Otherwise, the\n     * x unit count is calculated using the {@link dc.coordinateGridMixin#xUnits xUnits} function.\n     * @method xUnitCount\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {Number}\n     */\n    _chart.xUnitCount = function () {\n        if (_unitCount === undefined) {\n            if (_chart.isOrdinal()) {\n                // In this case it number of items in domain\n                _unitCount = _chart.x().domain().length;\n            } else {\n                _unitCount = _chart.xUnits()(_chart.x().domain()[0], _chart.x().domain()[1]);\n\n                // Sometimes xUnits() may return an array while sometimes directly the count\n                if (_unitCount instanceof Array) {\n                    _unitCount = _unitCount.length;\n                }\n            }\n        }\n\n        return _unitCount;\n    };\n\n    /**\n     * Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When\n     * used with a chart in a composite chart, allows both left and right Y axes to be shown on a\n     * chart.\n     * @method useRightYAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [useRightYAxis=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.useRightYAxis = function (useRightYAxis) {\n        if (!arguments.length) {\n            return _useRightYAxis;\n        }\n\n        // We need to warn if value is changing after _yAxis was created\n        if (_useRightYAxis !== useRightYAxis && _yAxis) {\n            dc.logger.warn('Value of useRightYAxis has been altered, after yAxis was created. ' +\n                'You might get unexpected yAxis behavior. ' +\n                'Make calls to useRightYAxis sooner in your chart creation process.');\n        }\n\n        _useRightYAxis = useRightYAxis;\n        return _chart;\n    };\n\n    /**\n     * Returns true if the chart is using ordinal xUnits ({@link dc.units.ordinal dc.units.ordinal}, or false\n     * otherwise. Most charts behave differently with ordinal data and use the result of this method to\n     * trigger the appropriate logic.\n     * @method isOrdinal\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {Boolean}\n     */\n    _chart.isOrdinal = function () {\n        return _chart.xUnits() === dc.units.ordinal;\n    };\n\n    _chart._useOuterPadding = function () {\n        return true;\n    };\n\n    _chart._ordinalXDomain = function () {\n        var groups = _chart._computeOrderedGroups(_chart.data());\n        return groups.map(_chart.keyAccessor());\n    };\n\n    function prepareXAxis (g, render) {\n        if (!_chart.isOrdinal()) {\n            if (_chart.elasticX()) {\n                _x.domain([_chart.xAxisMin(), _chart.xAxisMax()]);\n            }\n        } else { // _chart.isOrdinal()\n            // D3v4 - Ordinal charts would need scaleBand\n            // bandwidth is a method in scaleBand\n            // (https://github.com/d3/d3-scale/blob/master/README.md#scaleBand)\n            if (!_x.bandwidth) {\n                // If _x is not a scaleBand create a new scale and\n                // copy the original domain to the new scale\n                dc.logger.warn('For compatibility with d3v4+, dc.js d3.0 ordinal bar/line/bubble charts need ' +\n                               'd3.scaleBand() for the x scale, instead of d3.scaleOrdinal(). ' +\n                               'Replacing .x() with a d3.scaleBand with the same domain - ' +\n                               'make the same change in your code to avoid this warning!');\n                _x = d3.scaleBand().domain(_x.domain());\n            }\n\n            if (_chart.elasticX() || _x.domain().length === 0) {\n                _x.domain(_chart._ordinalXDomain());\n            }\n        }\n\n        // has the domain changed?\n        var xdom = _x.domain();\n        if (render || !dc.utils.arraysEqual(_lastXDomain, xdom)) {\n            _chart.rescale();\n        }\n        _lastXDomain = xdom;\n\n        // please can't we always use rangeBands for bar charts?\n        if (_chart.isOrdinal()) {\n            _x.range([0, _chart.xAxisLength()])\n                .paddingInner(_rangeBandPadding)\n                .paddingOuter(_chart._useOuterPadding() ? _outerRangeBandPadding : 0);\n        } else {\n            _x.range([0, _chart.xAxisLength()]);\n        }\n\n        _xAxis = _xAxis.scale(_chart.x());\n\n        renderVerticalGridLines(g);\n    }\n\n    _chart.renderXAxis = function (g) {\n        var axisXG = g.select('g.x');\n\n        if (axisXG.empty()) {\n            axisXG = g.append('g')\n                .attr('class', 'axis x')\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')');\n        }\n\n        var axisXLab = g.select('text.' + X_AXIS_LABEL_CLASS);\n        if (axisXLab.empty() && _chart.xAxisLabel()) {\n            axisXLab = g.append('text')\n                .attr('class', X_AXIS_LABEL_CLASS)\n                .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\n                      (_chart.height() - _xAxisLabelPadding) + ')')\n                .attr('text-anchor', 'middle');\n        }\n        if (_chart.xAxisLabel() && axisXLab.text() !== _chart.xAxisLabel()) {\n            axisXLab.text(_chart.xAxisLabel());\n        }\n\n        dc.transition(axisXG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart._xAxisY() + ')')\n            .call(_xAxis);\n        dc.transition(axisXLab, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + (_chart.margins().left + _chart.xAxisLength() / 2) + ',' +\n                  (_chart.height() - _xAxisLabelPadding) + ')');\n    };\n\n    function renderVerticalGridLines (g) {\n        var gridLineG = g.select('g.' + VERTICAL_CLASS);\n\n        if (_renderVerticalGridLine) {\n            if (gridLineG.empty()) {\n                gridLineG = g.insert('g', ':first-child')\n                    .attr('class', GRID_LINE_CLASS + ' ' + VERTICAL_CLASS)\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n            }\n\n            var ticks = _xAxis.tickValues() ? _xAxis.tickValues() :\n                (typeof _x.ticks === 'function' ? _x.ticks.apply(_x, _xAxis.tickArguments()) : _x.domain());\n\n            var lines = gridLineG.selectAll('line')\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append('line')\n                .attr('x1', function (d) {\n                    return _x(d);\n                })\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\n                .attr('x2', function (d) {\n                    return _x(d);\n                })\n                .attr('y2', 0)\n                .attr('opacity', 0);\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', 1);\n\n            // update\n            var linesGEnterUpdate = linesGEnter.merge(lines);\n            dc.transition(linesGEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('x1', function (d) {\n                    return _x(d);\n                })\n                .attr('y1', _chart._xAxisY() - _chart.margins().top)\n                .attr('x2', function (d) {\n                    return _x(d);\n                })\n                .attr('y2', 0);\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    }\n\n    _chart._xAxisY = function () {\n        return (_chart.height() - _chart.margins().bottom);\n    };\n\n    _chart.xAxisLength = function () {\n        return _chart.effectiveWidth();\n    };\n\n    /**\n     * Set or get the x axis label. If setting the label, you may optionally include additional padding to\n     * the margin to make room for the label. By default the padded is set to 12 to accomodate the text height.\n     * @method xAxisLabel\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [labelText]\n     * @param {Number} [padding=12]\n     * @returns {String}\n     */\n    _chart.xAxisLabel = function (labelText, padding) {\n        if (!arguments.length) {\n            return _xAxisLabel;\n        }\n        _xAxisLabel = labelText;\n        _chart.margins().bottom -= _xAxisLabelPadding;\n        _xAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        _chart.margins().bottom += _xAxisLabelPadding;\n        return _chart;\n    };\n\n    function createYAxis () {\n        return _useRightYAxis ? d3.axisRight() : d3.axisLeft();\n    }\n\n    _chart._prepareYAxis = function (g) {\n        if (_y === undefined || _chart.elasticY()) {\n            if (_y === undefined) {\n                _y = d3.scaleLinear();\n            }\n            var min = _chart.yAxisMin() || 0,\n                max = _chart.yAxisMax() || 0;\n            _y.domain([min, max]).rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _y.range([_chart.yAxisHeight(), 0]);\n\n        if (!_yAxis) {\n            _yAxis = createYAxis();\n        }\n\n        _yAxis.scale(_y);\n\n        _chart._renderHorizontalGridLinesForAxis(g, _y, _yAxis);\n    };\n\n    _chart.renderYAxisLabel = function (axisClass, text, rotation, labelXPosition) {\n        labelXPosition = labelXPosition || _yAxisLabelPadding;\n\n        var axisYLab = _chart.g().select('text.' + Y_AXIS_LABEL_CLASS + '.' + axisClass + '-label');\n        var labelYPosition = (_chart.margins().top + _chart.yAxisHeight() / 2);\n        if (axisYLab.empty() && text) {\n            axisYLab = _chart.g().append('text')\n                .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')')\n                .attr('class', Y_AXIS_LABEL_CLASS + ' ' + axisClass + '-label')\n                .attr('text-anchor', 'middle')\n                .text(text);\n        }\n        if (text && axisYLab.text() !== text) {\n            axisYLab.text(text);\n        }\n        dc.transition(axisYLab, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + labelXPosition + ',' + labelYPosition + '),rotate(' + rotation + ')');\n    };\n\n    _chart.renderYAxisAt = function (axisClass, axis, position) {\n        var axisYG = _chart.g().select('g.' + axisClass);\n        if (axisYG.empty()) {\n            axisYG = _chart.g().append('g')\n                .attr('class', 'axis ' + axisClass)\n                .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')');\n        }\n\n        dc.transition(axisYG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', 'translate(' + position + ',' + _chart.margins().top + ')')\n            .call(axis);\n    };\n\n    _chart.renderYAxis = function () {\n        var axisPosition = _useRightYAxis ? (_chart.width() - _chart.margins().right) : _chart._yAxisX();\n        _chart.renderYAxisAt('y', _yAxis, axisPosition);\n        var labelPosition = _useRightYAxis ? (_chart.width() - _yAxisLabelPadding) : _yAxisLabelPadding;\n        var rotation = _useRightYAxis ? 90 : -90;\n        _chart.renderYAxisLabel('y', _chart.yAxisLabel(), rotation, labelPosition);\n    };\n\n    _chart._renderHorizontalGridLinesForAxis = function (g, scale, axis) {\n        var gridLineG = g.select('g.' + HORIZONTAL_CLASS);\n\n        if (_renderHorizontalGridLine) {\n            // Last part copied from https://github.com/d3/d3-axis/blob/master/src/axis.js#L48\n            var ticks = axis.tickValues() ? axis.tickValues() : scale.ticks.apply(scale, axis.tickArguments());\n\n            if (gridLineG.empty()) {\n                gridLineG = g.insert('g', ':first-child')\n                    .attr('class', GRID_LINE_CLASS + ' ' + HORIZONTAL_CLASS)\n                    .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n            }\n\n            var lines = gridLineG.selectAll('line')\n                .data(ticks);\n\n            // enter\n            var linesGEnter = lines.enter()\n                .append('line')\n                .attr('x1', 1)\n                .attr('y1', function (d) {\n                    return scale(d);\n                })\n                .attr('x2', _chart.xAxisLength())\n                .attr('y2', function (d) {\n                    return scale(d);\n                })\n                .attr('opacity', 0);\n            dc.transition(linesGEnter, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', 1);\n\n            // update\n            var linesGEnterUpdate = linesGEnter.merge(lines);\n            dc.transition(linesGEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('x1', 1)\n                .attr('y1', function (d) {\n                    return scale(d);\n                })\n                .attr('x2', _chart.xAxisLength())\n                .attr('y2', function (d) {\n                    return scale(d);\n                });\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    };\n\n    _chart._yAxisX = function () {\n        return _chart.useRightYAxis() ? _chart.width() - _chart.margins().right : _chart.margins().left;\n    };\n\n    /**\n     * Set or get the y axis label. If setting the label, you may optionally include additional padding\n     * to the margin to make room for the label. By default the padding is set to 12 to accommodate the\n     * text height.\n     * @method yAxisLabel\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {String} [labelText]\n     * @param {Number} [padding=12]\n     * @returns {String|dc.coordinateGridMixin}\n     */\n    _chart.yAxisLabel = function (labelText, padding) {\n        if (!arguments.length) {\n            return _yAxisLabel;\n        }\n        _yAxisLabel = labelText;\n        _chart.margins().left -= _yAxisLabelPadding;\n        _yAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        _chart.margins().left += _yAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y scale. The y scale is typically automatically determined by the chart implementation.\n     * @method y\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [yScale]\n     * @returns {d3.scale|dc.coordinateGridMixin}\n     */\n    _chart.y = function (yScale) {\n        if (!arguments.length) {\n            return _y;\n        }\n        _y = yScale;\n        _chart.rescale();\n        return _chart;\n    };\n\n    /**\n     * Set or get the y axis used by the coordinate grid chart instance. This function is most useful\n     * when y axis customization is required. Depending on `useRightYAxis` the y axis in dc.js is an instance of\n     * either [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft) or\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight); therefore it supports any\n     * valid d3 axis manipulation.\n     *\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * In addition, depending on whether you are going to use the axis on left or right\n     * you need to appropriately pass [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft)\n     * or [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight)\n     * @method yAxis\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\n     * @example\n     * // customize y axis tick format\n     * chart.yAxis().tickFormat(function(v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.yAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axisLeft|d3.axisRight} [yAxis]\n     * @returns {d3.axisLeft|d3.axisRight|dc.coordinateGridMixin}\n     */\n    _chart.yAxis = function (yAxis) {\n        if (!arguments.length) {\n            if (!_yAxis) {\n                _yAxis = createYAxis();\n            }\n            return _yAxis;\n        }\n        _yAxis = yAxis;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will\n     * attempt to recalculate the y axis range whenever a redraw event is triggered.\n     * @method elasticY\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [elasticY=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.elasticY = function (elasticY) {\n        if (!arguments.length) {\n            return _yElasticity;\n        }\n        _yElasticity = elasticY;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off horizontal grid lines.\n     * @method renderHorizontalGridLines\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [renderHorizontalGridLines=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.renderHorizontalGridLines = function (renderHorizontalGridLines) {\n        if (!arguments.length) {\n            return _renderHorizontalGridLine;\n        }\n        _renderHorizontalGridLine = renderHorizontalGridLines;\n        return _chart;\n    };\n\n    /**\n     * Turn on/off vertical grid lines.\n     * @method renderVerticalGridLines\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [renderVerticalGridLines=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.renderVerticalGridLines = function (renderVerticalGridLines) {\n        if (!arguments.length) {\n            return _renderVerticalGridLine;\n        }\n        _renderVerticalGridLine = renderVerticalGridLines;\n        return _chart;\n    };\n\n    /**\n     * Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.\n     * @method xAxisMin\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.xAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.subtract(min, _xAxisPadding, _xAxisPaddingUnit);\n    };\n\n    /**\n     * Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.\n     * @method xAxisMax\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.xAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.keyAccessor()(e);\n        });\n        return dc.utils.add(max, _xAxisPadding, _xAxisPaddingUnit);\n    };\n\n    /**\n     * Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.\n     * @method yAxisMin\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.yAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        return dc.utils.subtract(min, _yAxisPadding);\n    };\n\n    /**\n     * Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.\n     * @method yAxisMax\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @returns {*}\n     */\n    _chart.yAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.valueAccessor()(e);\n        });\n        return dc.utils.add(max, _yAxisPadding);\n    };\n\n    /**\n     * Set or get y axis padding for the elastic y axis. The padding will be added to the top and\n     * bottom of the y axis if elasticY is turned on; otherwise it is ignored.\n     *\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n     * number or date axes. When padding a date axis, an integer represents number of days being padded\n     * and a percentage string will be treated the same as an integer.\n     * @method yAxisPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number|String} [padding=0]\n     * @returns {Number|dc.coordinateGridMixin}\n     */\n    _chart.yAxisPadding = function (padding) {\n        if (!arguments.length) {\n            return _yAxisPadding;\n        }\n        _yAxisPadding = padding;\n        return _chart;\n    };\n\n    _chart.yAxisHeight = function () {\n        return _chart.effectiveHeight();\n    };\n\n    /**\n     * Set or get the rounding function used to quantize the selection when brushing is enabled.\n     * @method round\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * // set x unit round to by month, this will make sure range selection brush will\n     * // select whole months\n     * chart.round(d3.timeMonth.round);\n     * @param {Function} [round]\n     * @returns {Function|dc.coordinateGridMixin}\n     */\n    _chart.round = function (round) {\n        if (!arguments.length) {\n            return _round;\n        }\n        _round = round;\n        return _chart;\n    };\n\n    _chart._rangeBandPadding = function (_) {\n        if (!arguments.length) {\n            return _rangeBandPadding;\n        }\n        _rangeBandPadding = _;\n        return _chart;\n    };\n\n    _chart._outerRangeBandPadding = function (_) {\n        if (!arguments.length) {\n            return _outerRangeBandPadding;\n        }\n        _outerRangeBandPadding = _;\n        return _chart;\n    };\n\n    dc.override(_chart, 'filter', function (_) {\n        if (!arguments.length) {\n            return _chart._filter();\n        }\n\n        _chart._filter(_);\n\n        _chart.redrawBrush(_, false);\n\n        return _chart;\n    });\n\n    /**\n     * Get or set the brush. Brush must be an instance of d3 brushes\n     * https://github.com/d3/d3-brush/blob/master/README.md\n     * You will use this only if you are writing a new chart type that supports brushing.\n     *\n     * **Caution**: dc creates and manages brushes internally. Go through and understand the source code\n     * if you want to pass a new brush object. Even if you are only using the getter,\n     * the brush object may not behave the way you expect.\n     *\n     * @method brush\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {d3.brush} [_]\n     * @returns {d3.brush|dc.coordinateGridMixin}\n     */\n    _chart.brush = function (_) {\n        if (!arguments.length) {\n            return _brush;\n        }\n        _brush = _;\n        return _chart;\n    };\n\n    _chart.renderBrush = function (g, doTransition) {\n        if (_brushOn) {\n            _brush.on('start brush end', _chart._brushing);\n\n            // To retrieve selection we need _gBrush\n            _gBrush = g.append('g')\n                .attr('class', 'brush')\n                .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n            _chart.setBrushExtents();\n\n            _chart.createBrushHandlePaths(_gBrush, doTransition);\n\n            _chart.redrawBrush(_chart.filter(), doTransition);\n        }\n    };\n\n    _chart.createBrushHandlePaths = function (gBrush) {\n        var brushHandles = gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS).data([{type: 'w'}, {type: 'e'}]);\n\n        brushHandles = brushHandles\n            .enter()\n            .append('path')\n            .attr('class', CUSTOM_BRUSH_HANDLE_CLASS)\n            .merge(brushHandles);\n\n        brushHandles\n            .attr('d', _chart.resizeHandlePath);\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (brushSelection && _chart.round()) {\n            brushSelection[0] = _chart.round()(brushSelection[0]);\n            brushSelection[1] = _chart.round()(brushSelection[1]);\n        }\n        return brushSelection;\n    };\n\n    _chart.brushIsEmpty = function (brushSelection) {\n        return !brushSelection || brushSelection[1] <= brushSelection[0];\n    };\n\n    _chart._brushing = function () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when brush.move is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing brush move programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var brushSelection = d3.event.selection;\n        if (brushSelection) {\n            brushSelection = brushSelection.map(_chart.x().invert);\n        }\n\n        brushSelection = _chart.extendBrush(brushSelection);\n\n        _chart.redrawBrush(brushSelection, false);\n\n        var rangedFilter = _chart.brushIsEmpty(brushSelection) ? null : dc.filters.RangedFilter(brushSelection[0], brushSelection[1]);\n\n        dc.events.trigger(function () {\n            _chart.applyBrushSelection(rangedFilter);\n        }, dc.constants.EVENT_DELAY);\n    };\n\n    // This can be overridden in a derived chart. For example Composite chart overrides it\n    _chart.applyBrushSelection = function (rangedFilter) {\n        _chart.replaceFilter(rangedFilter);\n        _chart.redrawGroup();\n    };\n\n    _chart.setBrushExtents = function (doTransition) {\n        // Set boundaries of the brush, must set it before applying to _gBrush\n        _brush.extent([[0, 0], [_chart.effectiveWidth(), _chart.effectiveHeight()]]);\n\n        _gBrush\n            .call(_brush);\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        if (_brushOn && _gBrush) {\n            if (_resizing) {\n                _chart.setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                _gBrush\n                    .call(_brush.move, null);\n\n                _gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS)\n                    .attr('display', 'none');\n            } else {\n                var scaledSelection = [_x(brushSelection[0]), _x(brushSelection[1])];\n\n                var gBrush =\n                    dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(_gBrush);\n\n                gBrush\n                    .call(_brush.move, scaledSelection);\n\n                gBrush.selectAll('path.' + CUSTOM_BRUSH_HANDLE_CLASS)\n                    .attr('display', null)\n                    .attr('transform', function (d, i) {\n                        return 'translate(' + _x(brushSelection[i]) + ', 0)';\n                    })\n                    .attr('d', _chart.resizeHandlePath);\n            }\n        }\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        // do nothing, sub-chart should override this function\n    };\n\n    // borrowed from Crossfilter example\n    _chart.resizeHandlePath = function (d) {\n        d = d.type;\n        var e = +(d === 'e'), x = e ? 1 : -1, y = _chart.effectiveHeight() / 3;\n        return 'M' + (0.5 * x) + ',' + y +\n            'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6) +\n            'V' + (2 * y - 6) +\n            'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y) +\n            'Z' +\n            'M' + (2.5 * x) + ',' + (y + 8) +\n            'V' + (2 * y - 8) +\n            'M' + (4.5 * x) + ',' + (y + 8) +\n            'V' + (2 * y - 8);\n    };\n\n    function getClipPathId () {\n        return _chart.anchorName().replace(/[ .#=\\[\\]\"]/g, '-') + '-clip';\n    }\n\n    /**\n     * Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to\n     * the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area\n     * will be exactly the chart body area minus the margins.\n     * @method clipPadding\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Number} [padding=5]\n     * @returns {Number|dc.coordinateGridMixin}\n     */\n    _chart.clipPadding = function (padding) {\n        if (!arguments.length) {\n            return _clipPadding;\n        }\n        _clipPadding = padding;\n        return _chart;\n    };\n\n    function generateClipPath () {\n        var defs = dc.utils.appendOrSelect(_parent, 'defs');\n        // cannot select <clippath> elements; bug in WebKit, must select by id\n        // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n        var id = getClipPathId();\n        var chartBodyClip = dc.utils.appendOrSelect(defs, '#' + id, 'clipPath').attr('id', id);\n\n        var padding = _clipPadding * 2;\n\n        dc.utils.appendOrSelect(chartBodyClip, 'rect')\n            .attr('width', _chart.xAxisLength() + padding)\n            .attr('height', _chart.yAxisHeight() + padding)\n            .attr('transform', 'translate(-' + _clipPadding + ', -' + _clipPadding + ')');\n    }\n\n    _chart._preprocessData = function () {};\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _chart._preprocessData();\n\n        _chart._generateG();\n        generateClipPath();\n\n        drawChart(true);\n\n        configureMouseZoom();\n\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        _chart._preprocessData();\n\n        drawChart(false);\n        generateClipPath();\n\n        return _chart;\n    };\n\n    function drawChart (render) {\n        if (_chart.isOrdinal()) {\n            _brushOn = false;\n        }\n\n        prepareXAxis(_chart.g(), render);\n        _chart._prepareYAxis(_chart.g());\n\n        _chart.plotData();\n\n        if (_chart.elasticX() || _resizing || render) {\n            _chart.renderXAxis(_chart.g());\n        }\n\n        if (_chart.elasticY() || _resizing || render) {\n            _chart.renderYAxis(_chart.g());\n        }\n\n        if (render) {\n            _chart.renderBrush(_chart.g(), false);\n        } else {\n            // Animate the brush only while resizing\n            _chart.redrawBrush(_chart.filter(), _resizing);\n        }\n        _chart.fadeDeselectedArea(_chart.filter());\n        _resizing = false;\n    }\n\n    function configureMouseZoom () {\n        // Save a copy of original x scale\n        _origX = _x.copy();\n\n        if (_mouseZoomable) {\n            _chart._enableMouseZoom();\n        } else if (_hasBeenMouseZoomable) {\n            _chart._disableMouseZoom();\n        }\n    }\n\n    _chart._enableMouseZoom = function () {\n        _hasBeenMouseZoomable = true;\n\n        var extent = [[0, 0],[_chart.effectiveWidth(), _chart.effectiveHeight()]];\n\n        _zoom\n            .scaleExtent(_zoomScale)\n            .extent(extent)\n            .duration(_chart.transitionDuration());\n\n        if (_zoomOutRestrict) {\n            // Ensure minimum zoomScale is at least 1\n            var zoomScaleMin = Math.max(_zoomScale[0], 1);\n            _zoom\n                .translateExtent(extent)\n                .scaleExtent([zoomScaleMin, _zoomScale[1]]);\n        }\n\n        _chart.root().call(_zoom);\n\n        // Tell D3 zoom our current zoom/pan status\n        updateD3zoomTransform();\n    };\n\n    _chart._disableMouseZoom = function () {\n        _chart.root().call(_nullZoom);\n    };\n\n    function zoomHandler (newDomain, noRaiseEvents) {\n        var domFilter;\n\n        if (hasRangeSelected(newDomain)) {\n            _chart.x().domain(newDomain);\n            domFilter = dc.filters.RangedFilter(newDomain[0], newDomain[1]);\n        } else {\n            _chart.x().domain(_xOriginalDomain);\n            domFilter = null;\n        }\n\n        _chart.replaceFilter(domFilter);\n        _chart.rescale();\n        _chart.redraw();\n\n        if (!noRaiseEvents) {\n            if (_rangeChart && !rangesEqual(_chart.filter(), _rangeChart.filter())) {\n                dc.events.trigger(function () {\n                    _rangeChart.replaceFilter(domFilter);\n                    _rangeChart.redraw();\n                });\n            }\n\n            _chart._invokeZoomedListener();\n            dc.events.trigger(function () {\n                _chart.redrawGroup();\n            }, dc.constants.EVENT_DELAY);\n        }\n    }\n\n    // event.transform.rescaleX(_origX).domain() should give back newDomain\n    function domainToZoomTransform (newDomain, origDomain, xScale) {\n        var k = (origDomain[1] - origDomain[0]) / (newDomain[1] - newDomain[0]);\n        var xt = -1 * xScale(newDomain[0]);\n\n        return d3.zoomIdentity.scale(k).translate(xt, 0);\n    }\n\n    // If we changing zoom status (for example by calling focus), tell D3 zoom about it\n    function updateD3zoomTransform () {\n        if (_zoom) {\n            _zoom.transform(_chart.root(), domainToZoomTransform(_chart.x().domain(), _xOriginalDomain, _origX));\n        }\n    }\n\n    function onZoom () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when zoom is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing zoom programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'zoom', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var newDomain = d3.event.transform.rescaleX(_origX).domain();\n        _chart.focus(newDomain, false);\n    }\n\n    function checkExtents (ext, outerLimits) {\n        if (!ext || ext.length !== 2 || !outerLimits || outerLimits.length !== 2) {\n            return ext;\n        }\n\n        if (ext[0] > outerLimits[1] || ext[1] < outerLimits[0]) {\n            console.warn('Could not intersect extents, will reset');\n        }\n        // Math.max does not work (as the values may be dates as well)\n        return [ext[0] > outerLimits[0] ? ext[0] : outerLimits[0], ext[1] < outerLimits[1] ? ext[1] : outerLimits[1]];\n    }\n\n    /**\n     * Zoom this chart to focus on the given range. The given range should be an array containing only\n     * 2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set\n     * to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;\n     * otherwise focus will be ignored.\n     *\n     * To avoid ping-pong volley of events between a pair of range and focus charts please set\n     * `noRaiseEvents` to `true`. In that case it will update this chart but will not fire `zoom` event\n     * and not try to update back the associated range chart.\n     * If you are calling it manually - typically you will leave it to `false` (the default).\n     *\n     * @method focus\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @example\n     * chart.on('renderlet', function(chart) {\n     *     // smooth the rendering through event throttling\n     *     dc.events.trigger(function(){\n     *          // focus some other chart to the range selected by user on this chart\n     *          someOtherChart.focus(chart.filter());\n     *     });\n     * })\n     * @param {Array<Number>} [range]\n     * @param {Boolean} [noRaiseEvents = false]\n     */\n    _chart.focus = function (range, noRaiseEvents) {\n        if (_zoomOutRestrict) {\n            // ensure range is within _xOriginalDomain\n            range = checkExtents(range, _xOriginalDomain);\n\n            // If it has an associated range chart ensure range is within domain of that rangeChart\n            if (_rangeChart) {\n                range = checkExtents(range, _rangeChart.x().domain());\n            }\n        }\n\n        zoomHandler(range, noRaiseEvents);\n        updateD3zoomTransform();\n    };\n\n    _chart.refocused = function () {\n        return !rangesEqual(_chart.x().domain(), _xOriginalDomain);\n    };\n\n    _chart.focusChart = function (c) {\n        if (!arguments.length) {\n            return _focusChart;\n        }\n        _focusChart = c;\n        _chart.on('filtered', function (chart) {\n            if (!chart.filter()) {\n                dc.events.trigger(function () {\n                    _focusChart.x().domain(_focusChart.xOriginalDomain(), true);\n                });\n            } else if (!rangesEqual(chart.filter(), _focusChart.filter())) {\n                dc.events.trigger(function () {\n                    _focusChart.focus(chart.filter(), true);\n                });\n            }\n        });\n        return _chart;\n    };\n\n    function rangesEqual (range1, range2) {\n        if (!range1 && !range2) {\n            return true;\n        } else if (!range1 || !range2) {\n            return false;\n        } else if (range1.length === 0 && range2.length === 0) {\n            return true;\n        } else if (range1[0].valueOf() === range2[0].valueOf() &&\n            range1[1].valueOf() === range2[1].valueOf()) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse\n     * across a chart with a quantitative scale to perform range filtering based on the extent of the\n     * brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and\n     * un-filter them. However turning on the brush filter will disable other interactive elements on\n     * the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible\n     * if enabled, but only via scrolling (panning will be disabled.)\n     * @method brushOn\n     * @memberof dc.coordinateGridMixin\n     * @instance\n     * @param {Boolean} [brushOn=true]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.brushOn = function (brushOn) {\n        if (!arguments.length) {\n            return _brushOn;\n        }\n        _brushOn = brushOn;\n        return _chart;\n    };\n\n    /**\n     * This will be internally used by composite chart onto children. Please go not invoke directly.\n     *\n     * @method parentBrushOn\n     * @memberof dc.coordinateGridMixin\n     * @protected\n     * @instance\n     * @param {Boolean} [brushOn=false]\n     * @returns {Boolean|dc.coordinateGridMixin}\n     */\n    _chart.parentBrushOn = function (brushOn) {\n        if (!arguments.length) {\n            return _parentBrushOn;\n        }\n        _parentBrushOn = brushOn;\n        return _chart;\n    };\n\n    // Get the SVG rendered brush\n    _chart.gBrush = function () {\n        return _gBrush;\n    };\n\n    function hasRangeSelected (range) {\n        return range instanceof Array && range.length > 1;\n    }\n\n    return _chart;\n};\n\n/**\n * Stack Mixin is an mixin that provides cross-chart support of stackability using d3.stackD3v3.\n * @name stackMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.stackMixin}\n */\ndc.stackMixin = function (_chart) {\n\n    function prepareValues (layer, layerIdx) {\n        var valAccessor = layer.accessor || _chart.valueAccessor();\n        layer.name = String(layer.name || layerIdx);\n        var allValues = layer.group.all().map(function (d, i) {\n            return {\n                x: _chart.keyAccessor()(d, i),\n                y: layer.hidden ? null : valAccessor(d, i),\n                data: d,\n                layer: layer.name,\n                hidden: layer.hidden\n            };\n        });\n\n        layer.domainValues = allValues.filter(domainFilter());\n        layer.values = _chart.evadeDomainFilter() ? allValues : layer.domainValues;\n    }\n\n    var _stackLayout = d3.stack();\n\n    var _stack = [];\n    var _titles = {};\n\n    var _hidableStacks = false;\n    var _evadeDomainFilter = false;\n\n    function domainFilter () {\n        if (!_chart.x()) {\n            return dc.utils.constant(true);\n        }\n        var xDomain = _chart.x().domain();\n        if (_chart.isOrdinal()) {\n            // TODO #416\n            //var domainSet = d3.set(xDomain);\n            return function () {\n                return true; //domainSet.has(p.x);\n            };\n        }\n        if (_chart.elasticX()) {\n            return function () { return true; };\n        }\n        return function (p) {\n            //return true;\n            return p.x >= xDomain[0] && p.x <= xDomain[xDomain.length - 1];\n        };\n    }\n\n    /**\n     * Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks\n     * in the same chart will share the same key accessor and therefore the same set of keys.\n     *\n     * For example, in a stacked bar chart, the bars of each stack will be positioned using the same set\n     * of keys on the x axis, while stacked vertically. If name is specified then it will be used to\n     * generate the legend label.\n     * @method stack\n     * @memberof dc.stackMixin\n     * @instance\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n     * @example\n     * // stack group using default accessor\n     * chart.stack(valueSumGroup)\n     * // stack group using custom accessor\n     * .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\n     * @param {crossfilter.group} group\n     * @param {String} [name]\n     * @param {Function} [accessor]\n     * @returns {Array<{group: crossfilter.group, name: String, accessor: Function}>|dc.stackMixin}\n     */\n    _chart.stack = function (group, name, accessor) {\n        if (!arguments.length) {\n            return _stack;\n        }\n\n        if (arguments.length <= 2) {\n            accessor = name;\n        }\n\n        var layer = {group: group};\n        if (typeof name === 'string') {\n            layer.name = name;\n        }\n        if (typeof accessor === 'function') {\n            layer.accessor = accessor;\n        }\n        _stack.push(layer);\n\n        return _chart;\n    };\n\n    dc.override(_chart, 'group', function (g, n, f) {\n        if (!arguments.length) {\n            return _chart._group();\n        }\n        _stack = [];\n        _titles = {};\n        _chart.stack(g, n);\n        if (f) {\n            _chart.valueAccessor(f);\n        }\n        return _chart._group(g, n);\n    });\n\n    /**\n     * Allow named stacks to be hidden or shown by clicking on legend items.\n     * This does not affect the behavior of hideStack or showStack.\n     * @method hidableStacks\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {Boolean} [hidableStacks=false]\n     * @returns {Boolean|dc.stackMixin}\n     */\n    _chart.hidableStacks = function (hidableStacks) {\n        if (!arguments.length) {\n            return _hidableStacks;\n        }\n        _hidableStacks = hidableStacks;\n        return _chart;\n    };\n\n    function findLayerByName (n) {\n        var i = _stack.map(dc.pluck('name')).indexOf(n);\n        return _stack[i];\n    }\n\n    /**\n     * Hide all stacks on the chart with the given name.\n     * The chart must be re-rendered for this change to appear.\n     * @method hideStack\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {String} stackName\n     * @returns {dc.stackMixin}\n     */\n    _chart.hideStack = function (stackName) {\n        var layer = findLayerByName(stackName);\n        if (layer) {\n            layer.hidden = true;\n        }\n        return _chart;\n    };\n\n    /**\n     * Show all stacks on the chart with the given name.\n     * The chart must be re-rendered for this change to appear.\n     * @method showStack\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {String} stackName\n     * @returns {dc.stackMixin}\n     */\n    _chart.showStack = function (stackName) {\n        var layer = findLayerByName(stackName);\n        if (layer) {\n            layer.hidden = false;\n        }\n        return _chart;\n    };\n\n    _chart.getValueAccessorByIndex = function (index) {\n        return _stack[index].accessor || _chart.valueAccessor();\n    };\n\n    _chart.yAxisMin = function () {\n        var min = d3.min(flattenStack(), function (p) {\n            return (p.y < 0) ? (p.y + p.y0) : p.y0;\n        });\n\n        return dc.utils.subtract(min, _chart.yAxisPadding());\n\n    };\n\n    _chart.yAxisMax = function () {\n        var max = d3.max(flattenStack(), function (p) {\n            return (p.y > 0) ? (p.y + p.y0) : p.y0;\n        });\n\n        return dc.utils.add(max, _chart.yAxisPadding());\n    };\n\n    function flattenStack () {\n        var valueses = _chart.data().map(function (layer) { return layer.domainValues; });\n        return Array.prototype.concat.apply([], valueses);\n    }\n\n    _chart.xAxisMin = function () {\n        var min = d3.min(flattenStack(), dc.pluck('x'));\n        return dc.utils.subtract(min, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    };\n\n    _chart.xAxisMax = function () {\n        var max = d3.max(flattenStack(), dc.pluck('x'));\n        return dc.utils.add(max, _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    };\n\n    /**\n     * Set or get the title function. Chart class will use this function to render svg title (usually interpreted by\n     * browser as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart.\n     * Almost every chart supports title function however in grid coordinate chart you need to turn off brush in order to\n     * use title otherwise the brush layer will block tooltip trigger.\n     *\n     * If the first argument is a stack name, the title function will get or set the title for that stack. If stackName\n     * is not provided, the first stack is implied.\n     * @method title\n     * @memberof dc.stackMixin\n     * @instance\n     * @example\n     * // set a title function on 'first stack'\n     * chart.title('first stack', function(d) { return d.key + ': ' + d.value; });\n     * // get a title function from 'second stack'\n     * var secondTitleFunction = chart.title('second stack');\n     * @param {String} [stackName]\n     * @param {Function} [titleAccessor]\n     * @returns {String|dc.stackMixin}\n     */\n    dc.override(_chart, 'title', function (stackName, titleAccessor) {\n        if (!stackName) {\n            return _chart._title();\n        }\n\n        if (typeof stackName === 'function') {\n            return _chart._title(stackName);\n        }\n        if (stackName === _chart._groupName && typeof titleAccessor === 'function') {\n            return _chart._title(titleAccessor);\n        }\n\n        if (typeof titleAccessor !== 'function') {\n            return _titles[stackName] || _chart._title();\n        }\n\n        _titles[stackName] = titleAccessor;\n\n        return _chart;\n    });\n\n    /**\n     * Gets or sets the stack layout algorithm, which computes a baseline for each stack and\n     * propagates it to the next.\n     * @method stackLayout\n     * @memberof dc.stackMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md d3.stackD3v3}\n     * @param {Function} [stack=d3.stackD3v3]\n     * @returns {Function|dc.stackMixin}\n     */\n    _chart.stackLayout = function (stack) {\n        if (!arguments.length) {\n            return _stackLayout;\n        }\n        _stackLayout = stack;\n        return _chart;\n    };\n\n    /**\n     * Since dc.js 2.0, there has been {@link https://github.com/dc-js/dc.js/issues/949 an issue}\n     * where points are filtered to the current domain. While this is a useful optimization, it is\n     * incorrectly implemented: the next point outside the domain is required in order to draw lines\n     * that are clipped to the bounds, as well as bars that are partly clipped.\n     *\n     * A fix will be included in dc.js 2.1.x, but a workaround is needed for dc.js 2.0 and until\n     * that fix is published, so set this flag to skip any filtering of points.\n     *\n     * Once the bug is fixed, this flag will have no effect, and it will be deprecated.\n     * @method evadeDomainFilter\n     * @memberof dc.stackMixin\n     * @instance\n     * @param {Boolean} [evadeDomainFilter=false]\n     * @returns {Boolean|dc.stackMixin}\n     */\n    _chart.evadeDomainFilter = function (evadeDomainFilter) {\n        if (!arguments.length) {\n            return _evadeDomainFilter;\n        }\n        _evadeDomainFilter = evadeDomainFilter;\n        return _chart;\n    };\n\n    function visibility (l) {\n        return !l.hidden;\n    }\n\n    _chart.data(function () {\n        var layers = _stack.filter(visibility);\n        if (!layers.length) {\n            return [];\n        }\n        layers.forEach(prepareValues);\n        var v4data = layers[0].values.map(function (v, i) {\n            var col = {x: v.x};\n            layers.forEach(function (layer) {\n                col[layer.name] = layer.values[i].y;\n            });\n            return col;\n        });\n        var keys = layers.map(function (layer) { return layer.name; });\n        var v4result = _chart.stackLayout().keys(keys)(v4data);\n        v4result.forEach(function (series, i) {\n            series.forEach(function (ys, j) {\n                layers[i].values[j].y0 = ys[0];\n                layers[i].values[j].y1 = ys[1];\n            });\n        });\n        return layers;\n    });\n\n    _chart._ordinalXDomain = function () {\n        var flat = flattenStack().map(dc.pluck('data'));\n        var ordered = _chart._computeOrderedGroups(flat);\n        return ordered.map(_chart.keyAccessor());\n    };\n\n    _chart.colorAccessor(function (d) {\n        var layer = this.layer || this.name || d.name || d.layer;\n        return layer;\n    });\n\n    _chart.legendables = function () {\n        return _stack.map(function (layer, i) {\n            return {\n                chart: _chart,\n                name: layer.name,\n                hidden: layer.hidden || false,\n                color: _chart.getColor.call(layer, layer.values, i)\n            };\n        });\n    };\n\n    _chart.isLegendableHidden = function (d) {\n        var layer = findLayerByName(d.name);\n        return layer ? layer.hidden : false;\n    };\n\n    _chart.legendToggle = function (d) {\n        if (_hidableStacks) {\n            if (_chart.isLegendableHidden(d)) {\n                _chart.showStack(d.name);\n            } else {\n                _chart.hideStack(d.name);\n            }\n            //_chart.redraw();\n            _chart.renderGroup();\n        }\n    };\n\n    return _chart;\n};\n\n/**\n * Cap is a mixin that groups small data elements below a _cap_ into an *others* grouping for both the\n * Row and Pie Charts.\n *\n * The top ordered elements in the group up to the cap amount will be kept in the chart, and the rest\n * will be replaced with an *others* element, with value equal to the sum of the replaced values. The\n * keys of the elements below the cap limit are recorded in order to filter by those keys when the\n * others* element is clicked.\n * @name capMixin\n * @memberof dc\n * @mixin\n * @param {Object} _chart\n * @returns {dc.capMixin}\n */\ndc.capMixin = function (_chart) {\n    var _cap = Infinity, _takeFront = true;\n    var _othersLabel = 'Others';\n\n    // emulate old group.top(N) ordering\n    _chart.ordering(function (kv) {\n        return -kv.value;\n    });\n\n    var _othersGrouper = function (topItems, restItems) {\n        var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n            restKeys = restItems.map(_chart.keyAccessor());\n        if (restItemsSum > 0) {\n            return topItems.concat([{\n                others: restKeys,\n                key: _chart.othersLabel(),\n                value: restItemsSum\n            }]);\n        }\n        return topItems;\n    };\n\n    _chart.cappedKeyAccessor = function (d, i) {\n        if (d.others) {\n            return d.key;\n        }\n        return _chart.keyAccessor()(d, i);\n    };\n\n    _chart.cappedValueAccessor = function (d, i) {\n        if (d.others) {\n            return d.value;\n        }\n        return _chart.valueAccessor()(d, i);\n    };\n\n    // return N \"top\" groups, where N is the cap, sorted by baseMixin.ordering\n    // whether top means front or back depends on takeFront\n    _chart.data(function (group) {\n        if (_cap === Infinity) {\n            return _chart._computeOrderedGroups(group.all());\n        } else {\n            var items = group.all(), rest;\n            items = _chart._computeOrderedGroups(items); // sort by baseMixin.ordering\n\n            if (_cap) {\n                if (_takeFront) {\n                    rest = items.slice(_cap);\n                    items = items.slice(0, _cap);\n                } else {\n                    var start = Math.max(0, items.length - _cap);\n                    rest = items.slice(0, start);\n                    items = items.slice(start);\n                }\n            }\n\n            if (_othersGrouper) {\n                return _othersGrouper(items, rest);\n            }\n            return items;\n        }\n    });\n\n    /**\n     * Get or set the count of elements to that will be included in the cap. If there is an\n     * {@link dc.capMixin#othersGrouper othersGrouper}, any further elements will be combined in an\n     * extra element with its name determined by {@link dc.capMixin#othersLabel othersLabel}.\n     *\n     * As of dc.js 2.1 and onward, the capped charts use\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all()}\n     * and {@link dc.baseMixin#ordering baseMixin.ordering()} to determine the order of\n     * elements. Then `cap` and {@link dc.capMixin#takeFront takeFront} determine how many elements\n     * to keep, from which end of the resulting array.\n     *\n     * **Migration note:** Up through dc.js 2.0.*, capping used\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_top group.top(N)},\n     * which selects the largest items according to\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_order group.order()}.\n     * The chart then sorted the items according to {@link dc.baseMixin#ordering baseMixin.ordering()}.\n     * So the two values essentially had to agree, but if the `group.order()` was incorrect (it's\n     * easy to forget about), the wrong rows or slices would be displayed, in the correct order.\n     *\n     * If your chart previously relied on `group.order()`, use `chart.ordering()` instead. As of\n     * 2.1.5, the ordering defaults to sorting from greatest to least like `group.top(N)` did.\n     *\n     * If you want to cap by one ordering but sort by another, please\n     * [file an issue](https://github.com/dc-js/dc.js/issues/new) - it's still possible but we'll\n     * need to work up an example.\n     * @method cap\n     * @memberof dc.capMixin\n     * @instance\n     * @param {Number} [count=Infinity]\n     * @returns {Number|dc.capMixin}\n     */\n    _chart.cap = function (count) {\n        if (!arguments.length) {\n            return _cap;\n        }\n        _cap = count;\n        return _chart;\n    };\n\n    /**\n     * Get or set the direction of capping. If set, the chart takes the first\n     * {@link dc.capMixin#cap cap} elements from the sorted array of elements; otherwise\n     * it takes the last `cap` elements.\n     * @method takeFront\n     * @memberof dc.capMixin\n     * @instance\n     * @param {Boolean} [takeFront=true]\n     * @returns {Boolean|dc.capMixin}\n     */\n    _chart.takeFront = function (takeFront) {\n        if (!arguments.length) {\n            return _takeFront;\n        }\n        _takeFront = takeFront;\n        return _chart;\n    };\n\n    /**\n     * Get or set the label for *Others* slice when slices cap is specified.\n     * @method othersLabel\n     * @memberof dc.capMixin\n     * @instance\n     * @param {String} [label=\"Others\"]\n     * @returns {String|dc.capMixin}\n     */\n    _chart.othersLabel = function (label) {\n        if (!arguments.length) {\n            return _othersLabel;\n        }\n        _othersLabel = label;\n        return _chart;\n    };\n\n    /**\n     * Get or set the grouper function that will perform the insertion of data for the *Others* slice\n     * if the slices cap is specified. If set to a falsy value, no others will be added.\n     *\n     * The grouper function takes an array of included (\"top\") items, and an array of the rest of\n     * the items. By default the grouper function computes the sum of the rest.\n     * @method othersGrouper\n     * @memberof dc.capMixin\n     * @instance\n     * @example\n     * // Do not show others\n     * chart.othersGrouper(null);\n     * // Default others grouper\n     * chart.othersGrouper(function (topItems, restItems) {\n     *     var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n     *         restKeys = restItems.map(_chart.keyAccessor());\n     *     if (restItemsSum > 0) {\n     *         return topItems.concat([{\n     *             others: restKeys,\n     *             key: _chart.othersLabel(),\n     *             value: restItemsSum\n     *         }]);\n     *     }\n     *     return topItems;\n     * });\n     * @param {Function} [grouperFunction]\n     * @returns {Function|dc.capMixin}\n     */\n    _chart.othersGrouper = function (grouperFunction) {\n        if (!arguments.length) {\n            return _othersGrouper;\n        }\n        _othersGrouper = grouperFunction;\n        return _chart;\n    };\n\n    dc.override(_chart, 'onClick', function (d) {\n        if (d.others) {\n            _chart.filter([d.others]);\n        }\n        _chart._onClick(d);\n    });\n\n    return _chart;\n};\n\n/**\n * This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.\n * @name bubbleMixin\n * @memberof dc\n * @mixin\n * @mixes dc.colorMixin\n * @param {Object} _chart\n * @returns {dc.bubbleMixin}\n */\ndc.bubbleMixin = function (_chart) {\n    var _maxBubbleRelativeSize = 0.3;\n    var _minRadiusWithLabel = 10;\n    var _sortBubbleSize = false;\n    var _elasticRadius = false;\n\n    _chart.BUBBLE_NODE_CLASS = 'node';\n    _chart.BUBBLE_CLASS = 'bubble';\n    _chart.MIN_RADIUS = 10;\n\n    _chart = dc.colorMixin(_chart);\n\n    _chart.renderLabel(true);\n\n    _chart.data(function (group) {\n        var data = group.all();\n        if (_sortBubbleSize) {\n            // sort descending so smaller bubbles are on top\n            var radiusAccessor = _chart.radiusValueAccessor();\n            data.sort(function (a, b) { return d3.descending(radiusAccessor(a), radiusAccessor(b)); });\n        }\n        return data;\n    });\n\n    var _r = d3.scaleLinear().domain([0, 100]);\n\n    var _rValueAccessor = function (d) {\n        return d.r;\n    };\n\n    /**\n     * Get or set the bubble radius scale. By default the bubble chart uses\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleLinear d3.scaleLinear().domain([0, 100])}\n     * as its radius scale.\n     * @method r\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [bubbleRadiusScale=d3.scaleLinear().domain([0, 100])]\n     * @returns {d3.scale|dc.bubbleMixin}\n     */\n    _chart.r = function (bubbleRadiusScale) {\n        if (!arguments.length) {\n            return _r;\n        }\n        _r = bubbleRadiusScale;\n        return _chart;\n    };\n\n    /**\n     * Turn on or off the elastic bubble radius feature, or return the value of the flag. If this\n     * feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.\n     * @method elasticRadius\n     * @memberof dc.bubbleChart\n     * @instance\n     * @param {Boolean} [elasticRadius=false]\n     * @returns {Boolean|dc.bubbleChart}\n     */\n    _chart.elasticRadius = function (elasticRadius) {\n        if (!arguments.length) {\n            return _elasticRadius;\n        }\n        _elasticRadius = elasticRadius;\n        return _chart;\n    };\n\n    _chart.calculateRadiusDomain = function () {\n        if (_elasticRadius) {\n            _chart.r().domain([_chart.rMin(), _chart.rMax()]);\n        }\n    };\n\n    /**\n     * Get or set the radius value accessor function. If set, the radius value accessor function will\n     * be used to retrieve a data value for each bubble. The data retrieved then will be mapped using\n     * the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble\n     * size.\n     * @method radiusValueAccessor\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Function} [radiusValueAccessor]\n     * @returns {Function|dc.bubbleMixin}\n     */\n    _chart.radiusValueAccessor = function (radiusValueAccessor) {\n        if (!arguments.length) {\n            return _rValueAccessor;\n        }\n        _rValueAccessor = radiusValueAccessor;\n        return _chart;\n    };\n\n    _chart.rMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return min;\n    };\n\n    _chart.rMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return _chart.radiusValueAccessor()(e);\n        });\n        return max;\n    };\n\n    _chart.bubbleR = function (d) {\n        var value = _chart.radiusValueAccessor()(d);\n        var r = _chart.r()(value);\n        if (isNaN(r) || value <= 0) {\n            r = 0;\n        }\n        return r;\n    };\n\n    var labelFunction = function (d) {\n        return _chart.label()(d);\n    };\n\n    var shouldLabel = function (d) {\n        return (_chart.bubbleR(d) > _minRadiusWithLabel);\n    };\n\n    var labelOpacity = function (d) {\n        return shouldLabel(d) ? 1 : 0;\n    };\n\n    var labelPointerEvent = function (d) {\n        return shouldLabel(d) ? 'all' : 'none';\n    };\n\n    _chart._doRenderLabel = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var label = bubbleGEnter.select('text');\n\n            if (label.empty()) {\n                label = bubbleGEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                    .attr('dy', '.3em')\n                    .on('click', _chart.onClick);\n            }\n\n            label\n                .attr('opacity', 0)\n                .attr('pointer-events', labelPointerEvent)\n                .text(labelFunction);\n            dc.transition(label, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', labelOpacity);\n        }\n    };\n\n    _chart.doUpdateLabels = function (bubbleGEnter) {\n        if (_chart.renderLabel()) {\n            var labels = bubbleGEnter.select('text')\n                .attr('pointer-events', labelPointerEvent)\n                .text(labelFunction);\n            dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('opacity', labelOpacity);\n        }\n    };\n\n    var titleFunction = function (d) {\n        return _chart.title()(d);\n    };\n\n    _chart._doRenderTitles = function (g) {\n        if (_chart.renderTitle()) {\n            var title = g.select('title');\n\n            if (title.empty()) {\n                g.append('title').text(titleFunction);\n            }\n        }\n    };\n\n    _chart.doUpdateTitles = function (g) {\n        if (_chart.renderTitle()) {\n            g.select('title').text(titleFunction);\n        }\n    };\n\n    /**\n     * Turn on or off the bubble sorting feature, or return the value of the flag. If enabled,\n     * bubbles will be sorted by their radius, with smaller bubbles in front.\n     * @method sortBubbleSize\n     * @memberof dc.bubbleChart\n     * @instance\n     * @param {Boolean} [sortBubbleSize=false]\n     * @returns {Boolean|dc.bubbleChart}\n     */\n    _chart.sortBubbleSize = function (sortBubbleSize) {\n        if (!arguments.length) {\n            return _sortBubbleSize;\n        }\n        _sortBubbleSize = sortBubbleSize;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimum radius. This will be used to initialize the radius scale's range.\n     * @method minRadius\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [radius=10]\n     * @returns {Number|dc.bubbleMixin}\n     */\n    _chart.minRadius = function (radius) {\n        if (!arguments.length) {\n            return _chart.MIN_RADIUS;\n        }\n        _chart.MIN_RADIUS = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimum radius for label rendering. If a bubble's radius is less than this value\n     * then no label will be rendered.\n     * @method minRadiusWithLabel\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [radius=10]\n     * @returns {Number|dc.bubbleMixin}\n     */\n\n    _chart.minRadiusWithLabel = function (radius) {\n        if (!arguments.length) {\n            return _minRadiusWithLabel;\n        }\n        _minRadiusWithLabel = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the maximum relative size of a bubble to the length of x axis. This value is useful\n     * when the difference in radius between bubbles is too great.\n     * @method maxBubbleRelativeSize\n     * @memberof dc.bubbleMixin\n     * @instance\n     * @param {Number} [relativeSize=0.3]\n     * @returns {Number|dc.bubbleMixin}\n     */\n    _chart.maxBubbleRelativeSize = function (relativeSize) {\n        if (!arguments.length) {\n            return _maxBubbleRelativeSize;\n        }\n        _maxBubbleRelativeSize = relativeSize;\n        return _chart;\n    };\n\n    _chart.fadeDeselectedArea = function (selection) {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _chart.BUBBLE_NODE_CLASS).each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    _chart.onClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    return _chart;\n};\n\n/**\n * The pie chart implementation is usually used to visualize a small categorical distribution.  The pie\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering}\n * which defaults to sorting by key.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class pieChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a pie chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.pieChart('#chart-container1');\n * // create a pie chart under #chart-container2 element using chart group A\n * var chart2 = dc.pieChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.pieChart}\n */\ndc.pieChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = 'pie-slice';\n    var _labelCssClass = 'pie-label';\n    var _sliceGroupCssClass = 'pie-slice-group';\n    var _labelGroupCssClass = 'pie-label-group';\n    var _emptyCssClass = 'empty-chart';\n    var _emptyTitle = 'empty';\n\n    var _radius,\n        _givenRadius, // specified radius, if any\n        _innerRadius = 0,\n        _externalRadiusPadding = 0;\n\n    var _g;\n    var _cx;\n    var _cy;\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n    var _externalLabelRadius;\n    var _drawPaths = false;\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\n\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    /**\n     * Get or set the maximum number of slices the pie chart will generate. The top slices are determined by\n     * value from high to low. Other slices exeeding the cap will be rolled up into one single *Others* slice.\n     * @method slicesCap\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cap]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.slicesCap = _chart.cap;\n\n    _chart.label(_chart.cappedKeyAccessor);\n    _chart.renderLabel(true);\n\n    _chart.transitionDuration(350);\n    _chart.transitionDelay(0);\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n\n        _g.append('g').attr('class', _sliceGroupCssClass);\n        _g.append('g').attr('class', _labelGroupCssClass);\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart () {\n        // set radius from chart size if none given, or if given radius is too large\n        var maxRadius =  d3.min([_chart.width(), _chart.height()]) / 2;\n        _radius = _givenRadius && _givenRadius < maxRadius ? _givenRadius : maxRadius;\n\n        var arc = buildArcs();\n\n        var pie = pieLayout();\n        var pieData;\n        // if we have data...\n        if (d3.sum(_chart.data(), _chart.valueAccessor())) {\n            pieData = pie(_chart.data());\n            _g.classed(_emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            pieData = pie([{key: _emptyTitle, value: 1, others: [_emptyTitle]}]);\n            _g.classed(_emptyCssClass, true);\n        }\n\n        if (_g) {\n            var slices = _g.select('g.' + _sliceGroupCssClass)\n                .selectAll('g.' + _sliceCssClass)\n                .data(pieData);\n\n            var labels = _g.select('g.' + _labelGroupCssClass)\n                .selectAll('text.' + _labelCssClass)\n                .data(pieData);\n\n            removeElements(slices, labels);\n\n            createElements(slices, labels, arc, pieData);\n\n            updateElements(pieData, arc);\n\n            highlightFilter();\n\n            dc.transition(_g, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n        }\n    }\n\n    function createElements (slices, labels, arc, pieData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n\n        createTitles(slicesEnter);\n\n        createLabels(labels, pieData, arc);\n    }\n\n    function createSliceNodes (slices) {\n        var slicesEnter = slices\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _sliceCssClass + ' _' + i;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath (slicesEnter, arc) {\n        var slicePath = slicesEnter.append('path')\n            .attr('fill', fill)\n            .on('click', onClick)\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n\n        var transition = dc.transition(slicePath, _chart.transitionDuration(), _chart.transitionDelay());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenPie);\n        }\n    }\n\n    function createTitles (slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append('title').text(function (d) {\n                return _chart.title()(d.data);\n            });\n        }\n    }\n\n    _chart._applyLabelText = function (labels) {\n        labels\n            .text(function (d) {\n                var data = d.data;\n                if ((sliceHasNoData(data) || sliceTooSmall(d)) && !isSelectedSlice(d)) {\n                    return '';\n                }\n                return _chart.label()(d.data);\n            });\n    };\n\n    function positionLabels (labels, arc) {\n        _chart._applyLabelText(labels);\n        dc.transition(labels, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', function (d) {\n                return labelPosition(d, arc);\n            })\n            .attr('text-anchor', 'middle');\n    }\n\n    function highlightSlice (i, whether) {\n        _chart.select('g.pie-slice._' + i)\n            .classed('highlight', whether);\n    }\n\n    function createLabels (labels, pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', function (d, i) {\n                    var classes = _sliceCssClass + ' ' + _labelCssClass + ' _' + i;\n                    if (_externalLabelRadius) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on('click', onClick)\n                .on('mouseover', function (d, i) {\n                    highlightSlice(i, true);\n                })\n                .on('mouseout', function (d, i) {\n                    highlightSlice(i, false);\n                });\n            positionLabels(labelsEnter, arc);\n            if (_externalLabelRadius && _drawPaths) {\n                updateLabelPaths(pieData, arc);\n            }\n        }\n    }\n\n    function updateLabelPaths (pieData, arc) {\n        var polyline = _g.selectAll('polyline.' + _sliceCssClass)\n                .data(pieData);\n\n        polyline.exit().remove();\n\n        polyline = polyline\n            .enter()\n            .append('polyline')\n            .attr('class', function (d, i) {\n                return 'pie-path _' + i + ' ' + _sliceCssClass;\n            })\n            .on('click', onClick)\n            .on('mouseover', function (d, i) {\n                highlightSlice(i, true);\n            })\n            .on('mouseout', function (d, i) {\n                highlightSlice(i, false);\n            })\n            .merge(polyline);\n\n        var arc2 = d3.arc()\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .innerRadius(_radius - _externalRadiusPadding);\n        var transition = dc.transition(polyline, _chart.transitionDuration(), _chart.transitionDelay());\n        // this is one rare case where d3.selection differs from d3.transition\n        if (transition.attrTween) {\n            transition\n                .attrTween('points', function (d) {\n                    var current = this._current || d;\n                    current = {startAngle: current.startAngle, endAngle: current.endAngle};\n                    var interpolate = d3.interpolate(current, d);\n                    this._current = interpolate(0);\n                    return function (t) {\n                        var d2 = interpolate(t);\n                        return [arc.centroid(d2), arc2.centroid(d2)];\n                    };\n                });\n        } else {\n            transition.attr('points', function (d) {\n                return [arc.centroid(d), arc2.centroid(d)];\n            });\n        }\n        transition.style('visibility', function (d) {\n            return d.endAngle - d.startAngle < 0.0001 ? 'hidden' : 'visible';\n        });\n\n    }\n\n    function updateElements (pieData, arc) {\n        updateSlicePaths(pieData, arc);\n        updateLabels(pieData, arc);\n        updateTitles(pieData);\n    }\n\n    function updateSlicePaths (pieData, arc) {\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\n            .data(pieData)\n            .select('path')\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        var transition = dc.transition(slicePaths, _chart.transitionDuration(), _chart.transitionDelay());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenPie);\n        }\n        transition.attr('fill', fill);\n    }\n\n    function updateLabels (pieData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _labelCssClass)\n                .data(pieData);\n            positionLabels(labels, arc);\n            if (_externalLabelRadius && _drawPaths) {\n                updateLabelPaths(pieData, arc);\n            }\n        }\n    }\n\n    function updateTitles (pieData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll('g.' + _sliceCssClass)\n                .data(pieData)\n                .select('title')\n                .text(function (d) {\n                    return _chart.title()(d.data);\n                });\n        }\n    }\n\n    function removeElements (slices, labels) {\n        slices.exit().remove();\n        labels.exit().remove();\n    }\n\n    function highlightFilter () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                if (isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _sliceCssClass).each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set the external radius padding of the pie chart. This will force the radius of the\n     * pie chart to become smaller or larger depending on the value.\n     * @method externalRadiusPadding\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [externalRadiusPadding=0]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.externalRadiusPadding = function (externalRadiusPadding) {\n        if (!arguments.length) {\n            return _externalRadiusPadding;\n        }\n        _externalRadiusPadding = externalRadiusPadding;\n        return _chart;\n    };\n\n    /**\n     * Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the\n     * pie chart will be rendered as a doughnut chart.\n     * @method innerRadius\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [innerRadius=0]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.innerRadius = function (innerRadius) {\n        if (!arguments.length) {\n            return _innerRadius;\n        }\n        _innerRadius = innerRadius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     * @method radius\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [radius]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.radius = function (radius) {\n        if (!arguments.length) {\n            return _givenRadius;\n        }\n        _givenRadius = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     * @method cx\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cx]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.cx = function (cx) {\n        if (!arguments.length) {\n            return (_cx ||  _chart.width() / 2);\n        }\n        _cx = cx;\n        return _chart;\n    };\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     * @method cy\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [cy]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.cy = function (cy) {\n        if (!arguments.length) {\n            return (_cy ||  _chart.height() / 2);\n        }\n        _cy = cy;\n        return _chart;\n    };\n\n    function buildArcs () {\n        return d3.arc()\n            .outerRadius(_radius - _externalRadiusPadding)\n            .innerRadius(_innerRadius);\n    }\n\n    function isSelectedSlice (d) {\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d.data));\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @method minAngleForLabel\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [minAngleForLabel=0.5]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.minAngleForLabel = function (minAngleForLabel) {\n        if (!arguments.length) {\n            return _minAngleForLabel;\n        }\n        _minAngleForLabel = minAngleForLabel;\n        return _chart;\n    };\n\n    function pieLayout () {\n        return d3.pie().sort(null).value(_chart.cappedValueAccessor);\n    }\n\n    function sliceTooSmall (d) {\n        var angle = (d.endAngle - d.startAngle);\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData (d) {\n        return _chart.cappedValueAccessor(d) === 0;\n    }\n\n    function tweenPie (b) {\n        b.innerRadius = _innerRadius;\n        var current = this._current;\n        if (isOffCanvas(current)) {\n            current = {startAngle: 0, endAngle: 0};\n        } else {\n            // only interpolate startAngle & endAngle, not the whole data object\n            current = {startAngle: current.startAngle, endAngle: current.endAngle};\n        }\n        var i = d3.interpolate(current, b);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(i(t), 0, buildArcs());\n        };\n    }\n\n    function isOffCanvas (current) {\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\n    }\n\n    function fill (d, i) {\n        return _chart.getColor(d.data, i);\n    }\n\n    function onClick (d, i) {\n        if (_g.attr('class') !== _emptyCssClass) {\n            _chart.onClick(d.data, i);\n        }\n    }\n\n    function safeArc (d, i, arc) {\n        var path = arc(d, i);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    /**\n     * Title to use for the only slice when there is no data.\n     * @method emptyTitle\n     * @memberof dc.pieChart\n     * @instance\n     * @param {String} [title]\n     * @returns {String|dc.pieChart}\n     */\n    _chart.emptyTitle = function (title) {\n        if (arguments.length === 0) {\n            return _emptyTitle;\n        }\n        _emptyTitle = title;\n        return _chart;\n    };\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     * @method externalLabels\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Number} [externalLabelRadius]\n     * @returns {Number|dc.pieChart}\n     */\n    _chart.externalLabels = function (externalLabelRadius) {\n        if (arguments.length === 0) {\n            return _externalLabelRadius;\n        } else if (externalLabelRadius) {\n            _externalLabelRadius = externalLabelRadius;\n        } else {\n            _externalLabelRadius = undefined;\n        }\n\n        return _chart;\n    };\n\n    /**\n     * Get or set whether to draw lines from pie slices to their labels.\n     *\n     * @method drawPaths\n     * @memberof dc.pieChart\n     * @instance\n     * @param {Boolean} [drawPaths]\n     * @returns {Boolean|dc.pieChart}\n     */\n    _chart.drawPaths = function (drawPaths) {\n        if (arguments.length === 0) {\n            return _drawPaths;\n        }\n        _drawPaths = drawPaths;\n        return _chart;\n    };\n\n    function labelPosition (d, arc) {\n        var centroid;\n        if (_externalLabelRadius) {\n            centroid = d3.arc()\n                .outerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .innerRadius(_radius - _externalRadiusPadding + _externalLabelRadius)\n                .centroid(d);\n        } else {\n            centroid = arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return 'translate(' + centroid + ')';\n        }\n    }\n\n    _chart.legendables = function () {\n        return _chart.data().map(function (d, i) {\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\n            legendable.color = _chart.getColor(d, i);\n            return legendable;\n        });\n    };\n\n    _chart.legendHighlight = function (d) {\n        highlightSliceFromLegendable(d, true);\n    };\n\n    _chart.legendReset = function (d) {\n        highlightSliceFromLegendable(d, false);\n    };\n\n    _chart.legendToggle = function (d) {\n        _chart.onClick({key: d.name, others: d.others});\n    };\n\n    function highlightSliceFromLegendable (legendable, highlighted) {\n        _chart.selectAll('g.pie-slice').each(function (d) {\n            if (legendable.name === d.data.key) {\n                d3.select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The sunburst chart implementation is usually used to visualize a small tree distribution.  The sunburst\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link dc.baseMixin#ordering ordering} which defaults to sorting\n * by key.\n *\n * The keys used in the sunburst chart should be arrays, representing paths in the tree.\n *\n * When filtering, the sunburst chart creates instances of {@link dc.filters.HierarchyFilter HierarchyFilter}.\n *\n * @class sunburstChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a sunburst chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.sunburstChart('#chart-container1');\n * // create a sunburst chart under #chart-container2 element using chart group A\n * var chart2 = dc.sunburstChart('#chart-container2', 'chartGroupA');\n *\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.sunburstChart}\n **/\ndc.sunburstChart = function (parent, chartGroup) {\n    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n    var _sliceCssClass = 'pie-slice';\n    var _emptyCssClass = 'empty-chart';\n    var _emptyTitle = 'empty';\n\n    var _radius,\n        _innerRadius = 0;\n\n    var _g;\n    var _cx;\n    var _cy;\n    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\n    var _externalLabelRadius;\n    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));\n\n    _chart.colorAccessor(_chart.cappedKeyAccessor);\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    _chart.label(_chart.cappedKeyAccessor);\n    _chart.renderLabel(true);\n\n    _chart.transitionDuration(350);\n\n    _chart.filterHandler(function (dimension, filters) {\n        if (filters.length === 0) {\n            dimension.filter(null);\n        } else {\n            dimension.filterFunction(function (d) {\n                for (var i = 0; i < filters.length; i++) {\n                    var filter = filters[i];\n                    if (filter.isFiltered && filter.isFiltered(d)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return filters;\n    });\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.cx() + ',' + _chart.cy() + ')');\n\n        drawChart();\n\n        return _chart;\n    };\n\n    function drawChart () {\n        // set radius on basis of chart dimension if missing\n        _radius = _radius ? _radius : d3.min([_chart.width(), _chart.height()]) / 2;\n\n        var arc = buildArcs();\n\n        var sunburstData, cdata;\n        // if we have data...\n        if (d3.sum(_chart.data(), _chart.valueAccessor())) {\n            cdata = dc.utils.toHierarchy(_chart.data(), _chart.valueAccessor());\n            sunburstData = partitionNodes(cdata);\n            // First one is the root, which is not needed\n            sunburstData.shift();\n            _g.classed(_emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            cdata = dc.utils.toHierarchy([], function (d) {\n                return d.value;\n            });\n            sunburstData = partitionNodes(cdata);\n            _g.classed(_emptyCssClass, true);\n        }\n\n        if (_g) {\n            var slices = _g.selectAll('g.' + _sliceCssClass)\n                .data(sunburstData);\n            createElements(slices, arc, sunburstData);\n\n            updateElements(sunburstData, arc);\n\n            removeElements(slices);\n\n            highlightFilter();\n        }\n    }\n\n    function createElements (slices, arc, sunburstData) {\n        var slicesEnter = createSliceNodes(slices);\n\n        createSlicePath(slicesEnter, arc);\n        createTitles(slicesEnter);\n        createLabels(sunburstData, arc);\n    }\n\n    function createSliceNodes (slices) {\n        var slicesEnter = slices\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _sliceCssClass +\n                    ' _' + i + ' ' +\n                    _sliceCssClass + '-level-' + d.depth;\n            });\n        return slicesEnter;\n    }\n\n    function createSlicePath (slicesEnter, arc) {\n        var slicePath = slicesEnter.append('path')\n            .attr('fill', fill)\n            .on('click', onClick)\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n\n        var transition = dc.transition(slicePath, _chart.transitionDuration());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenSlice);\n        }\n    }\n\n    function createTitles (slicesEnter) {\n        if (_chart.renderTitle()) {\n            slicesEnter.append('title').text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    function positionLabels (labelsEnter, arc) {\n        dc.transition(labelsEnter, _chart.transitionDuration())\n            .attr('transform', function (d) {\n                return labelPosition(d, arc);\n            })\n            .attr('text-anchor', 'middle')\n            .text(function (d) {\n                // position label...\n                if (sliceHasNoData(d) || sliceTooSmall(d)) {\n                    return '';\n                }\n                return _chart.label()(d);\n            });\n    }\n\n    function createLabels (sunburstData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _sliceCssClass)\n                .data(sunburstData);\n\n            labels.exit().remove();\n\n            var labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', function (d, i) {\n                    var classes = _sliceCssClass + ' _' + i;\n                    if (_externalLabelRadius) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on('click', onClick);\n            positionLabels(labelsEnter, arc);\n        }\n    }\n\n    function updateElements (sunburstData, arc) {\n        updateSlicePaths(sunburstData, arc);\n        updateLabels(sunburstData, arc);\n        updateTitles(sunburstData);\n    }\n\n    function updateSlicePaths (sunburstData, arc) {\n        var slicePaths = _g.selectAll('g.' + _sliceCssClass)\n            .data(sunburstData)\n            .select('path')\n            .attr('d', function (d, i) {\n                return safeArc(d, i, arc);\n            });\n        var transition = dc.transition(slicePaths, _chart.transitionDuration());\n        if (transition.attrTween) {\n            transition.attrTween('d', tweenSlice);\n        }\n        transition.attr('fill', fill);\n    }\n\n    function updateLabels (sunburstData, arc) {\n        if (_chart.renderLabel()) {\n            var labels = _g.selectAll('text.' + _sliceCssClass)\n                .data(sunburstData);\n            positionLabels(labels, arc);\n        }\n    }\n\n    function updateTitles (sunburstData) {\n        if (_chart.renderTitle()) {\n            _g.selectAll('g.' + _sliceCssClass)\n                .data(sunburstData)\n                .select('title')\n                .text(function (d) {\n                    return _chart.title()(d);\n                });\n        }\n    }\n\n    function removeElements (slices) {\n        slices.exit().remove();\n    }\n\n    function highlightFilter () {\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                if (isSelectedSlice(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.' + _sliceCssClass).each(function (d) {\n                _chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set the inner radius of the sunburst chart. If the inner radius is greater than 0px then the\n     * sunburst chart will be rendered as a doughnut chart. Default inner radius is 0px.\n     * @method innerRadius\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [innerRadius=0]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.innerRadius = function (innerRadius) {\n        if (!arguments.length) {\n            return _innerRadius;\n        }\n        _innerRadius = innerRadius;\n        return _chart;\n    };\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     * @method radius\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [radius]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.radius = function (radius) {\n        if (!arguments.length) {\n            return _radius;\n        }\n        _radius = radius;\n        return _chart;\n    };\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     * @method cx\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [cx]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.cx = function (cx) {\n        if (!arguments.length) {\n            return (_cx || _chart.width() / 2);\n        }\n        _cx = cx;\n        return _chart;\n    };\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     * @method cy\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [cy]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.cy = function (cy) {\n        if (!arguments.length) {\n            return (_cy || _chart.height() / 2);\n        }\n        _cy = cy;\n        return _chart;\n    };\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @method minAngleForLabel\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [minAngleForLabel=0.5]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.minAngleForLabel = function (minAngleForLabel) {\n        if (!arguments.length) {\n            return _minAngleForLabel;\n        }\n        _minAngleForLabel = minAngleForLabel;\n        return _chart;\n    };\n\n    /**\n     * Title to use for the only slice when there is no data.\n     * @method emptyTitle\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {String} [title]\n     * @returns {String|dc.sunburstChart}\n     */\n    _chart.emptyTitle = function (title) {\n        if (arguments.length === 0) {\n            return _emptyTitle;\n        }\n        _emptyTitle = title;\n        return _chart;\n    };\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     * @method externalLabels\n     * @memberof dc.sunburstChart\n     * @instance\n     * @param {Number} [externalLabelRadius]\n     * @returns {Number|dc.sunburstChart}\n     */\n    _chart.externalLabels = function (externalLabelRadius) {\n        if (arguments.length === 0) {\n            return _externalLabelRadius;\n        } else if (externalLabelRadius) {\n            _externalLabelRadius = externalLabelRadius;\n        } else {\n            _externalLabelRadius = undefined;\n        }\n\n        return _chart;\n    };\n\n    function buildArcs () {\n        return d3.arc()\n            .startAngle(function (d) {\n                return d.x0;\n            })\n            .endAngle(function (d) {\n                return d.x1;\n            })\n            .innerRadius(function (d) {\n                return d.data.path && d.data.path.length === 1 ? _innerRadius : Math.sqrt(d.y0);\n            })\n            .outerRadius(function (d) {\n                return Math.sqrt(d.y1);\n            });\n    }\n\n    function isSelectedSlice (d) {\n        return isPathFiltered(d.path);\n    }\n\n    function isPathFiltered (path) {\n        for (var i = 0; i < _chart.filters().length; i++) {\n            var currentFilter = _chart.filters()[i];\n            if (currentFilter.isFiltered(path)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // returns all filters that are a parent or child of the path\n    function filtersForPath (path) {\n        var pathFilter = dc.filters.HierarchyFilter(path);\n        var filters = [];\n        for (var i = 0; i < _chart.filters().length; i++) {\n            var currentFilter = _chart.filters()[i];\n            if (currentFilter.isFiltered(path) || pathFilter.isFiltered(currentFilter)) {\n                filters.push(currentFilter);\n            }\n        }\n        return filters;\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    function partitionNodes (data) {\n        // The changes picked up from https://github.com/d3/d3-hierarchy/issues/50\n        var hierarchy = d3.hierarchy(data)\n            .sum(function (d) {\n                return d.children ? 0 : _chart.cappedValueAccessor(d);\n            })\n            .sort(function (a, b) {\n                return d3.ascending(a.data.path, b.data.path);\n            });\n\n        var partition = d3.partition()\n            .size([2 * Math.PI, _radius * _radius]);\n\n        partition(hierarchy);\n\n        // In D3v4 the returned data is slightly different, change it enough to suit our purposes.\n        var nodes = hierarchy.descendants().map(function (d) {\n            d.key = d.data.key;\n            d.path = d.data.path;\n            return d;\n        });\n\n        return nodes;\n    }\n\n    function sliceTooSmall (d) {\n        var angle = d.x1 - d.x0;\n        return isNaN(angle) || angle < _minAngleForLabel;\n    }\n\n    function sliceHasNoData (d) {\n        return _chart.cappedValueAccessor(d) === 0;\n    }\n\n    function tweenSlice (b) {\n        b.innerRadius = _innerRadius; //?\n        var current = this._current;\n        if (isOffCanvas(current)) {\n            current = {x: 0, y: 0, dx: 0, dy: 0};\n        }\n        // unfortunally, we can't tween an entire hierarchy since it has 2 way links.\n        var tweenTarget = {x: b.x, y: b.y, dx: b.dx, dy: b.dy};\n        var i = d3.interpolate(current, tweenTarget);\n        this._current = i(0);\n        return function (t) {\n            return safeArc(Object.assign({}, b, i(t)), 0, buildArcs());\n        };\n    }\n\n    function isOffCanvas (current) {\n        return !current || isNaN(current.dx) || isNaN(current.dy);\n    }\n\n    function fill (d, i) {\n        return _chart.getColor(d, i);\n    }\n\n    function _onClick (d) {\n        // Clicking on Legends do not filter, it throws exception\n        // Must be better way to handle this, in legends we need to access `d.key`\n        var path = d.path || d.key;\n        var filter = dc.filters.HierarchyFilter(path);\n\n        // filters are equal to, parents or children of the path.\n        var filters = filtersForPath(path);\n        var exactMatch = false;\n        // clear out any filters that cover the path filtered.\n        for (var i = filters.length - 1; i >= 0; i--) {\n            var currentFilter = filters[i];\n            if (dc.utils.arraysIdentical(currentFilter, path)) {\n                exactMatch = true;\n            }\n            _chart.filter(filters[i]);\n        }\n        dc.events.trigger(function () {\n            // if it is a new filter - put it in.\n            if (!exactMatch) {\n                _chart.filter(filter);\n            }\n            _chart.redrawGroup();\n        });\n    }\n\n    _chart.onClick = onClick;\n\n    function onClick (d, i) {\n        if (_g.attr('class') !== _emptyCssClass) {\n            _onClick(d, i);\n        }\n    }\n\n    function safeArc (d, i, arc) {\n        var path = arc(d, i);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    function labelPosition (d, arc) {\n        var centroid;\n        if (_externalLabelRadius) {\n            centroid = d3.svg.arc()\n                .outerRadius(_radius + _externalLabelRadius)\n                .innerRadius(_radius + _externalLabelRadius)\n                .centroid(d);\n        } else {\n            centroid = arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return 'translate(' + centroid + ')';\n        }\n    }\n\n    _chart.legendables = function () {\n        return _chart.data().map(function (d, i) {\n            var legendable = {name: d.key, data: d.value, others: d.others, chart: _chart};\n            legendable.color = _chart.getColor(d, i);\n            return legendable;\n        });\n    };\n\n    _chart.legendHighlight = function (d) {\n        highlightSliceFromLegendable(d, true);\n    };\n\n    _chart.legendReset = function (d) {\n        highlightSliceFromLegendable(d, false);\n    };\n\n    _chart.legendToggle = function (d) {\n        _chart.onClick({key: d.name, others: d.others});\n    };\n\n    function highlightSliceFromLegendable (legendable, highlighted) {\n        _chart.selectAll('g.pie-slice').each(function (d) {\n            if (legendable.name === d.key) {\n                d3.select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Concrete bar chart/histogram implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class barChart\n * @memberof dc\n * @mixes dc.stackMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a bar chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.barChart('#chart-container1');\n * // create a bar chart under #chart-container2 element using chart group A\n * var chart2 = dc.barChart('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.barChart(compositeChart);\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the bar\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\n * composite chart instance instead.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.barChart}\n */\ndc.barChart = function (parent, chartGroup) {\n    var MIN_BAR_WIDTH = 1;\n    var DEFAULT_GAP_BETWEEN_BARS = 2;\n    var LABEL_PADDING = 3;\n\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\n\n    var _gap = DEFAULT_GAP_BETWEEN_BARS;\n    var _centerBar = false;\n    var _alwaysUseRounding = false;\n\n    var _barWidth;\n\n    dc.override(_chart, 'rescale', function () {\n        _chart._rescale();\n        _barWidth = undefined;\n        return _chart;\n    });\n\n    dc.override(_chart, 'render', function () {\n        if (_chart.round() && _centerBar && !_alwaysUseRounding) {\n            dc.logger.warn('By default, brush rounding is disabled if bars are centered. ' +\n                         'See dc.js bar chart API documentation for details.');\n        }\n\n        return _chart._render();\n    });\n\n    _chart.label(function (d) {\n        return dc.utils.printSingleValue(d.y0 + d.y);\n    }, false);\n\n    _chart.plotData = function () {\n        var layers = _chart.chartBodyG().selectAll('g.stack')\n            .data(_chart.data());\n\n        calculateBarWidth();\n\n        layers = layers\n            .enter()\n                .append('g')\n                .attr('class', function (d, i) {\n                    return 'stack ' + '_' + i;\n                })\n            .merge(layers);\n\n        var last = layers.size() - 1;\n        layers.each(function (d, i) {\n            var layer = d3.select(this);\n\n            renderBars(layer, i, d);\n\n            if (_chart.renderLabel() && last === i) {\n                renderLabels(layer, i, d);\n            }\n        });\n    };\n\n    function barHeight (d) {\n        return dc.utils.safeNumber(Math.abs(_chart.y()(d.y + d.y0) - _chart.y()(d.y0)));\n    }\n\n    function labelXPos (d) {\n        var x = _chart.x()(d.x);\n        if (!_centerBar) {\n            x += _barWidth / 2;\n        }\n        if (_chart.isOrdinal() && _gap !== undefined) {\n            x += _gap / 2;\n        }\n        return dc.utils.safeNumber(x);\n    }\n\n    function labelYPos (d) {\n        var y = _chart.y()(d.y + d.y0);\n\n        if (d.y < 0) {\n            y -= barHeight(d);\n        }\n\n        return dc.utils.safeNumber(y - LABEL_PADDING);\n    }\n\n    function renderLabels (layer, layerIndex, d) {\n        var labels = layer.selectAll('text.barLabel')\n            .data(d.values, dc.pluck('x'));\n\n        var labelsEnterUpdate = labels\n            .enter()\n                .append('text')\n                .attr('class', 'barLabel')\n                .attr('text-anchor', 'middle')\n                .attr('x', labelXPos)\n                .attr('y', labelYPos)\n            .merge(labels);\n\n        if (_chart.isOrdinal()) {\n            labelsEnterUpdate.on('click', _chart.onClick);\n            labelsEnterUpdate.attr('cursor', 'pointer');\n        }\n\n        dc.transition(labelsEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', labelXPos)\n            .attr('y', labelYPos)\n            .text(function (d) {\n                return _chart.label()(d);\n            });\n\n        dc.transition(labels.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('height', 0)\n            .remove();\n    }\n\n    function barXPos (d) {\n        var x = _chart.x()(d.x);\n        if (_centerBar) {\n            x -= _barWidth / 2;\n        }\n        if (_chart.isOrdinal() && _gap !== undefined) {\n            x += _gap / 2;\n        }\n        return dc.utils.safeNumber(x);\n    }\n\n    function renderBars (layer, layerIndex, d) {\n        var bars = layer.selectAll('rect.bar')\n            .data(d.values, dc.pluck('x'));\n\n        var enter = bars.enter()\n            .append('rect')\n            .attr('class', 'bar')\n            .attr('fill', dc.pluck('data', _chart.getColor))\n            .attr('x', barXPos)\n            .attr('y', _chart.yAxisHeight())\n            .attr('height', 0);\n\n        var barsEnterUpdate = enter.merge(bars);\n\n        if (_chart.renderTitle()) {\n            enter.append('title').text(dc.pluck('data', _chart.title(d.name)));\n        }\n\n        if (_chart.isOrdinal()) {\n            barsEnterUpdate.on('click', _chart.onClick);\n        }\n\n        dc.transition(barsEnterUpdate, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', barXPos)\n            .attr('y', function (d) {\n                var y = _chart.y()(d.y + d.y0);\n\n                if (d.y < 0) {\n                    y -= barHeight(d);\n                }\n\n                return dc.utils.safeNumber(y);\n            })\n            .attr('width', _barWidth)\n            .attr('height', function (d) {\n                return barHeight(d);\n            })\n            .attr('fill', dc.pluck('data', _chart.getColor))\n            .select('title').text(dc.pluck('data', _chart.title(d.name)));\n\n        dc.transition(bars.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', function (d) { return _chart.x()(d.x); })\n            .attr('width', _barWidth * 0.9)\n            .remove();\n    }\n\n    function calculateBarWidth () {\n        if (_barWidth === undefined) {\n            var numberOfBars = _chart.xUnitCount();\n\n            // please can't we always use rangeBands for bar charts?\n            if (_chart.isOrdinal() && _gap === undefined) {\n                _barWidth = Math.floor(_chart.x().bandwidth());\n            } else if (_gap) {\n                _barWidth = Math.floor((_chart.xAxisLength() - (numberOfBars - 1) * _gap) / numberOfBars);\n            } else {\n                _barWidth = Math.floor(_chart.xAxisLength() / (1 + _chart.barPadding()) / numberOfBars);\n            }\n\n            if (_barWidth === Infinity || isNaN(_barWidth) || _barWidth < MIN_BAR_WIDTH) {\n                _barWidth = MIN_BAR_WIDTH;\n            }\n        }\n    }\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        var bars = _chart.chartBodyG().selectAll('rect.bar');\n\n        if (_chart.isOrdinal()) {\n            if (_chart.hasFilter()) {\n                bars.classed(dc.constants.SELECTED_CLASS, function (d) {\n                    return _chart.hasFilter(d.x);\n                });\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return !_chart.hasFilter(d.x);\n                });\n            } else {\n                bars.classed(dc.constants.SELECTED_CLASS, false);\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        } else if (_chart.brushOn() || _chart.parentBrushOn()) {\n            if (!_chart.brushIsEmpty(brushSelection)) {\n                var start = brushSelection[0];\n                var end = brushSelection[1];\n\n                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {\n                    return d.x < start || d.x >= end;\n                });\n            } else {\n                bars.classed(dc.constants.DESELECTED_CLASS, false);\n            }\n        }\n    };\n\n    /**\n     * Whether the bar chart will render each bar centered around the data position on the x-axis.\n     * @method centerBar\n     * @memberof dc.barChart\n     * @instance\n     * @param {Boolean} [centerBar=false]\n     * @returns {Boolean|dc.barChart}\n     */\n    _chart.centerBar = function (centerBar) {\n        if (!arguments.length) {\n            return _centerBar;\n        }\n        _centerBar = centerBar;\n        return _chart;\n    };\n\n    dc.override(_chart, 'onClick', function (d) {\n        _chart._onClick(d.data);\n    });\n\n    /**\n     * Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.\n     * Setting this value will also remove any previously set {@link dc.barChart#gap gap}. See the\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\n     * for a visual description of how the padding is applied.\n     * @method barPadding\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [barPadding=0]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.barPadding = function (barPadding) {\n        if (!arguments.length) {\n            return _chart._rangeBandPadding();\n        }\n        _chart._rangeBandPadding(barPadding);\n        _gap = undefined;\n        return _chart;\n    };\n\n    _chart._useOuterPadding = function () {\n        return _gap === undefined;\n    };\n\n    /**\n     * Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.\n     * Will pad the width by `padding * barWidth` on each side of the chart.\n     * @method outerPadding\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [padding=0.5]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.outerPadding = _chart._outerRangeBandPadding;\n\n    /**\n     * Manually set fixed gap (in px) between bars instead of relying on the default auto-generated\n     * gap.  By default the bar chart implementation will calculate and set the gap automatically\n     * based on the number of data points and the length of the x axis.\n     * @method gap\n     * @memberof dc.barChart\n     * @instance\n     * @param {Number} [gap=2]\n     * @returns {Number|dc.barChart}\n     */\n    _chart.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _chart;\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (brushSelection && _chart.round() && (!_centerBar || _alwaysUseRounding)) {\n            brushSelection[0] = _chart.round()(brushSelection[0]);\n            brushSelection[1] = _chart.round()(brushSelection[1]);\n        }\n        return brushSelection;\n    };\n\n    /**\n     * Set or get whether rounding is enabled when bars are centered. If false, using\n     * rounding with centered bars will result in a warning and rounding will be ignored.  This flag\n     * has no effect if bars are not {@link dc.barChart#centerBar centered}.\n     * When using standard d3.js rounding methods, the brush often doesn't align correctly with\n     * centered bars since the bars are offset.  The rounding function must add an offset to\n     * compensate, such as in the following example.\n     * @method alwaysUseRounding\n     * @memberof dc.barChart\n     * @instance\n     * @example\n     * chart.round(function(n) { return Math.floor(n) + 0.5; });\n     * @param {Boolean} [alwaysUseRounding=false]\n     * @returns {Boolean|dc.barChart}\n     */\n    _chart.alwaysUseRounding = function (alwaysUseRounding) {\n        if (!arguments.length) {\n            return _alwaysUseRounding;\n        }\n        _alwaysUseRounding = alwaysUseRounding;\n        return _chart;\n    };\n\n    function colorFilter (color, inv) {\n        return function () {\n            var item = d3.select(this);\n            var match = item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    _chart.legendHighlight = function (d) {\n        if (!_chart.isLegendableHidden(d)) {\n            _chart.g().selectAll('rect.bar')\n                .classed('highlight', colorFilter(d.color))\n                .classed('fadeout', colorFilter(d.color, true));\n        }\n    };\n\n    _chart.legendReset = function () {\n        _chart.g().selectAll('rect.bar')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    };\n\n    dc.override(_chart, 'xAxisMax', function () {\n        var max = this._xAxisMax();\n        if ('resolution' in _chart.xUnits()) {\n            var res = _chart.xUnits().resolution;\n            max += res;\n        }\n        return max;\n    });\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Concrete line/area chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class lineChart\n * @memberof dc\n * @mixes dc.stackMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a line chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.lineChart('#chart-container1');\n * // create a line chart under #chart-container2 element using chart group A\n * var chart2 = dc.lineChart('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.lineChart(compositeChart);\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.  If the line\n * chart is a sub-chart in a {@link dc.compositeChart Composite Chart} then pass in the parent\n * composite chart instance instead.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.lineChart}\n */\ndc.lineChart = function (parent, chartGroup) {\n    var DEFAULT_DOT_RADIUS = 5;\n    var TOOLTIP_G_CLASS = 'dc-tooltip';\n    var DOT_CIRCLE_CLASS = 'dot';\n    var Y_AXIS_REF_LINE_CLASS = 'yRef';\n    var X_AXIS_REF_LINE_CLASS = 'xRef';\n    var DEFAULT_DOT_OPACITY = 1e-6;\n    var LABEL_PADDING = 3;\n\n    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));\n    var _renderArea = false;\n    var _dotRadius = DEFAULT_DOT_RADIUS;\n    var _dataPointRadius = null;\n    var _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n    var _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n    var _curve = null;\n    var _interpolate = null; // d3.curveLinear;  // deprecated in 3.0\n    var _tension = null;  // deprecated in 3.0\n    var _defined;\n    var _dashStyle;\n    var _xyTipsOn = true;\n\n    _chart.transitionDuration(500);\n    _chart.transitionDelay(0);\n    _chart._rangeBandPadding(1);\n\n    _chart.plotData = function () {\n        var chartBody = _chart.chartBodyG();\n        var layersList = chartBody.select('g.stack-list');\n\n        if (layersList.empty()) {\n            layersList = chartBody.append('g').attr('class', 'stack-list');\n        }\n\n        var layers = layersList.selectAll('g.stack').data(_chart.data());\n\n        var layersEnter = layers\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return 'stack ' + '_' + i;\n            });\n\n        layers = layersEnter.merge(layers);\n\n        drawLine(layersEnter, layers);\n\n        drawArea(layersEnter, layers);\n\n        drawDots(chartBody, layers);\n\n        if (_chart.renderLabel()) {\n            drawLabels(layers);\n        }\n    };\n\n    /**\n     * Gets or sets the curve factory to use for lines and areas drawn, allowing e.g. step\n     * functions, splines, and cubic interpolation. Typically you would use one of the interpolator functions\n     * provided by {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curves}.\n     *\n     * Replaces the use of {@link dc.lineChart#interpolate} and {@link dc.lineChart#tension}\n     * in dc.js < 3.0\n     *\n     * This is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve} and\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}.\n     * @example\n     * // default\n     * chart\n     *     .curve(d3.curveLinear);\n     * // Add tension to curves that support it\n     * chart\n     *     .curve(d3.curveCardinal.tension(0.5));\n     * // You can use some specialized variation like\n     * // https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n     * chart\n     *     .curve(d3.curveCatmullRom.alpha(0.5));\n     * @method curve\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve}\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}\n     * @param  {d3.curve} [curve=d3.curveLinear]\n     * @returns {d3.curve|dc.lineChart}\n     */\n    _chart.curve = function (curve) {\n        if (!arguments.length) {\n            return _curve;\n        }\n        _curve = curve;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step\n     * functions, splines, and cubic interpolation.\n     *\n     * Possible values are: 'linear', 'linear-closed', 'step', 'step-before', 'step-after', 'basis',\n     * 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', and\n     * 'monotone'.\n     *\n     * This function exists for backward compatibility. Use {@link dc.lineChart#curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @method interpolate\n     * @memberof dc.lineChart\n     * @instance\n     * @deprecated since version 3.0 use {@link dc.lineChart#curve} instead\n     * @see {@link dc.lineChart#curve}\n     * @param  {d3.curve} [interpolate=d3.curveLinear]\n     * @returns {d3.curve|dc.lineChart}\n     */\n    _chart.interpolate = dc.logger.deprecate(function (interpolate) {\n        if (!arguments.length) {\n            return _interpolate;\n        }\n        _interpolate = interpolate;\n        return _chart;\n    }, 'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\n\n    /**\n     * Gets or sets the tension to use for lines drawn, in the range 0 to 1.\n     *\n     * Passed to the {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curve function}\n     * if it provides a `.tension` function. Example:\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#curveCardinal_tension curveCardinal.tension}.\n     *\n     * This function exists for backward compatibility. Use {@link dc.lineChart#curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @method tension\n     * @memberof dc.lineChart\n     * @instance\n     * @deprecated since version 3.0 use {@link dc.lineChart#curve} instead\n     * @see {@link dc.lineChart#curve}\n     * @param  {Number} [tension=0]\n     * @returns {Number|dc.lineChart}\n     */\n    _chart.tension = dc.logger.deprecate(function (tension) {\n        if (!arguments.length) {\n            return _tension;\n        }\n        _tension = tension;\n        return _chart;\n    }, 'dc.lineChart.tension has been deprecated since version 3.0 use dc.lineChart.curve instead');\n\n    /**\n     * Gets or sets a function that will determine discontinuities in the line which should be\n     * skipped: the path will be broken into separate subpaths if some points are undefined.\n     * This function is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\n     *\n     * Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write\n     * custom reduce functions to get this to work, depending on your data. See\n     * {@link https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248 this GitHub comment}\n     * for more details and an example.\n     * @method defined\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\n     * @param  {Function} [defined]\n     * @returns {Function|dc.lineChart}\n     */\n    _chart.defined = function (defined) {\n        if (!arguments.length) {\n            return _defined;\n        }\n        _defined = defined;\n        return _chart;\n    };\n\n    /**\n     * Set the line's d3 dashstyle. This value becomes the 'stroke-dasharray' of line. Defaults to empty\n     * array (solid line).\n     * @method dashStyle\n     * @memberof dc.lineChart\n     * @instance\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray stroke-dasharray}\n     * @example\n     * // create a Dash Dot Dot Dot\n     * chart.dashStyle([3,1,1,1]);\n     * @param  {Array<Number>} [dashStyle=[]]\n     * @returns {Array<Number>|dc.lineChart}\n     */\n    _chart.dashStyle = function (dashStyle) {\n        if (!arguments.length) {\n            return _dashStyle;\n        }\n        _dashStyle = dashStyle;\n        return _chart;\n    };\n\n    /**\n     * Get or set render area flag. If the flag is set to true then the chart will render the area\n     * beneath each line and the line chart effectively becomes an area chart.\n     * @method renderArea\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Boolean} [renderArea=false]\n     * @returns {Boolean|dc.lineChart}\n     */\n    _chart.renderArea = function (renderArea) {\n        if (!arguments.length) {\n            return _renderArea;\n        }\n        _renderArea = renderArea;\n        return _chart;\n    };\n\n    function colors (d, i) {\n        return _chart.getColor.call(d, d.values, i);\n    }\n\n    // To keep it backward compatible, this covers multiple cases\n    // See https://github.com/dc-js/dc.js/issues/1376\n    // It will be removed when interpolate and tension are removed.\n    function getCurveFactory () {\n        var curve = null;\n\n        // _curve takes precedence\n        if (_curve) {\n            return _curve;\n        }\n\n        // Approximate the D3v3 behavior\n        if (typeof _interpolate === 'function') {\n            curve = _interpolate;\n        } else {\n            // If _interpolate is string\n            var mapping = {\n                'linear': d3.curveLinear,\n                'linear-closed': d3.curveLinearClosed,\n                'step': d3.curveStep,\n                'step-before': d3.curveStepBefore,\n                'step-after': d3.curveStepAfter,\n                'basis': d3.curveBasis,\n                'basis-open': d3.curveBasisOpen,\n                'basis-closed': d3.curveBasisClosed,\n                'bundle': d3.curveBundle,\n                'cardinal': d3.curveCardinal,\n                'cardinal-open': d3.curveCardinalOpen,\n                'cardinal-closed': d3.curveCardinalClosed,\n                'monotone': d3.curveMonotoneX\n            };\n            curve = mapping[_interpolate];\n        }\n\n        // Default value\n        if (!curve) {\n            curve = d3.curveLinear;\n        }\n\n        if (_tension !== null) {\n            if (typeof curve.tension !== 'function') {\n                dc.logger.warn('tension was specified but the curve/interpolate does not support it.');\n            } else {\n                curve = curve.tension(_tension);\n            }\n        }\n        return curve;\n    }\n\n    function drawLine (layersEnter, layers) {\n        var line = d3.line()\n            .x(function (d) {\n                return _chart.x()(d.x);\n            })\n            .y(function (d) {\n                return _chart.y()(d.y + d.y0);\n            })\n            .curve(getCurveFactory());\n        if (_defined) {\n            line.defined(_defined);\n        }\n\n        var path = layersEnter.append('path')\n            .attr('class', 'line')\n            .attr('stroke', colors);\n        if (_dashStyle) {\n            path.attr('stroke-dasharray', _dashStyle);\n        }\n\n        dc.transition(layers.select('path.line'), _chart.transitionDuration(), _chart.transitionDelay())\n            //.ease('linear')\n            .attr('stroke', colors)\n            .attr('d', function (d) {\n                return safeD(line(d.values));\n            });\n    }\n\n    function drawArea (layersEnter, layers) {\n        if (_renderArea) {\n            var area = d3.area()\n                .x(function (d) {\n                    return _chart.x()(d.x);\n                })\n                .y1(function (d) {\n                    return _chart.y()(d.y + d.y0);\n                })\n                .y0(function (d) {\n                    return _chart.y()(d.y0);\n                })\n                .curve(getCurveFactory());\n            if (_defined) {\n                area.defined(_defined);\n            }\n\n            layersEnter.append('path')\n                .attr('class', 'area')\n                .attr('fill', colors)\n                .attr('d', function (d) {\n                    return safeD(area(d.values));\n                });\n\n            dc.transition(layers.select('path.area'), _chart.transitionDuration(), _chart.transitionDelay())\n                //.ease('linear')\n                .attr('fill', colors)\n                .attr('d', function (d) {\n                    return safeD(area(d.values));\n                });\n        }\n    }\n\n    function safeD (d) {\n        return (!d || d.indexOf('NaN') >= 0) ? 'M0,0' : d;\n    }\n\n    function drawDots (chartBody, layers) {\n        if (_chart.xyTipsOn() === 'always' || (!(_chart.brushOn() || _chart.parentBrushOn()) && _chart.xyTipsOn())) {\n            var tooltipListClass = TOOLTIP_G_CLASS + '-list';\n            var tooltips = chartBody.select('g.' + tooltipListClass);\n\n            if (tooltips.empty()) {\n                tooltips = chartBody.append('g').attr('class', tooltipListClass);\n            }\n\n            layers.each(function (d, layerIndex) {\n                var points = d.values;\n                if (_defined) {\n                    points = points.filter(_defined);\n                }\n\n                var g = tooltips.select('g.' + TOOLTIP_G_CLASS + '._' + layerIndex);\n                if (g.empty()) {\n                    g = tooltips.append('g').attr('class', TOOLTIP_G_CLASS + ' _' + layerIndex);\n                }\n\n                createRefLines(g);\n\n                var dots = g.selectAll('circle.' + DOT_CIRCLE_CLASS)\n                    .data(points, dc.pluck('x'));\n\n                var dotsEnterModify = dots\n                    .enter()\n                        .append('circle')\n                        .attr('class', DOT_CIRCLE_CLASS)\n                        .attr('cx', function (d) {\n                            return dc.utils.safeNumber(_chart.x()(d.x));\n                        })\n                        .attr('cy', function (d) {\n                            return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                        })\n                        .attr('r', getDotRadius())\n                        .style('fill-opacity', _dataPointFillOpacity)\n                        .style('stroke-opacity', _dataPointStrokeOpacity)\n                        .attr('fill', _chart.getColor)\n                        .on('mousemove', function () {\n                            var dot = d3.select(this);\n                            showDot(dot);\n                            showRefLines(dot, g);\n                        })\n                        .on('mouseout', function () {\n                            var dot = d3.select(this);\n                            hideDot(dot);\n                            hideRefLines(g);\n                        })\n                    .merge(dots);\n\n                dotsEnterModify.call(renderTitle, d);\n\n                dc.transition(dotsEnterModify, _chart.transitionDuration())\n                    .attr('cx', function (d) {\n                        return dc.utils.safeNumber(_chart.x()(d.x));\n                    })\n                    .attr('cy', function (d) {\n                        return dc.utils.safeNumber(_chart.y()(d.y + d.y0));\n                    })\n                    .attr('fill', _chart.getColor);\n\n                dots.exit().remove();\n            });\n        }\n    }\n\n    _chart.label(function (d) {\n        return dc.utils.printSingleValue(d.y0 + d.y);\n    }, false);\n\n    function drawLabels (layers) {\n        layers.each(function (d, layerIndex) {\n            var layer = d3.select(this);\n            var labels = layer.selectAll('text.lineLabel')\n                .data(d.values, dc.pluck('x'));\n\n            var labelsEnterModify = labels\n                .enter()\n                    .append('text')\n                    .attr('class', 'lineLabel')\n                    .attr('text-anchor', 'middle')\n                .merge(labels);\n\n            dc.transition(labelsEnterModify, _chart.transitionDuration())\n                .attr('x', function (d) {\n                    return dc.utils.safeNumber(_chart.x()(d.x));\n                })\n                .attr('y', function (d) {\n                    var y = _chart.y()(d.y + d.y0) - LABEL_PADDING;\n                    return dc.utils.safeNumber(y);\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n\n            dc.transition(labels.exit(), _chart.transitionDuration())\n                .attr('height', 0)\n                .remove();\n        });\n    }\n\n    function createRefLines (g) {\n        var yRefLine = g.select('path.' + Y_AXIS_REF_LINE_CLASS).empty() ?\n            g.append('path').attr('class', Y_AXIS_REF_LINE_CLASS) : g.select('path.' + Y_AXIS_REF_LINE_CLASS);\n        yRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n\n        var xRefLine = g.select('path.' + X_AXIS_REF_LINE_CLASS).empty() ?\n            g.append('path').attr('class', X_AXIS_REF_LINE_CLASS) : g.select('path.' + X_AXIS_REF_LINE_CLASS);\n        xRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n    }\n\n    function showDot (dot) {\n        dot.style('fill-opacity', 0.8);\n        dot.style('stroke-opacity', 0.8);\n        dot.attr('r', _dotRadius);\n        return dot;\n    }\n\n    function showRefLines (dot, g) {\n        var x = dot.attr('cx');\n        var y = dot.attr('cy');\n        var yAxisX = (_chart._yAxisX() - _chart.margins().left);\n        var yAxisRefPathD = 'M' + yAxisX + ' ' + y + 'L' + (x) + ' ' + (y);\n        var xAxisRefPathD = 'M' + x + ' ' + _chart.yAxisHeight() + 'L' + x + ' ' + y;\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', '').attr('d', yAxisRefPathD);\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', '').attr('d', xAxisRefPathD);\n    }\n\n    function getDotRadius () {\n        return _dataPointRadius || _dotRadius;\n    }\n\n    function hideDot (dot) {\n        dot.style('fill-opacity', _dataPointFillOpacity)\n            .style('stroke-opacity', _dataPointStrokeOpacity)\n            .attr('r', getDotRadius());\n    }\n\n    function hideRefLines (g) {\n        g.select('path.' + Y_AXIS_REF_LINE_CLASS).style('display', 'none');\n        g.select('path.' + X_AXIS_REF_LINE_CLASS).style('display', 'none');\n    }\n\n    function renderTitle (dot, d) {\n        if (_chart.renderTitle()) {\n            dot.select('title').remove();\n            dot.append('title').text(dc.pluck('data', _chart.title(d.name)));\n        }\n    }\n\n    /**\n     * Turn on/off the mouseover behavior of an individual data point which renders a circle and x/y axis\n     * dashed lines back to each respective axis.  This is ignored if the chart\n     * {@link dc.coordinateGridMixin#brushOn brush} is on\n     * @method xyTipsOn\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Boolean} [xyTipsOn=false]\n     * @returns {Boolean|dc.lineChart}\n     */\n    _chart.xyTipsOn = function (xyTipsOn) {\n        if (!arguments.length) {\n            return _xyTipsOn;\n        }\n        _xyTipsOn = xyTipsOn;\n        return _chart;\n    };\n\n    /**\n     * Get or set the radius (in px) for dots displayed on the data points.\n     * @method dotRadius\n     * @memberof dc.lineChart\n     * @instance\n     * @param  {Number} [dotRadius=5]\n     * @returns {Number|dc.lineChart}\n     */\n    _chart.dotRadius = function (dotRadius) {\n        if (!arguments.length) {\n            return _dotRadius;\n        }\n        _dotRadius = dotRadius;\n        return _chart;\n    };\n\n    /**\n     * Always show individual dots for each datapoint.\n     *\n     * If `options` is falsy, it disables data point rendering. If no `options` are provided, the\n     * current `options` values are instead returned.\n     * @method renderDataPoints\n     * @memberof dc.lineChart\n     * @instance\n     * @example\n     * chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.8})\n     * @param  {{fillOpacity: Number, strokeOpacity: Number, radius: Number}} [options={fillOpacity: 0.8, strokeOpacity: 0.8, radius: 2}]\n     * @returns {{fillOpacity: Number, strokeOpacity: Number, radius: Number}|dc.lineChart}\n     */\n    _chart.renderDataPoints = function (options) {\n        if (!arguments.length) {\n            return {\n                fillOpacity: _dataPointFillOpacity,\n                strokeOpacity: _dataPointStrokeOpacity,\n                radius: _dataPointRadius\n            };\n        } else if (!options) {\n            _dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n            _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n            _dataPointRadius = null;\n        } else {\n            _dataPointFillOpacity = options.fillOpacity || 0.8;\n            _dataPointStrokeOpacity = options.strokeOpacity || 0.8;\n            _dataPointRadius = options.radius || 2;\n        }\n        return _chart;\n    };\n\n    function colorFilter (color, dashstyle, inv) {\n        return function () {\n            var item = d3.select(this);\n            var match = (item.attr('stroke') === color &&\n                item.attr('stroke-dasharray') === ((dashstyle instanceof Array) ?\n                    dashstyle.join(',') : null)) || item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    _chart.legendHighlight = function (d) {\n        if (!_chart.isLegendableHidden(d)) {\n            _chart.g().selectAll('path.line, path.area')\n                .classed('highlight', colorFilter(d.color, d.dashstyle))\n                .classed('fadeout', colorFilter(d.color, d.dashstyle, true));\n        }\n    };\n\n    _chart.legendReset = function () {\n        _chart.g().selectAll('path.line, path.area')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    };\n\n    dc.override(_chart, 'legendables', function () {\n        var legendables = _chart._legendables();\n        if (!_dashStyle) {\n            return legendables;\n        }\n        return legendables.map(function (l) {\n            l.dashstyle = _dashStyle;\n            return l;\n        });\n    });\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The data count widget is a simple widget designed to display the number of records selected by the\n * current filters out of the total number of records in the data set. Once created the data count widget\n * will automatically update the text content of child elements with the following classes:\n *\n * * `.total-count` - total number of records\n * * `.filter-count` - number of records matched by the current filters\n *\n * Note: this widget works best for the specific case of showing the number of records out of a\n * total. If you want a more general-purpose numeric display, please use the\n * {@link dc.numberDisplay} widget instead.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class dataCount\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * var ndx = crossfilter(data);\n * var all = ndx.groupAll();\n *\n * dc.dataCount('.dc-data-count')\n *     .dimension(ndx)\n *     .group(all);\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataCount}\n */\ndc.dataCount = function (parent, chartGroup) {\n    var _formatNumber = d3.format(',d');\n    var _chart = dc.baseMixin({});\n    var _html = {some: '', all: ''};\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending how many items are\n     * selected. The text `%total-count` will replaced with the total number of records, and the text\n     * `%filter-count` will be replaced with the number of selected records.\n     * - all: HTML template to use if all items are selected\n     * - some: HTML template to use if not all items are selected\n     * @method html\n     * @memberof dc.dataCount\n     * @instance\n     * @example\n     * counter.html({\n     *      some: '%filter-count out of %total-count records selected',\n     *      all: 'All records selected. Click on charts to apply filters'\n     * })\n     * @param {{some:String, all: String}} [options]\n     * @returns {{some:String, all: String}|dc.dataCount}\n     */\n    _chart.html = function (options) {\n        if (!arguments.length) {\n            return _html;\n        }\n        if (options.all) {\n            _html.all = options.all;\n        }\n        if (options.some) {\n            _html.some = options.some;\n        }\n        return _chart;\n    };\n\n    /**\n     * Gets or sets an optional function to format the filter count and total count.\n     * @method formatNumber\n     * @memberof dc.dataCount\n     * @instance\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @example\n     * counter.formatNumber(d3.format('.2g'))\n     * @param {Function} [formatter=d3.format('.2g')]\n     * @returns {Function|dc.dataCount}\n     */\n    _chart.formatNumber = function (formatter) {\n        if (!arguments.length) {\n            return _formatNumber;\n        }\n        _formatNumber = formatter;\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        var tot = _chart.dimension().size(),\n            val = _chart.group().value();\n        var all = _formatNumber(tot);\n        var selected = _formatNumber(val);\n\n        if ((tot === val) && (_html.all !== '')) {\n            _chart.root().html(_html.all.replace('%total-count', all).replace('%filter-count', selected));\n        } else if (_html.some !== '') {\n            _chart.root().html(_html.some.replace('%total-count', all).replace('%filter-count', selected));\n        } else {\n            _chart.selectAll('.total-count').text(all);\n            _chart.selectAll('.filter-count').text(selected);\n        }\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The data table is a simple widget designed to list crossfilter focused data set (rows being\n * filtered) in a good old tabular fashion.\n *\n * Note: Unlike other charts, the data table (and data grid chart) use the {@link dc.dataTable#group group} attribute as a\n * keying function for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data\n * together in groups.  Do not pass in a crossfilter group as this will not work.\n *\n * Another interesting feature of the data table is that you can pass a crossfilter group to the `dimension`, as\n * long as you specify the {@link dc.dataTable#order order} as `d3.descending`, since the data\n * table will use `dimension.top()` to fetch the data in that case, and the method is equally\n * supported on the crossfilter group as the crossfilter dimension.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.io/dc.js/examples/table-on-aggregated-data.html dataTable on a crossfilter group}\n * ({@link https://github.com/dc-js/dc.js/blob/develop/web/examples/table-on-aggregated-data.html source})\n * @class dataTable\n * @memberof dc\n * @mixes dc.baseMixin\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataTable}\n */\ndc.dataTable = function (parent, chartGroup) {\n    var LABEL_CSS_CLASS = 'dc-table-label';\n    var ROW_CSS_CLASS = 'dc-table-row';\n    var COLUMN_CSS_CLASS = 'dc-table-column';\n    var GROUP_CSS_CLASS = 'dc-table-group';\n    var HEAD_CSS_CLASS = 'dc-table-head';\n\n    var _chart = dc.baseMixin({});\n\n    var _size = 25;\n    var _columns = [];\n    var _sortBy = function (d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _beginSlice = 0;\n    var _endSlice;\n    var _showGroups = true;\n\n    _chart._doRender = function () {\n        _chart.selectAll('tbody').remove();\n\n        renderRows(renderGroups());\n\n        return _chart;\n    };\n\n    _chart._doColumnValueFormat = function (v, d) {\n        return ((typeof v === 'function') ?\n                v(d) :                          // v as function\n                ((typeof v === 'string') ?\n                 d[v] :                         // v is field name string\n                 v.format(d)                        // v is Object, use fn (element 2)\n                )\n               );\n    };\n\n    _chart._doColumnHeaderFormat = function (d) {\n        // if 'function', convert to string representation\n        // show a string capitalized\n        // if an object then display its label string as-is.\n        return (typeof d === 'function') ?\n                _chart._doColumnHeaderFnToString(d) :\n                ((typeof d === 'string') ?\n                 _chart._doColumnHeaderCapitalize(d) : String(d.label));\n    };\n\n    _chart._doColumnHeaderCapitalize = function (s) {\n        // capitalize\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n\n    _chart._doColumnHeaderFnToString = function (f) {\n        // columnString(f) {\n        var s = String(f);\n        var i1 = s.indexOf('return ');\n        if (i1 >= 0) {\n            var i2 = s.lastIndexOf(';');\n            if (i2 >= 0) {\n                s = s.substring(i1 + 7, i2);\n                var i3 = s.indexOf('numberFormat');\n                if (i3 >= 0) {\n                    s = s.replace('numberFormat', '');\n                }\n            }\n        }\n        return s;\n    };\n\n    function renderGroups () {\n        // The 'original' example uses all 'functions'.\n        // If all 'functions' are used, then don't remove/add a header, and leave\n        // the html alone. This preserves the functionality of earlier releases.\n        // A 2nd option is a string representing a field in the data.\n        // A third option is to supply an Object such as an array of 'information', and\n        // supply your own _doColumnHeaderFormat and _doColumnValueFormat functions to\n        // create what you need.\n        var bAllFunctions = true;\n        _columns.forEach(function (f) {\n            bAllFunctions = bAllFunctions & (typeof f === 'function');\n        });\n\n        if (!bAllFunctions) {\n            // ensure one thead\n            var thead = _chart.selectAll('thead').data([0]);\n            thead.exit().remove();\n            thead = thead.enter()\n                    .append('thead')\n                .merge(thead);\n\n            // with one tr\n            var headrow = thead.selectAll('tr').data([0]);\n            headrow.exit().remove();\n            headrow = headrow.enter()\n                    .append('tr')\n                .merge(headrow);\n\n            // with a th for each column\n            var headcols = headrow.selectAll('th')\n                .data(_columns);\n            headcols.exit().remove();\n            headcols.enter().append('th')\n                .merge(headcols)\n                    .attr('class', HEAD_CSS_CLASS)\n                    .html(function (d) {\n                        return (_chart._doColumnHeaderFormat(d));\n                    });\n        }\n\n        var groups = _chart.root().selectAll('tbody')\n            .data(nestEntries(), function (d) {\n                return _chart.keyAccessor()(d);\n            });\n\n        var rowGroup = groups\n            .enter()\n            .append('tbody');\n\n        if (_showGroups === true) {\n            rowGroup\n                .append('tr')\n                .attr('class', GROUP_CSS_CLASS)\n                    .append('td')\n                    .attr('class', LABEL_CSS_CLASS)\n                    .attr('colspan', _columns.length)\n                    .html(function (d) {\n                        return _chart.keyAccessor()(d);\n                    });\n        }\n\n        groups.exit().remove();\n\n        return rowGroup;\n    }\n\n    function nestEntries () {\n        var entries;\n        if (_order === d3.ascending) {\n            entries = _chart.dimension().bottom(_size);\n        } else {\n            entries = _chart.dimension().top(_size);\n        }\n\n        return d3.nest()\n            .key(_chart.group())\n            .sortKeys(_order)\n            .entries(entries.sort(function (a, b) {\n                return _order(_sortBy(a), _sortBy(b));\n            }).slice(_beginSlice, _endSlice));\n    }\n\n    function renderRows (groups) {\n        var rows = groups.order()\n            .selectAll('tr.' + ROW_CSS_CLASS)\n            .data(function (d) {\n                return d.values;\n            });\n\n        var rowEnter = rows.enter()\n            .append('tr')\n            .attr('class', ROW_CSS_CLASS);\n\n        _columns.forEach(function (v, i) {\n            rowEnter.append('td')\n                .attr('class', COLUMN_CSS_CLASS + ' _' + i)\n                .html(function (d) {\n                    return _chart._doColumnValueFormat(v, d);\n                });\n        });\n\n        rows.exit().remove();\n\n        return rows;\n    }\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set the group function for the data table. The group function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into groups.\n     *\n     * Do not pass in a crossfilter group as this will not work.\n     * @method group\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * // group rows by the value of their field\n     * chart\n     *     .group(function(d) { return d.field; })\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataTable}\n     */\n\n    /**\n     * Get or set the table size which determines the number of rows displayed by the widget.\n     * @method size\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number} [size=25]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.size = function (size) {\n        if (!arguments.length) {\n            return _size;\n        }\n        _size = size;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed\n     * by the widget. Useful when implementing pagination.\n     *\n     * Note: the sortBy function will determine how the rows are ordered for pagination purposes.\n\n     * See the {@link http://dc-js.github.io/dc.js/examples/table-pagination.html table pagination example}\n     * to see how to implement the pagination user interface using `beginSlice` and `endSlice`.\n     * @method beginSlice\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number} [beginSlice=0]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.beginSlice = function (beginSlice) {\n        if (!arguments.length) {\n            return _beginSlice;\n        }\n        _beginSlice = beginSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the\n     * widget. Useful when implementing pagination. See {@link dc.dataTable#beginSlice `beginSlice`} for more information.\n     * @method endSlice\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Number|undefined} [endSlice=undefined]\n     * @returns {Number|dc.dataTable}\n     */\n    _chart.endSlice = function (endSlice) {\n        if (!arguments.length) {\n            return _endSlice;\n        }\n        _endSlice = endSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set column functions. The data table widget supports several methods of specifying the\n     * columns to display.\n     *\n     * The original method uses an array of functions to generate dynamic columns. Column functions\n     * are simple javascript functions with only one input argument `d` which represents a row in\n     * the data set. The return value of these functions will be used to generate the content for\n     * each cell. However, this method requires the HTML for the table to have a fixed set of column\n     * headers.\n     *\n     * <pre><code>chart.columns([\n     *     function(d) { return d.date; },\n     *     function(d) { return d.open; },\n     *     function(d) { return d.close; },\n     *     function(d) { return numberFormat(d.close - d.open); },\n     *     function(d) { return d.volume; }\n     * ]);\n     * </code></pre>\n     *\n     * In the second method, you can list the columns to read from the data without specifying it as\n     * a function, except where necessary (ie, computed columns).  Note the data element name is\n     * capitalized when displayed in the table header. You can also mix in functions as necessary,\n     * using the third `{label, format}` form, as shown below.\n     *\n     * <pre><code>chart.columns([\n     *     \"date\",    // d[\"date\"], ie, a field accessor; capitalized automatically\n     *     \"open\",    // ...\n     *     \"close\",   // ...\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) {\n     *             return numberFormat(d.close - d.open);\n     *         }\n     *     },\n     *     \"volume\"   // d[\"volume\"], ie, a field accessor; capitalized automatically\n     * ]);\n     * </code></pre>\n     *\n     * In the third example, we specify all fields using the `{label, format}` method:\n     * <pre><code>chart.columns([\n     *     {\n     *         label: \"Date\",\n     *         format: function (d) { return d.date; }\n     *     },\n     *     {\n     *         label: \"Open\",\n     *         format: function (d) { return numberFormat(d.open); }\n     *     },\n     *     {\n     *         label: \"Close\",\n     *         format: function (d) { return numberFormat(d.close); }\n     *     },\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) { return numberFormat(d.close - d.open); }\n     *     },\n     *     {\n     *         label: \"Volume\",\n     *         format: function (d) { return d.volume; }\n     *     }\n     * ]);\n     * </code></pre>\n     *\n     * You may wish to override the dataTable functions `_doColumnHeaderCapitalize` and\n     * `_doColumnHeaderFnToString`, which are used internally to translate the column information or\n     * function into a displayed header. The first one is used on the \"string\" column specifier; the\n     * second is used to transform a stringified function into something displayable. For the Stock\n     * example, the function for Change becomes the table header **d.close - d.open**.\n     *\n     * Finally, you can even specify a completely different form of column definition. To do this,\n     * override `_chart._doColumnHeaderFormat` and `_chart._doColumnValueFormat` Be aware that\n     * fields without numberFormat specification will be displayed just as they are stored in the\n     * data, unformatted.\n     * @method columns\n     * @memberof dc.dataTable\n     * @instance\n     * @param {Array<Function>} [columns=[]]\n     * @returns {Array<Function>}|dc.dataTable}\n     */\n    _chart.columns = function (columns) {\n        if (!arguments.length) {\n            return _columns;\n        }\n        _columns = columns;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at row level and returns a\n     * particular field to be sorted by.\n     * @method sortBy\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     * @param {Function} [sortBy=identity function]\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.sortBy = function (sortBy) {\n        if (!arguments.length) {\n            return _sortBy;\n        }\n        _sortBy = sortBy;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort order. If the order is `d3.ascending`, the data table will use\n     * `dimension().bottom()` to fetch the data; otherwise it will use `dimension().top()`\n     * @method order\n     * @memberof dc.dataTable\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param {Function} [order=d3.ascending]\n     * @returns {Function|dc.dataTable}\n     */\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set if group rows will be shown. The dataTable {@link dc.dataTable#group group}\n     * function must be specified even if groups are not shown.\n     * @method showGroups\n     * @memberof dc.dataTable\n     * @instance\n     * @example\n     * chart\n     *     .group([value], [name])\n     *     .showGroups(true|false);\n     * @param {Boolean} [showGroups=true]\n     * @returns {Boolean|dc.dataTable}\n     */\n    _chart.showGroups = function (showGroups) {\n        if (!arguments.length) {\n            return _showGroups;\n        }\n        _showGroups = showGroups;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Data grid is a simple widget designed to list the filtered records, providing\n * a simple way to define how the items are displayed.\n *\n * Note: Unlike other charts, the data grid chart (and data table) use the {@link dc.dataGrid#group group} attribute as a keying function\n * for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data together in groups.\n * Do not pass in a crossfilter group as this will not work.\n *\n * Examples:\n * - {@link http://europarl.me/dc.js/web/ep/index.html List of members of the european parliament}\n * @class dataGrid\n * @memberof dc\n * @mixes dc.baseMixin\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.dataGrid}\n */\ndc.dataGrid = function (parent, chartGroup) {\n    var LABEL_CSS_CLASS = 'dc-grid-label';\n    var ITEM_CSS_CLASS = 'dc-grid-item';\n    var GROUP_CSS_CLASS = 'dc-grid-group';\n    var GRID_CSS_CLASS = 'dc-grid-top';\n\n    var _chart = dc.baseMixin({});\n\n    var _size = 999; // shouldn't be needed, but you might\n    var _html = function (d) { return 'you need to provide an html() handling param:  ' + JSON.stringify(d); };\n    var _sortBy = function (d) {\n        return d;\n    };\n    var _order = d3.ascending;\n    var _beginSlice = 0, _endSlice;\n\n    var _htmlGroup = function (d) {\n        return '<div class=\\'' + GROUP_CSS_CLASS + '\\'><h1 class=\\'' + LABEL_CSS_CLASS + '\\'>' +\n            _chart.keyAccessor()(d) + '</h1></div>';\n    };\n\n    _chart._doRender = function () {\n        _chart.selectAll('div.' + GRID_CSS_CLASS).remove();\n\n        renderItems(renderGroups());\n\n        return _chart;\n    };\n\n    function renderGroups () {\n        var groups = _chart.root().selectAll('div.' + GRID_CSS_CLASS)\n                .data(nestEntries(), function (d) {\n                    return _chart.keyAccessor()(d);\n                });\n\n        var itemGroup = groups\n                .enter()\n                .append('div')\n                .attr('class', GRID_CSS_CLASS);\n\n        if (_htmlGroup) {\n            itemGroup\n                .html(function (d) {\n                    return _htmlGroup(d);\n                });\n        }\n\n        groups.exit().remove();\n        return itemGroup;\n    }\n\n    function nestEntries () {\n        var entries = _chart.dimension().top(_size);\n\n        return d3.nest()\n            .key(_chart.group())\n            .sortKeys(_order)\n            .entries(entries.sort(function (a, b) {\n                return _order(_sortBy(a), _sortBy(b));\n            }).slice(_beginSlice, _endSlice));\n    }\n\n    function renderItems (groups) {\n        var items = groups.order()\n                .selectAll('div.' + ITEM_CSS_CLASS)\n                .data(function (d) {\n                    return d.values;\n                });\n\n        items.exit().remove();\n\n        items = items\n            .enter()\n                .append('div')\n                .attr('class', ITEM_CSS_CLASS)\n                .html(function (d) {\n                    return _html(d);\n                })\n            .merge(items);\n\n        return items;\n    }\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set the group function for the data grid. The group function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into groups.\n     *\n     * Do not pass in a crossfilter group as this will not work.\n     * @method group\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * // group rows by the value of their field\n     * chart\n     *     .group(function(d) { return d.field; })\n     * @param {Function} groupFunction Function taking a row of data and returning the nest key.\n     * @returns {Function|dc.dataTable}\n     */\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @method beginSlice\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [beginSlice=0]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.beginSlice = function (beginSlice) {\n        if (!arguments.length) {\n            return _beginSlice;\n        }\n        _beginSlice = beginSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @method endSlice\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [endSlice]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.endSlice = function (endSlice) {\n        if (!arguments.length) {\n            return _endSlice;\n        }\n        _endSlice = endSlice;\n        return _chart;\n    };\n\n    /**\n     * Get or set the grid size which determines the number of items displayed by the widget.\n     * @method size\n     * @memberof dc.dataGrid\n     * @instance\n     * @param {Number} [size=999]\n     * @returns {Number|dc.dataGrid}\n     */\n    _chart.size = function (size) {\n        if (!arguments.length) {\n            return _size;\n        }\n        _size = size;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that formats an item. The data grid widget uses a\n     * function to generate dynamic html. Use your favourite templating engine or\n     * generate the string directly.\n     * @method html\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.html(function (d) { return '<div class='item '+data.exampleCategory+''>'+data.exampleString+'</div>';});\n     * @param {Function} [html]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.html = function (html) {\n        if (!arguments.length) {\n            return _html;\n        }\n        _html = html;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that formats a group label.\n     * @method htmlGroup\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.htmlGroup (function (d) { return '<h2>'.d.key . 'with ' . d.values.length .' items</h2>'});\n     * @param {Function} [htmlGroup]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.htmlGroup = function (htmlGroup) {\n        if (!arguments.length) {\n            return _htmlGroup;\n        }\n        _htmlGroup = htmlGroup;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at the item\n     * level and returns a particular field to be sorted.\n     * @method sortBy\n     * @memberof dc.dataGrid\n     * @instance\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     * @param {Function} [sortByFunction]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.sortBy = function (sortByFunction) {\n        if (!arguments.length) {\n            return _sortBy;\n        }\n        _sortBy = sortByFunction;\n        return _chart;\n    };\n\n    /**\n     * Get or set sort the order function.\n     * @method order\n     * @memberof dc.dataGrid\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param {Function} [order=d3.ascending]\n     * @returns {Function|dc.dataGrid}\n     */\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A concrete implementation of a general purpose bubble chart that allows data visualization using the\n * following dimensions:\n * - x axis position\n * - y axis position\n * - bubble radius\n * - color\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\n * @class bubbleChart\n * @memberof dc\n * @mixes dc.bubbleMixin\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a bubble chart under #chart-container1 element using the default global chart group\n * var bubbleChart1 = dc.bubbleChart('#chart-container1');\n * // create a bubble chart under #chart-container2 element using chart group A\n * var bubbleChart2 = dc.bubbleChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.bubbleChart}\n */\ndc.bubbleChart = function (parent, chartGroup) {\n    var _chart = dc.bubbleMixin(dc.coordinateGridMixin({}));\n\n    _chart.transitionDuration(750);\n\n    _chart.transitionDelay(0);\n\n    var bubbleLocator = function (d) {\n        return 'translate(' + (bubbleX(d)) + ',' + (bubbleY(d)) + ')';\n    };\n\n    _chart.plotData = function () {\n        _chart.calculateRadiusDomain();\n        _chart.r().range([_chart.MIN_RADIUS, _chart.xAxisLength() * _chart.maxBubbleRelativeSize()]);\n\n        var data = _chart.data();\n        var bubbleG = _chart.chartBodyG().selectAll('g.' + _chart.BUBBLE_NODE_CLASS)\n                .data(data, function (d) { return d.key; });\n        if (_chart.sortBubbleSize()) {\n            // update dom order based on sort\n            bubbleG.order();\n        }\n\n        bubbleG = renderNodes(bubbleG);\n\n        updateNodes(bubbleG);\n\n        removeNodes(bubbleG);\n\n        _chart.fadeDeselectedArea(_chart.filter());\n    };\n\n    function renderNodes (bubbleG) {\n        var bubbleGEnter = bubbleG.enter().append('g');\n\n        bubbleGEnter\n            .attr('class', _chart.BUBBLE_NODE_CLASS)\n            .attr('transform', bubbleLocator)\n            .append('circle').attr('class', function (d, i) {\n                return _chart.BUBBLE_CLASS + ' _' + i;\n            })\n            .on('click', _chart.onClick)\n            .attr('fill', _chart.getColor)\n            .attr('r', 0);\n\n        bubbleG = bubbleGEnter.merge(bubbleG);\n\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\n            .select('circle.' + _chart.BUBBLE_CLASS)\n            .attr('r', function (d) {\n                return _chart.bubbleR(d);\n            })\n            .attr('opacity', function (d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart._doRenderLabel(bubbleGEnter);\n\n        _chart._doRenderTitles(bubbleGEnter);\n\n        return bubbleG;\n    }\n\n    function updateNodes (bubbleG) {\n        dc.transition(bubbleG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', bubbleLocator)\n            .select('circle.' + _chart.BUBBLE_CLASS)\n            .attr('fill', _chart.getColor)\n            .attr('r', function (d) {\n                return _chart.bubbleR(d);\n            })\n            .attr('opacity', function (d) {\n                return (_chart.bubbleR(d) > 0) ? 1 : 0;\n            });\n\n        _chart.doUpdateLabels(bubbleG);\n        _chart.doUpdateTitles(bubbleG);\n    }\n\n    function removeNodes (bubbleG) {\n        bubbleG.exit().remove();\n    }\n\n    function bubbleX (d) {\n        var x = _chart.x()(_chart.keyAccessor()(d));\n        if (isNaN(x) || !isFinite(x)) {\n            x = 0;\n        }\n        return x;\n    }\n\n    function bubbleY (d) {\n        var y = _chart.y()(_chart.valueAccessor()(d));\n        if (isNaN(y) || !isFinite(y)) {\n            y = 0;\n        }\n        return y;\n    }\n\n    _chart.renderBrush = function () {\n        // override default x axis brush from parent chart\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Composite charts are a special kind of chart that render multiple charts on the same Coordinate\n * Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to\n * achieve some quite flexible charting effects.\n * @class compositeChart\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a composite chart under #chart-container1 element using the default global chart group\n * var compositeChart1 = dc.compositeChart('#chart-container1');\n * // create a composite chart under #chart-container2 element using chart group A\n * var compositeChart2 = dc.compositeChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.compositeChart}\n */\ndc.compositeChart = function (parent, chartGroup) {\n\n    var SUB_CHART_CLASS = 'sub';\n    var DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;\n\n    var _chart = dc.coordinateGridMixin({});\n    var _children = [];\n\n    var _childOptions = {};\n\n    var _shareColors = false,\n        _shareTitle = true,\n        _alignYAxes = false;\n\n    var _rightYAxis = d3.axisRight(),\n        _rightYAxisLabel = 0,\n        _rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING,\n        _rightY,\n        _rightAxisGridLines = false;\n\n    _chart._mandatoryAttributes([]);\n    _chart.transitionDuration(500);\n    _chart.transitionDelay(0);\n\n    dc.override(_chart, '_generateG', function () {\n        var g = this.__generateG();\n\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            generateChildG(child, i);\n\n            if (!child.dimension()) {\n                child.dimension(_chart.dimension());\n            }\n            if (!child.group()) {\n                child.group(_chart.group());\n            }\n\n            child.chartGroup(_chart.chartGroup());\n            child.svg(_chart.svg());\n            child.xUnits(_chart.xUnits());\n            child.transitionDuration(_chart.transitionDuration(), _chart.transitionDelay());\n            child.parentBrushOn(_chart.brushOn());\n            child.brushOn(false);\n            child.renderTitle(_chart.renderTitle());\n            child.elasticX(_chart.elasticX());\n        }\n\n        return g;\n    });\n\n    _chart.applyBrushSelection = function (rangedFilter) {\n        _chart.replaceFilter(rangedFilter);\n        for (var i = 0; i < _children.length; ++i) {\n            _children[i].replaceFilter(rangedFilter);\n        }\n        _chart.redrawGroup();\n    };\n\n    _chart._prepareYAxis = function () {\n        var left = (leftYAxisChildren().length !== 0);\n        var right = (rightYAxisChildren().length !== 0);\n        var ranges = calculateYAxisRanges(left, right);\n\n        if (left) { prepareLeftYAxis(ranges); }\n        if (right) { prepareRightYAxis(ranges); }\n\n        if (leftYAxisChildren().length > 0 && !_rightAxisGridLines) {\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _chart.y(), _chart.yAxis());\n        } else if (rightYAxisChildren().length > 0) {\n            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _rightY, _rightYAxis);\n        }\n    };\n\n    _chart.renderYAxis = function () {\n        if (leftYAxisChildren().length !== 0) {\n            _chart.renderYAxisAt('y', _chart.yAxis(), _chart.margins().left);\n            _chart.renderYAxisLabel('y', _chart.yAxisLabel(), -90);\n        }\n\n        if (rightYAxisChildren().length !== 0) {\n            _chart.renderYAxisAt('yr', _chart.rightYAxis(), _chart.width() - _chart.margins().right);\n            _chart.renderYAxisLabel('yr', _chart.rightYAxisLabel(), 90, _chart.width() - _rightYAxisLabelPadding);\n        }\n    };\n\n    function calculateYAxisRanges (left, right) {\n        var lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax;\n        var ranges;\n\n        if (left) {\n            lyAxisMin = yAxisMin();\n            lyAxisMax = yAxisMax();\n        }\n\n        if (right) {\n            ryAxisMin = rightYAxisMin();\n            ryAxisMax = rightYAxisMax();\n        }\n\n        if (_chart.alignYAxes() && left && right) {\n            ranges = alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax);\n        }\n\n        return ranges || {\n            lyAxisMin: lyAxisMin,\n            lyAxisMax: lyAxisMax,\n            ryAxisMin: ryAxisMin,\n            ryAxisMax: ryAxisMax\n        };\n    }\n\n    function alignYAxisRanges (lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax) {\n        // since the two series will share a zero, each Y is just a multiple\n        // of the other. and the ratio should be the ratio of the ranges of the\n        // input data, so that they come out the same height. so we just min/max\n\n        // note: both ranges already include zero due to the stack mixin (#667)\n        // if #667 changes, we can reconsider whether we want data height or\n        // height from zero to be equal. and it will be possible for the axes\n        // to be aligned but not visible.\n        var extentRatio = (ryAxisMax - ryAxisMin) / (lyAxisMax - lyAxisMin);\n\n        return {\n            lyAxisMin: Math.min(lyAxisMin, ryAxisMin / extentRatio),\n            lyAxisMax: Math.max(lyAxisMax, ryAxisMax / extentRatio),\n            ryAxisMin: Math.min(ryAxisMin, lyAxisMin * extentRatio),\n            ryAxisMax: Math.max(ryAxisMax, lyAxisMax * extentRatio)\n        };\n    }\n\n    function prepareRightYAxis (ranges) {\n        var needDomain = _chart.rightY() === undefined || _chart.elasticY(),\n            needRange = needDomain || _chart.resizing();\n        if (_chart.rightY() === undefined) {\n            _chart.rightY(d3.scaleLinear());\n        }\n        if (needDomain) {\n            _chart.rightY().domain([ranges.ryAxisMin, ranges.ryAxisMax]);\n        }\n        if (needRange) {\n            _chart.rightY().rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _chart.rightY().range([_chart.yAxisHeight(), 0]);\n        _chart.rightYAxis(_chart.rightYAxis().scale(_chart.rightY()));\n\n        // In D3v4 create a RightAxis\n        // _chart.rightYAxis().orient('right');\n    }\n\n    function prepareLeftYAxis (ranges) {\n        var needDomain = _chart.y() === undefined || _chart.elasticY(),\n            needRange = needDomain || _chart.resizing();\n        if (_chart.y() === undefined) {\n            _chart.y(d3.scaleLinear());\n        }\n        if (needDomain) {\n            _chart.y().domain([ranges.lyAxisMin, ranges.lyAxisMax]);\n        }\n        if (needRange) {\n            _chart.y().rangeRound([_chart.yAxisHeight(), 0]);\n        }\n\n        _chart.y().range([_chart.yAxisHeight(), 0]);\n        _chart.yAxis(_chart.yAxis().scale(_chart.y()));\n\n        // In D3v4 create a LeftAxis\n        // _chart.yAxis().orient('left');\n    }\n\n    function generateChildG (child, i) {\n        child._generateG(_chart.g());\n        child.g().attr('class', SUB_CHART_CLASS + ' _' + i);\n    }\n\n    _chart.plotData = function () {\n        for (var i = 0; i < _children.length; ++i) {\n            var child = _children[i];\n\n            if (!child.g()) {\n                generateChildG(child, i);\n            }\n\n            if (_shareColors) {\n                child.colors(_chart.colors());\n            }\n\n            child.x(_chart.x());\n\n            child.xAxis(_chart.xAxis());\n\n            if (child.useRightYAxis()) {\n                child.y(_chart.rightY());\n                child.yAxis(_chart.rightYAxis());\n            } else {\n                child.y(_chart.y());\n                child.yAxis(_chart.yAxis());\n            }\n\n            child.plotData();\n\n            child._activateRenderlets();\n        }\n    };\n\n    /**\n     * Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the\n     * default behavior. This option is only respected when subcharts with both left and right y-axes\n     * are present.\n     * @method useRightAxisGridLines\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [useRightAxisGridLines=false]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.useRightAxisGridLines = function (useRightAxisGridLines) {\n        if (!arguments) {\n            return _rightAxisGridLines;\n        }\n\n        _rightAxisGridLines = useRightAxisGridLines;\n        return _chart;\n    };\n\n    /**\n     * Get or set chart-specific options for all child charts. This is equivalent to calling\n     * {@link dc.baseMixin#options .options} on each child chart.\n     * @method childOptions\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Object} [childOptions]\n     * @returns {Object|dc.compositeChart}\n     */\n    _chart.childOptions = function (childOptions) {\n        if (!arguments.length) {\n            return _childOptions;\n        }\n        _childOptions = childOptions;\n        _children.forEach(function (child) {\n            child.options(_childOptions);\n        });\n        return _chart;\n    };\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        if (_chart.brushOn()) {\n            for (var i = 0; i < _children.length; ++i) {\n                var child = _children[i];\n                child.fadeDeselectedArea(brushSelection);\n            }\n        }\n    };\n\n    /**\n     * Set or get the right y axis label.\n     * @method rightYAxisLabel\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {String} [rightYAxisLabel]\n     * @param {Number} [padding]\n     * @returns {String|dc.compositeChart}\n     */\n    _chart.rightYAxisLabel = function (rightYAxisLabel, padding) {\n        if (!arguments.length) {\n            return _rightYAxisLabel;\n        }\n        _rightYAxisLabel = rightYAxisLabel;\n        _chart.margins().right -= _rightYAxisLabelPadding;\n        _rightYAxisLabelPadding = (padding === undefined) ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;\n        _chart.margins().right += _rightYAxisLabelPadding;\n        return _chart;\n    };\n\n    /**\n     * Combine the given charts into one single composite coordinate grid chart.\n     * @method compose\n     * @memberof dc.compositeChart\n     * @instance\n     * @example\n     * moveChart.compose([\n     *     // when creating sub-chart you need to pass in the parent chart\n     *     dc.lineChart(moveChart)\n     *         .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\n     *         .valueAccessor(function (d){return d.value.avg;})\n     *         // most of the normal functions will continue to work in a composed chart\n     *         .renderArea(true)\n     *         .stack(monthlyMoveGroup, function (d){return d.value;})\n     *         .title(function (d){\n     *             var value = d.value.avg?d.value.avg:d.value;\n     *             if(isNaN(value)) value = 0;\n     *             return dateFormat(d.key) + '\\n' + numberFormat(value);\n     *         }),\n     *     dc.barChart(moveChart)\n     *         .group(volumeByMonthGroup)\n     *         .centerBar(true)\n     * ]);\n     * @param {Array<Chart>} [subChartArray]\n     * @returns {dc.compositeChart}\n     */\n    _chart.compose = function (subChartArray) {\n        _children = subChartArray;\n        _children.forEach(function (child) {\n            child.height(_chart.height());\n            child.width(_chart.width());\n            child.margins(_chart.margins());\n\n            if (_shareTitle) {\n                child.title(_chart.title());\n            }\n\n            child.options(_childOptions);\n        });\n        return _chart;\n    };\n\n    /**\n     * Returns the child charts which are composed into the composite chart.\n     * @method children\n     * @memberof dc.compositeChart\n     * @instance\n     * @returns {Array<dc.baseMixin>}\n     */\n    _chart.children = function () {\n        return _children;\n    };\n\n    /**\n     * Get or set color sharing for the chart. If set, the {@link dc.colorMixin#colors .colors()} value from this chart\n     * will be shared with composed children. Additionally if the child chart implements\n     * Stackable and has not set a custom .colorAccessor, then it will generate a color\n     * specific to its order in the composition.\n     * @method shareColors\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [shareColors=false]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.shareColors = function (shareColors) {\n        if (!arguments.length) {\n            return _shareColors;\n        }\n        _shareColors = shareColors;\n        return _chart;\n    };\n\n    /**\n     * Get or set title sharing for the chart. If set, the {@link dc.baseMixin#title .title()} value from\n     * this chart will be shared with composed children.\n     * @method shareTitle\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [shareTitle=true]\n     * @returns {Boolean|dc.compositeChart}\n     */\n    _chart.shareTitle = function (shareTitle) {\n        if (!arguments.length) {\n            return _shareTitle;\n        }\n        _shareTitle = shareTitle;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y scale for the right axis. The right y scale is typically automatically\n     * generated by the chart implementation.\n     * @method rightY\n     * @memberof dc.compositeChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [yScale]\n     * @returns {d3.scale|dc.compositeChart}\n     */\n    _chart.rightY = function (yScale) {\n        if (!arguments.length) {\n            return _rightY;\n        }\n        _rightY = yScale;\n        _chart.rescale();\n        return _chart;\n    };\n\n    /**\n     * Get or set alignment between left and right y axes. A line connecting '0' on both y axis\n     * will be parallel to x axis. This only has effect when {@link #dc.coordinateGridMixin+elasticY elasticY} is true.\n     * @method alignYAxes\n     * @memberof dc.compositeChart\n     * @instance\n     * @param {Boolean} [alignYAxes=false]\n     * @returns {Chart}\n     */\n    _chart.alignYAxes = function (alignYAxes) {\n        if (!arguments.length) {\n            return _alignYAxes;\n        }\n        _alignYAxes = alignYAxes;\n        _chart.rescale();\n        return _chart;\n    };\n\n    function leftYAxisChildren () {\n        return _children.filter(function (child) {\n            return !child.useRightYAxis();\n        });\n    }\n\n    function rightYAxisChildren () {\n        return _children.filter(function (child) {\n            return child.useRightYAxis();\n        });\n    }\n\n    function getYAxisMin (charts) {\n        return charts.map(function (c) {\n            return c.yAxisMin();\n        });\n    }\n\n    delete _chart.yAxisMin;\n    function yAxisMin () {\n        return d3.min(getYAxisMin(leftYAxisChildren()));\n    }\n\n    function rightYAxisMin () {\n        return d3.min(getYAxisMin(rightYAxisChildren()));\n    }\n\n    function getYAxisMax (charts) {\n        return charts.map(function (c) {\n            return c.yAxisMax();\n        });\n    }\n\n    delete _chart.yAxisMax;\n    function yAxisMax () {\n        return dc.utils.add(d3.max(getYAxisMax(leftYAxisChildren())), _chart.yAxisPadding());\n    }\n\n    function rightYAxisMax () {\n        return dc.utils.add(d3.max(getYAxisMax(rightYAxisChildren())), _chart.yAxisPadding());\n    }\n\n    function getAllXAxisMinFromChildCharts () {\n        return _children.map(function (c) {\n            return c.xAxisMin();\n        });\n    }\n\n    dc.override(_chart, 'xAxisMin', function () {\n        return dc.utils.subtract(d3.min(getAllXAxisMinFromChildCharts()), _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    });\n\n    function getAllXAxisMaxFromChildCharts () {\n        return _children.map(function (c) {\n            return c.xAxisMax();\n        });\n    }\n\n    dc.override(_chart, 'xAxisMax', function () {\n        return dc.utils.add(d3.max(getAllXAxisMaxFromChildCharts()), _chart.xAxisPadding(), _chart.xAxisPaddingUnit());\n    });\n\n    _chart.legendables = function () {\n        return _children.reduce(function (items, child) {\n            if (_shareColors) {\n                child.colors(_chart.colors());\n            }\n            items.push.apply(items, child.legendables());\n            return items;\n        }, []);\n    };\n\n    _chart.legendHighlight = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendHighlight(d);\n        }\n    };\n\n    _chart.legendReset = function (d) {\n        for (var j = 0; j < _children.length; ++j) {\n            var child = _children[j];\n            child.legendReset(d);\n        }\n    };\n\n    _chart.legendToggle = function () {\n        console.log('composite should not be getting legendToggle itself');\n    };\n\n    /**\n     * Set or get the right y axis used by the composite chart. This function is most useful when y\n     * axis customization is required. The y axis in dc.js is an instance of a\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight) therefore it supports any valid\n     * d3 axis manipulation.\n     *\n     * **Caution**: The right y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * @method rightYAxis\n     * @memberof dc.compositeChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisRight}\n     * @example\n     * // customize y axis tick format\n     * chart.rightYAxis().tickFormat(function (v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.rightYAxis().tickValues([0, 100, 200, 300]);\n     * @param {d3.axisRight} [rightYAxis]\n     * @returns {d3.axisRight|dc.compositeChart}\n     */\n    _chart.rightYAxis = function (rightYAxis) {\n        if (!arguments.length) {\n            return _rightYAxis;\n        }\n        _rightYAxis = rightYAxis;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A series chart is a chart that shows multiple series of data overlaid on one chart, where the\n * series is specified in the data. It is a specialization of Composite Chart and inherits all\n * composite features other than recomposing the chart.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/series.html Series Chart}\n * @class seriesChart\n * @memberof dc\n * @mixes dc.compositeChart\n * @example\n * // create a series chart under #chart-container1 element using the default global chart group\n * var seriesChart1 = dc.seriesChart(\"#chart-container1\");\n * // create a series chart under #chart-container2 element using chart group A\n * var seriesChart2 = dc.seriesChart(\"#chart-container2\", \"chartGroupA\");\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.seriesChart}\n */\ndc.seriesChart = function (parent, chartGroup) {\n    var _chart = dc.compositeChart(parent, chartGroup);\n\n    function keySort (a, b) {\n        return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n    }\n\n    var _charts = {};\n    var _chartFunction = dc.lineChart;\n    var _seriesAccessor;\n    var _seriesSort = d3.ascending;\n    var _valueSort = keySort;\n\n    _chart._mandatoryAttributes().push('seriesAccessor', 'chart');\n    _chart.shareColors(true);\n\n    _chart._preprocessData = function () {\n        var keep = [];\n        var childrenChanged;\n        var nester = d3.nest().key(_seriesAccessor);\n        if (_seriesSort) {\n            nester.sortKeys(_seriesSort);\n        }\n        if (_valueSort) {\n            nester.sortValues(_valueSort);\n        }\n        var nesting = nester.entries(_chart.data());\n        var children =\n            nesting.map(function (sub, i) {\n                var subChart = _charts[sub.key] || _chartFunction.call(_chart, _chart, chartGroup, sub.key, i);\n                if (!_charts[sub.key]) {\n                    childrenChanged = true;\n                }\n                _charts[sub.key] = subChart;\n                keep.push(sub.key);\n                return subChart\n                    .dimension(_chart.dimension())\n                    .group({\n                        all: typeof sub.values === 'function' ? sub.values : dc.utils.constant(sub.values)\n                    }, sub.key)\n                    .keyAccessor(_chart.keyAccessor())\n                    .valueAccessor(_chart.valueAccessor())\n                    .brushOn(false);\n            });\n        // this works around the fact compositeChart doesn't really\n        // have a removal interface\n        Object.keys(_charts)\n            .filter(function (c) {return keep.indexOf(c) === -1;})\n            .forEach(function (c) {\n                clearChart(c);\n                childrenChanged = true;\n            });\n        _chart._compose(children);\n        if (childrenChanged && _chart.legend()) {\n            _chart.legend().render();\n        }\n    };\n\n    function clearChart (c) {\n        if (_charts[c].g()) {\n            _charts[c].g().remove();\n        }\n        delete _charts[c];\n    }\n\n    function resetChildren () {\n        Object.keys(_charts).map(clearChart);\n        _charts = {};\n    }\n\n    /**\n     * Get or set the chart function, which generates the child charts.\n     * @method chart\n     * @memberof dc.seriesChart\n     * @instance\n     * @example\n     * // put curve on the line charts used for the series\n     * chart.chart(function(c) { return dc.lineChart(c).curve(d3.curveBasis); })\n     * // do a scatter series chart\n     * chart.chart(dc.scatterPlot)\n     * @param {Function} [chartFunction=dc.lineChart]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.chart = function (chartFunction) {\n        if (!arguments.length) {\n            return _chartFunction;\n        }\n        _chartFunction = chartFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Get or set accessor function for the displayed series. Given a datum, this function\n     * should return the series that datum belongs to.\n     * @method seriesAccessor\n     * @memberof dc.seriesChart\n     * @instance\n     * @example\n     * // simple series accessor\n     * chart.seriesAccessor(function(d) { return \"Expt: \" + d.key[0]; })\n     * @param {Function} [accessor]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.seriesAccessor = function (accessor) {\n        if (!arguments.length) {\n            return _seriesAccessor;\n        }\n        _seriesAccessor = accessor;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * Get or set a function to sort the list of series by, given series values.\n     * @method seriesSort\n     * @memberof dc.seriesChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.seriesSort(d3.descending);\n     * @param {Function} [sortFunction=d3.ascending]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.seriesSort = function (sortFunction) {\n        if (!arguments.length) {\n            return _seriesSort;\n        }\n        _seriesSort = sortFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    /**\n     * Get or set a function to sort each series values by. By default this is the key accessor which,\n     * for example, will ensure a lineChart series connects its points in increasing key/x order,\n     * rather than haphazardly.\n     * @method valueSort\n     * @memberof dc.seriesChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * // Default value sort\n     * _chart.valueSort(function keySort (a, b) {\n     *     return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n     * });\n     * @param {Function} [sortFunction]\n     * @returns {Function|dc.seriesChart}\n     */\n    _chart.valueSort = function (sortFunction) {\n        if (!arguments.length) {\n            return _valueSort;\n        }\n        _valueSort = sortFunction;\n        resetChildren();\n        return _chart;\n    };\n\n    // make compose private\n    _chart._compose = _chart.compose;\n    delete _chart.compose;\n\n    return _chart;\n};\n\n/**\n * The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map\n * from GeoJson data. This chart implementation was inspired by\n * {@link http://bl.ocks.org/4060606 the great d3 choropleth example}.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\n * @class geoChoroplethChart\n * @memberof dc\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a choropleth chart under '#us-chart' element using the default global chart group\n * var chart1 = dc.geoChoroplethChart('#us-chart');\n * // create a choropleth chart under '#us-chart2' element using chart group A\n * var chart2 = dc.compositeChart('#us-chart2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.geoChoroplethChart}\n */\ndc.geoChoroplethChart = function (parent, chartGroup) {\n    var _chart = dc.colorMixin(dc.baseMixin({}));\n\n    _chart.colorAccessor(function (d) {\n        return d || 0;\n    });\n\n    var _geoPath = d3.geoPath();\n    var _projectionFlag;\n    var _projection;\n\n    var _geoJsons = [];\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            var states = _chart.svg().append('g')\n                .attr('class', 'layer' + layerIndex);\n\n            var regionG = states.selectAll('g.' + geoJson(layerIndex).name)\n                .data(geoJson(layerIndex).data);\n\n            regionG = regionG.enter()\n                    .append('g')\n                    .attr('class', geoJson(layerIndex).name)\n                .merge(regionG);\n\n            regionG\n                .append('path')\n                .attr('fill', 'white')\n                .attr('d', _getGeoPath());\n\n            regionG.append('title');\n\n            plotData(layerIndex);\n        }\n        _projectionFlag = false;\n    };\n\n    function plotData (layerIndex) {\n        var data = generateLayeredData();\n\n        if (isDataLayer(layerIndex)) {\n            var regionG = renderRegionG(layerIndex);\n\n            renderPaths(regionG, layerIndex, data);\n\n            renderTitle(regionG, layerIndex, data);\n        }\n    }\n\n    function generateLayeredData () {\n        var data = {};\n        var groupAll = _chart.data();\n        for (var i = 0; i < groupAll.length; ++i) {\n            data[_chart.keyAccessor()(groupAll[i])] = _chart.valueAccessor()(groupAll[i]);\n        }\n        return data;\n    }\n\n    function isDataLayer (layerIndex) {\n        return geoJson(layerIndex).keyAccessor;\n    }\n\n    function renderRegionG (layerIndex) {\n        var regionG = _chart.svg()\n            .selectAll(layerSelector(layerIndex))\n            .classed('selected', function (d) {\n                return isSelected(layerIndex, d);\n            })\n            .classed('deselected', function (d) {\n                return isDeselected(layerIndex, d);\n            })\n            .attr('class', function (d) {\n                var layerNameClass = geoJson(layerIndex).name;\n                var regionClass = dc.utils.nameToId(geoJson(layerIndex).keyAccessor(d));\n                var baseClasses = layerNameClass + ' ' + regionClass;\n                if (isSelected(layerIndex, d)) {\n                    baseClasses += ' selected';\n                }\n                if (isDeselected(layerIndex, d)) {\n                    baseClasses += ' deselected';\n                }\n                return baseClasses;\n            });\n        return regionG;\n    }\n\n    function layerSelector (layerIndex) {\n        return 'g.layer' + layerIndex + ' g.' + geoJson(layerIndex).name;\n    }\n\n    function isSelected (layerIndex, d) {\n        return _chart.hasFilter() && _chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function isDeselected (layerIndex, d) {\n        return _chart.hasFilter() && !_chart.hasFilter(getKey(layerIndex, d));\n    }\n\n    function getKey (layerIndex, d) {\n        return geoJson(layerIndex).keyAccessor(d);\n    }\n\n    function geoJson (index) {\n        return _geoJsons[index];\n    }\n\n    function renderPaths (regionG, layerIndex, data) {\n        var paths = regionG\n            .select('path')\n            .attr('fill', function () {\n                var currentFill = d3.select(this).attr('fill');\n                if (currentFill) {\n                    return currentFill;\n                }\n                return 'none';\n            })\n            .on('click', function (d) {\n                return _chart.onClick(d, layerIndex);\n            });\n\n        dc.transition(paths, _chart.transitionDuration(), _chart.transitionDelay()).attr('fill', function (d, i) {\n            return _chart.getColor(data[geoJson(layerIndex).keyAccessor(d)], i);\n        });\n    }\n\n    _chart.onClick = function (d, layerIndex) {\n        var selectedRegion = geoJson(layerIndex).keyAccessor(d);\n        dc.events.trigger(function () {\n            _chart.filter(selectedRegion);\n            _chart.redrawGroup();\n        });\n    };\n\n    function renderTitle (regionG, layerIndex, data) {\n        if (_chart.renderTitle()) {\n            regionG.selectAll('title').text(function (d) {\n                var key = getKey(layerIndex, d);\n                var value = data[key];\n                return _chart.title()({key: key, value: value});\n            });\n        }\n    }\n\n    _chart._doRedraw = function () {\n        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {\n            plotData(layerIndex);\n            if (_projectionFlag) {\n                _chart.svg().selectAll('g.' + geoJson(layerIndex).name + ' path').attr('d', _getGeoPath());\n            }\n        }\n        _projectionFlag = false;\n    };\n\n    /**\n     * **mandatory**\n     *\n     * Use this function to insert a new GeoJson map layer. This function can be invoked multiple times\n     * if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple\n     * layers with the same name the new overlay will override the existing one.\n     * @method overlayGeoJson\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link http://geojson.org/ GeoJSON}\n     * @see {@link https://github.com/topojson/topojson/wiki TopoJSON}\n     * @see {@link https://github.com/topojson/topojson-1.x-api-reference/blob/master/API-Reference.md#wiki-feature topojson.feature}\n     * @example\n     * // insert a layer for rendering US states\n     * chart.overlayGeoJson(statesJson.features, 'state', function(d) {\n     *      return d.properties.name;\n     * });\n     * @param {geoJson} json - a geojson feed\n     * @param {String} name - name of the layer\n     * @param {Function} keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by\n     * this function should match the keys returned by the crossfilter groups.\n     * @returns {dc.geoChoroplethChart}\n     */\n    _chart.overlayGeoJson = function (json, name, keyAccessor) {\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            if (_geoJsons[i].name === name) {\n                _geoJsons[i].data = json;\n                _geoJsons[i].keyAccessor = keyAccessor;\n                return _chart;\n            }\n        }\n        _geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});\n        return _chart;\n    };\n\n    /**\n     * Gets or sets a custom geo projection function. See the available\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3 geo projection functions}.\n     *\n     * Starting version 3.0 it has been deprecated to rely on the default projection being\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#geoAlbersUsa d3.geoAlbersUsa()}. Please\n     * set it explicitly. {@link https://bl.ocks.org/mbostock/5557726\n     * Considering that `null` is also a valid value for projection}, if you need\n     * projection to be `null` please set it explicitly to `null`.\n     * @method projection\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3.projection}\n     * @see {@link https://github.com/d3/d3-geo-projection d3-geo-projection}\n     * @param {d3.projection} [projection=d3.geoAlbersUsa()]\n     * @returns {d3.projection|dc.geoChoroplethChart}\n     */\n    _chart.projection = function (projection) {\n        if (!arguments.length) {\n            return _projection;\n        }\n\n        _projection = projection;\n        _projectionFlag = true;\n        return _chart;\n    };\n\n    var _getGeoPath = function () {\n        if (_projection === undefined) {\n            dc.logger.warn('choropleth projection default of geoAlbers is deprecated,' +\n                ' in next version projection will need to be set explicitly');\n            return _geoPath.projection(d3.geoAlbersUsa());\n        }\n\n        return _geoPath.projection(_projection);\n    };\n\n    /**\n     * Returns all GeoJson layers currently registered with this chart. The returned array is a\n     * reference to this chart's internal data structure, so any modification to this array will also\n     * modify this chart's internal registration.\n     * @method geoJsons\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @returns {Array<{name:String, data: Object, accessor: Function}>}\n     */\n    _chart.geoJsons = function () {\n        return _geoJsons;\n    };\n\n    /**\n     * Returns the {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath} object used to\n     * render the projection and features.  Can be useful for figuring out the bounding box of the\n     * feature set and thus a way to calculate scale and translation for the projection.\n     * @method geoPath\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath}\n     * @returns {d3.geoPath}\n     */\n    _chart.geoPath = function () {\n        return _geoPath;\n    };\n\n    /**\n     * Remove a GeoJson layer from this chart by name\n     * @method removeGeoJson\n     * @memberof dc.geoChoroplethChart\n     * @instance\n     * @param {String} name\n     * @returns {dc.geoChoroplethChart}\n     */\n    _chart.removeGeoJson = function (name) {\n        var geoJsons = [];\n\n        for (var i = 0; i < _geoJsons.length; ++i) {\n            var layer = _geoJsons[i];\n            if (layer.name !== name) {\n                geoJsons.push(layer);\n            }\n        }\n\n        _geoJsons = geoJsons;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay\n * chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the\n * typical x and y positioning while retaining the capability to visualize data using bubble radius\n * and coloring.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class bubbleOverlay\n * @memberof dc\n * @mixes dc.bubbleMixin\n * @mixes dc.baseMixin\n * @example\n * // create a bubble overlay chart on top of the '#chart-container1 svg' element using the default global chart group\n * var bubbleChart1 = dc.bubbleOverlayChart('#chart-container1').svg(d3.select('#chart-container1 svg'));\n * // create a bubble overlay chart on top of the '#chart-container2 svg' element using chart group A\n * var bubbleChart2 = dc.compositeChart('#chart-container2', 'chartGroupA').svg(d3.select('#chart-container2 svg'));\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.bubbleOverlay}\n */\ndc.bubbleOverlay = function (parent, chartGroup) {\n    var BUBBLE_OVERLAY_CLASS = 'bubble-overlay';\n    var BUBBLE_NODE_CLASS = 'node';\n    var BUBBLE_CLASS = 'bubble';\n\n    /**\n     * **mandatory**\n     *\n     * Set the underlying svg image element. Unlike other dc charts this chart will not generate a svg\n     * element; therefore the bubble overlay chart will not work if this function is not invoked. If the\n     * underlying image is a bitmap, then an empty svg will need to be created on top of the image.\n     * @method svg\n     * @memberof dc.bubbleOverlay\n     * @instance\n     * @example\n     * // set up underlying svg element\n     * chart.svg(d3.select('#chart svg'));\n     * @param {SVGElement|d3.selection} [imageElement]\n     * @returns {dc.bubbleOverlay}\n     */\n    var _chart = dc.bubbleMixin(dc.baseMixin({}));\n    var _g;\n    var _points = [];\n\n    _chart.transitionDuration(750);\n\n    _chart.transitionDelay(0);\n\n    _chart.radiusValueAccessor(function (d) {\n        return d.value;\n    });\n\n    /**\n     * **mandatory**\n     *\n     * Set up a data point on the overlay. The name of a data point should match a specific 'key' among\n     * data groups generated using keyAccessor.  If a match is found (point name <-> data group key)\n     * then a bubble will be generated at the position specified by the function. x and y\n     * value specified here are relative to the underlying svg.\n     * @method point\n     * @memberof dc.bubbleOverlay\n     * @instance\n     * @param {String} name\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {dc.bubbleOverlay}\n     */\n    _chart.point = function (name, x, y) {\n        _points.push({name: name, x: x, y: y});\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        _g = initOverlayG();\n\n        _chart.r().range([_chart.MIN_RADIUS, _chart.width() * _chart.maxBubbleRelativeSize()]);\n\n        initializeBubbles();\n\n        _chart.fadeDeselectedArea(_chart.filter());\n\n        return _chart;\n    };\n\n    function initOverlayG () {\n        _g = _chart.select('g.' + BUBBLE_OVERLAY_CLASS);\n        if (_g.empty()) {\n            _g = _chart.svg().append('g').attr('class', BUBBLE_OVERLAY_CLASS);\n        }\n        return _g;\n    }\n\n    function initializeBubbles () {\n        var data = mapData();\n        _chart.calculateRadiusDomain();\n\n        _points.forEach(function (point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\n\n            if (circle.empty()) {\n                circle = nodeG.append('circle')\n                    .attr('class', BUBBLE_CLASS)\n                    .attr('r', 0)\n                    .attr('fill', _chart.getColor)\n                    .on('click', _chart.onClick);\n            }\n\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('r', function (d) {\n                    return _chart.bubbleR(d);\n                });\n\n            _chart._doRenderLabel(nodeG);\n\n            _chart._doRenderTitles(nodeG);\n        });\n    }\n\n    function mapData () {\n        var data = {};\n        _chart.data().forEach(function (datum) {\n            data[_chart.keyAccessor()(datum)] = datum;\n        });\n        return data;\n    }\n\n    function getNodeG (point, data) {\n        var bubbleNodeClass = BUBBLE_NODE_CLASS + ' ' + dc.utils.nameToId(point.name);\n\n        var nodeG = _g.select('g.' + dc.utils.nameToId(point.name));\n\n        if (nodeG.empty()) {\n            nodeG = _g.append('g')\n                .attr('class', bubbleNodeClass)\n                .attr('transform', 'translate(' + point.x + ',' + point.y + ')');\n        }\n\n        nodeG.datum(data[point.name]);\n\n        return nodeG;\n    }\n\n    _chart._doRedraw = function () {\n        updateBubbles();\n\n        _chart.fadeDeselectedArea(_chart.filter());\n\n        return _chart;\n    };\n\n    function updateBubbles () {\n        var data = mapData();\n        _chart.calculateRadiusDomain();\n\n        _points.forEach(function (point) {\n            var nodeG = getNodeG(point, data);\n\n            var circle = nodeG.select('circle.' + BUBBLE_CLASS);\n\n            dc.transition(circle, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('r', function (d) {\n                    return _chart.bubbleR(d);\n                })\n                .attr('fill', _chart.getColor);\n\n            _chart.doUpdateLabels(nodeG);\n\n            _chart.doUpdateTitles(nodeG);\n        });\n    }\n\n    _chart.debug = function (flag) {\n        if (flag) {\n            var debugG = _chart.select('g.' + dc.constants.DEBUG_GROUP_CLASS);\n\n            if (debugG.empty()) {\n                debugG = _chart.svg()\n                    .append('g')\n                    .attr('class', dc.constants.DEBUG_GROUP_CLASS);\n            }\n\n            var debugText = debugG.append('text')\n                .attr('x', 10)\n                .attr('y', 20);\n\n            debugG\n                .append('rect')\n                .attr('width', _chart.width())\n                .attr('height', _chart.height())\n                .on('mousemove', function () {\n                    var position = d3.mouse(debugG.node());\n                    var msg = position[0] + ', ' + position[1];\n                    debugText.text(msg);\n                });\n        } else {\n            _chart.selectAll('.debug').remove();\n        }\n\n        return _chart;\n    };\n\n    _chart.anchor(parent, chartGroup);\n\n    return _chart;\n};\n\n/**\n * Concrete row chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * @class rowChart\n * @memberof dc\n * @mixes dc.capMixin\n * @mixes dc.marginMixin\n * @mixes dc.colorMixin\n * @mixes dc.baseMixin\n * @example\n * // create a row chart under #chart-container1 element using the default global chart group\n * var chart1 = dc.rowChart('#chart-container1');\n * // create a row chart under #chart-container2 element using chart group A\n * var chart2 = dc.rowChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.rowChart}\n */\ndc.rowChart = function (parent, chartGroup) {\n\n    var _g;\n\n    var _labelOffsetX = 10;\n    var _labelOffsetY = 15;\n    var _hasLabelOffsetY = false;\n    var _dyOffset = '0.35em';  // this helps center labels https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#svg_text\n    var _titleLabelOffsetX = 2;\n\n    var _gap = 5;\n\n    var _fixedBarHeight = false;\n    var _rowCssClass = 'row';\n    var _titleRowCssClass = 'titlerow';\n    var _renderTitleLabel = false;\n\n    var _chart = dc.capMixin(dc.marginMixin(dc.colorMixin(dc.baseMixin({}))));\n\n    var _x;\n\n    var _elasticX;\n\n    var _xAxis = d3.axisBottom();\n\n    var _rowData;\n\n    _chart.rowsCap = _chart.cap;\n\n    function calculateAxisScale () {\n        if (!_x || _elasticX) {\n            var extent = d3.extent(_rowData, _chart.cappedValueAccessor);\n            if (extent[0] > 0) {\n                extent[0] = 0;\n            }\n            if (extent[1] < 0) {\n                extent[1] = 0;\n            }\n            _x = d3.scaleLinear().domain(extent)\n                .range([0, _chart.effectiveWidth()]);\n        }\n        _xAxis.scale(_x);\n    }\n\n    function drawAxis () {\n        var axisG = _g.select('g.axis');\n\n        calculateAxisScale();\n\n        if (axisG.empty()) {\n            axisG = _g.append('g').attr('class', 'axis');\n        }\n        axisG.attr('transform', 'translate(0, ' + _chart.effectiveHeight() + ')');\n\n        dc.transition(axisG, _chart.transitionDuration(), _chart.transitionDelay())\n            .call(_xAxis);\n    }\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _g = _chart.svg()\n            .append('g')\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n        drawChart();\n\n        return _chart;\n    };\n\n    _chart.title(function (d) {\n        return _chart.cappedKeyAccessor(d) + ': ' + _chart.cappedValueAccessor(d);\n    });\n\n    _chart.label(_chart.cappedKeyAccessor);\n\n    /**\n     * Gets or sets the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}.\n     * @method x\n     * @memberof dc.rowChart\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n     * @param {d3.scale} [scale]\n     * @returns {d3.scale|dc.rowChart}\n     */\n    _chart.x = function (scale) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = scale;\n        return _chart;\n    };\n\n    function drawGridLines () {\n        _g.selectAll('g.tick')\n            .select('line.grid-line')\n            .remove();\n\n        _g.selectAll('g.tick')\n            .append('line')\n            .attr('class', 'grid-line')\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', 0)\n            .attr('y2', function () {\n                return -_chart.effectiveHeight();\n            });\n    }\n\n    function drawChart () {\n        _rowData = _chart.data();\n\n        drawAxis();\n        drawGridLines();\n\n        var rows = _g.selectAll('g.' + _rowCssClass)\n            .data(_rowData);\n\n        removeElements(rows);\n        rows = createElements(rows)\n            .merge(rows);\n        updateElements(rows);\n    }\n\n    function createElements (rows) {\n        var rowEnter = rows.enter()\n            .append('g')\n            .attr('class', function (d, i) {\n                return _rowCssClass + ' _' + i;\n            });\n\n        rowEnter.append('rect').attr('width', 0);\n\n        createLabels(rowEnter);\n\n        return rowEnter;\n    }\n\n    function removeElements (rows) {\n        rows.exit().remove();\n    }\n\n    function rootValue () {\n        var root = _x(0);\n        return (root === -Infinity || root !== root) ? _x(1) : root;\n    }\n\n    function updateElements (rows) {\n        var n = _rowData.length;\n\n        var height;\n        if (!_fixedBarHeight) {\n            height = (_chart.effectiveHeight() - (n + 1) * _gap) / n;\n        } else {\n            height = _fixedBarHeight;\n        }\n\n        // vertically align label in center unless they override the value via property setter\n        if (!_hasLabelOffsetY) {\n            _labelOffsetY = height / 2;\n        }\n\n        var rect = rows.attr('transform', function (d, i) {\n                return 'translate(0,' + ((i + 1) * _gap + i * height) + ')';\n            }).select('rect')\n            .attr('height', height)\n            .attr('fill', _chart.getColor)\n            .on('click', onClick)\n            .classed('deselected', function (d) {\n                return (_chart.hasFilter()) ? !isSelectedRow(d) : false;\n            })\n            .classed('selected', function (d) {\n                return (_chart.hasFilter()) ? isSelectedRow(d) : false;\n            });\n\n        dc.transition(rect, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('width', function (d) {\n                return Math.abs(rootValue() - _x(_chart.valueAccessor()(d)));\n            })\n            .attr('transform', translateX);\n\n        createTitles(rows);\n        updateLabels(rows);\n    }\n\n    function createTitles (rows) {\n        if (_chart.renderTitle()) {\n            rows.select('title').remove();\n            rows.append('title').text(_chart.title());\n        }\n    }\n\n    function createLabels (rowEnter) {\n        if (_chart.renderLabel()) {\n            rowEnter.append('text')\n                .on('click', onClick);\n        }\n        if (_chart.renderTitleLabel()) {\n            rowEnter.append('text')\n                .attr('class', _titleRowCssClass)\n                .on('click', onClick);\n        }\n    }\n\n    function updateLabels (rows) {\n        if (_chart.renderLabel()) {\n            var lab = rows.select('text')\n                .attr('x', _labelOffsetX)\n                .attr('y', _labelOffsetY)\n                .attr('dy', _dyOffset)\n                .on('click', onClick)\n                .attr('class', function (d, i) {\n                    return _rowCssClass + ' _' + i;\n                })\n                .text(function (d) {\n                    return _chart.label()(d);\n                });\n            dc.transition(lab, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', translateX);\n        }\n        if (_chart.renderTitleLabel()) {\n            var titlelab = rows.select('.' + _titleRowCssClass)\n                    .attr('x', _chart.effectiveWidth() - _titleLabelOffsetX)\n                    .attr('y', _labelOffsetY)\n                    .attr('dy', _dyOffset)\n                    .attr('text-anchor', 'end')\n                    .on('click', onClick)\n                    .attr('class', function (d, i) {\n                        return _titleRowCssClass + ' _' + i ;\n                    })\n                    .text(function (d) {\n                        return _chart.title()(d);\n                    });\n            dc.transition(titlelab, _chart.transitionDuration(), _chart.transitionDelay())\n                .attr('transform', translateX);\n        }\n    }\n\n    /**\n     * Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'.\n     * @method renderTitleLabel\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Boolean} [renderTitleLabel=false]\n     * @returns {Boolean|dc.rowChart}\n     */\n    _chart.renderTitleLabel = function (renderTitleLabel) {\n        if (!arguments.length) {\n            return _renderTitleLabel;\n        }\n        _renderTitleLabel = renderTitleLabel;\n        return _chart;\n    };\n\n    function onClick (d) {\n        _chart.onClick(d);\n    }\n\n    function translateX (d) {\n        var x = _x(_chart.cappedValueAccessor(d)),\n            x0 = rootValue(),\n            s = x > x0 ? x0 : x;\n        return 'translate(' + s + ',0)';\n    }\n\n    _chart._doRedraw = function () {\n        drawChart();\n        return _chart;\n    };\n\n    /**\n     * Get or sets the x axis for the row chart instance.\n     * See the {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\n     * documention for more information.\n     * @method xAxis\n     * @memberof dc.rowChart\n     * @instance\n     * @example\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function (v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * // use a top-oriented axis. Note: position of the axis and grid lines will need to\n     * // be set manually, see https://dc-js.github.io/dc.js/examples/row-top-axis.html\n     * chart.xAxis(d3.axisTop())\n     * @returns {d3.axis}\n     */\n    _chart.xAxis = function (xAxis) {\n        if (!arguments.length) {\n            return _xAxis;\n        }\n        _xAxis = xAxis;\n        return this;\n    };\n\n    /**\n     * Get or set the fixed bar height. Default is [false] which will auto-scale bars.\n     * For example, if you want to fix the height for a specific number of bars (useful in TopN charts)\n     * you could fix height as follows (where count = total number of bars in your TopN and gap is\n     * your vertical gap space).\n     * @method fixedBarHeight\n     * @memberof dc.rowChart\n     * @instance\n     * @example\n     * chart.fixedBarHeight( chartheight - (count + 1) * gap / count);\n     * @param {Boolean|Number} [fixedBarHeight=false]\n     * @returns {Boolean|Number|dc.rowChart}\n     */\n    _chart.fixedBarHeight = function (fixedBarHeight) {\n        if (!arguments.length) {\n            return _fixedBarHeight;\n        }\n        _fixedBarHeight = fixedBarHeight;\n        return _chart;\n    };\n\n    /**\n     * Get or set the vertical gap space between rows on a particular row chart instance.\n     * @method gap\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [gap=5]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _chart;\n    };\n\n    /**\n     * Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescle to auto-fit the\n     * data range when filtered.\n     * @method elasticX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Boolean} [elasticX]\n     * @returns {Boolean|dc.rowChart}\n     */\n    _chart.elasticX = function (elasticX) {\n        if (!arguments.length) {\n            return _elasticX;\n        }\n        _elasticX = elasticX;\n        return _chart;\n    };\n\n    /**\n     * Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart.\n     * @method labelOffsetX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [labelOffsetX=10]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.labelOffsetX = function (labelOffsetX) {\n        if (!arguments.length) {\n            return _labelOffsetX;\n        }\n        _labelOffsetX = labelOffsetX;\n        return _chart;\n    };\n\n    /**\n     * Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart.\n     * @method labelOffsetY\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [labelOffsety=15]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.labelOffsetY = function (labelOffsety) {\n        if (!arguments.length) {\n            return _labelOffsetY;\n        }\n        _labelOffsetY = labelOffsety;\n        _hasLabelOffsetY = true;\n        return _chart;\n    };\n\n    /**\n     * Get of set the x offset (horizontal space between right edge of row and right edge or text.\n     * @method titleLabelOffsetX\n     * @memberof dc.rowChart\n     * @instance\n     * @param {Number} [titleLabelOffsetX=2]\n     * @returns {Number|dc.rowChart}\n     */\n    _chart.titleLabelOffsetX = function (titleLabelOffsetX) {\n        if (!arguments.length) {\n            return _titleLabelOffsetX;\n        }\n        _titleLabelOffsetX = titleLabelOffsetX;\n        return _chart;\n    };\n\n    function isSelectedRow (d) {\n        return _chart.hasFilter(_chart.cappedKeyAccessor(d));\n    }\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Legend is a attachable widget that can be added to other dc charts to render horizontal legend\n * labels.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\n * @class legend\n * @memberof dc\n * @example\n * chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))\n * @returns {dc.legend}\n */\ndc.legend = function () {\n    var LABEL_GAP = 2;\n\n    var _legend = {},\n        _parent,\n        _x = 0,\n        _y = 0,\n        _itemHeight = 12,\n        _gap = 5,\n        _horizontal = false,\n        _legendWidth = 560,\n        _itemWidth = 70,\n        _autoItemWidth = false,\n        _legendText = dc.pluck('name'),\n        _maxItems;\n\n    var _g;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) {\n            return _parent;\n        }\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        _parent.svg().select('g.dc-legend').remove();\n        _g = _parent.svg().append('g')\n            .attr('class', 'dc-legend')\n            .attr('transform', 'translate(' + _x + ',' + _y + ')');\n        var legendables = _parent.legendables();\n\n        if (_maxItems !== undefined) {\n            legendables = legendables.slice(0, _maxItems);\n        }\n\n        var itemEnter = _g.selectAll('g.dc-legend-item')\n            .data(legendables)\n            .enter()\n            .append('g')\n            .attr('class', 'dc-legend-item')\n            .on('mouseover', function (d) {\n                _parent.legendHighlight(d);\n            })\n            .on('mouseout', function (d) {\n                _parent.legendReset(d);\n            })\n            .on('click', function (d) {\n                d.chart.legendToggle(d);\n            });\n\n        _g.selectAll('g.dc-legend-item')\n            .classed('fadeout', function (d) {\n                return d.chart.isLegendableHidden(d);\n            });\n\n        if (legendables.some(dc.pluck('dashstyle'))) {\n            itemEnter\n                .append('line')\n                .attr('x1', 0)\n                .attr('y1', _itemHeight / 2)\n                .attr('x2', _itemHeight)\n                .attr('y2', _itemHeight / 2)\n                .attr('stroke-width', 2)\n                .attr('stroke-dasharray', dc.pluck('dashstyle'))\n                .attr('stroke', dc.pluck('color'));\n        } else {\n            itemEnter\n                .append('rect')\n                .attr('width', _itemHeight)\n                .attr('height', _itemHeight)\n                .attr('fill', function (d) {return d ? d.color : 'blue';});\n        }\n\n        itemEnter.append('text')\n                .text(_legendText)\n                .attr('x', _itemHeight + LABEL_GAP)\n                .attr('y', function () {\n                    return _itemHeight / 2 + (this.clientHeight ? this.clientHeight : 13) / 2 - 2;\n                });\n\n        var _cumulativeLegendTextWidth = 0;\n        var row = 0;\n        itemEnter.attr('transform', function (d, i) {\n            if (_horizontal) {\n                var itemWidth   = _autoItemWidth === true ? this.getBBox().width + _gap : _itemWidth;\n                if ((_cumulativeLegendTextWidth + itemWidth) > _legendWidth && _cumulativeLegendTextWidth > 0) {\n                    ++row;\n                    _cumulativeLegendTextWidth = 0;\n                }\n                var translateBy = 'translate(' + _cumulativeLegendTextWidth + ',' + row * legendItemHeight() + ')';\n                _cumulativeLegendTextWidth += itemWidth;\n                return translateBy;\n            } else {\n                return 'translate(0,' + i * legendItemHeight() + ')';\n            }\n        });\n    };\n\n    function legendItemHeight () {\n        return _gap + _itemHeight;\n    }\n\n    /**\n     * Set or get x coordinate for legend widget.\n     * @method x\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [x=0]\n     * @returns {Number|dc.legend}\n     */\n    _legend.x = function (x) {\n        if (!arguments.length) {\n            return _x;\n        }\n        _x = x;\n        return _legend;\n    };\n\n    /**\n     * Set or get y coordinate for legend widget.\n     * @method y\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [y=0]\n     * @returns {Number|dc.legend}\n     */\n    _legend.y = function (y) {\n        if (!arguments.length) {\n            return _y;\n        }\n        _y = y;\n        return _legend;\n    };\n\n    /**\n     * Set or get gap between legend items.\n     * @method gap\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [gap=5]\n     * @returns {Number|dc.legend}\n     */\n    _legend.gap = function (gap) {\n        if (!arguments.length) {\n            return _gap;\n        }\n        _gap = gap;\n        return _legend;\n    };\n\n    /**\n     * Set or get legend item height.\n     * @method itemHeight\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [itemHeight=12]\n     * @returns {Number|dc.legend}\n     */\n    _legend.itemHeight = function (itemHeight) {\n        if (!arguments.length) {\n            return _itemHeight;\n        }\n        _itemHeight = itemHeight;\n        return _legend;\n    };\n\n    /**\n     * Position legend horizontally instead of vertically.\n     * @method horizontal\n     * @memberof dc.legend\n     * @instance\n     * @param  {Boolean} [horizontal=false]\n     * @returns {Boolean|dc.legend}\n     */\n    _legend.horizontal = function (horizontal) {\n        if (!arguments.length) {\n            return _horizontal;\n        }\n        _horizontal = horizontal;\n        return _legend;\n    };\n\n    /**\n     * Maximum width for horizontal legend.\n     * @method legendWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [legendWidth=500]\n     * @returns {Number|dc.legend}\n     */\n    _legend.legendWidth = function (legendWidth) {\n        if (!arguments.length) {\n            return _legendWidth;\n        }\n        _legendWidth = legendWidth;\n        return _legend;\n    };\n\n    /**\n     * Legend item width for horizontal legend.\n     * @method itemWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [itemWidth=70]\n     * @returns {Number|dc.legend}\n     */\n    _legend.itemWidth = function (itemWidth) {\n        if (!arguments.length) {\n            return _itemWidth;\n        }\n        _itemWidth = itemWidth;\n        return _legend;\n    };\n\n    /**\n     * Turn automatic width for legend items on or off. If true, {@link dc.legend#itemWidth itemWidth} is ignored.\n     * This setting takes into account the {@link dc.legend#gap gap}.\n     * @method autoItemWidth\n     * @memberof dc.legend\n     * @instance\n     * @param  {Boolean} [autoItemWidth=false]\n     * @returns {Boolean|dc.legend}\n     */\n    _legend.autoItemWidth = function (autoItemWidth) {\n        if (!arguments.length) {\n            return _autoItemWidth;\n        }\n        _autoItemWidth = autoItemWidth;\n        return _legend;\n    };\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     * @method legendText\n     * @memberof dc.legend\n     * @instance\n     * @param  {Function} [legendText]\n     * @returns {Function|dc.legend}\n     * @example\n     * // default legendText\n     * legend.legendText(dc.pluck('name'))\n     *\n     * // create numbered legend items\n     * chart.legend(dc.legend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(dc.legend().legendText(function(d) { return d.name + ': ' d.data; }))\n     **/\n    _legend.legendText = function (legendText) {\n        if (!arguments.length) {\n            return _legendText;\n        }\n        _legendText = legendText;\n        return _legend;\n    };\n\n    /**\n     * Maximum number of legend items to display\n     * @method maxItems\n     * @memberof dc.legend\n     * @instance\n     * @param  {Number} [maxItems]\n     * @return {dc.legend}\n     */\n    _legend.maxItems = function (maxItems) {\n        if (!arguments.length) {\n            return _maxItems;\n        }\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\n        return _legend;\n    };\n\n    return _legend;\n};\n\n/**\n * htmlLegend is a attachable widget that can be added to other dc charts to render horizontal/vertical legend\n * labels.\n *\n * @class htmlLegend\n * @memberof dc\n * @example\n * chart.legend(dc.htmlLegend().container(legendContainerElement).horizontal(false))\n * @returns {dc.htmlLegend}\n */\ndc.htmlLegend = function () {\n    var _legend = {},\n        _htmlLegendDivCssClass = 'dc-html-legend',\n        _legendItemCssClassHorizontal = 'dc-legend-item-horizontal',\n        _legendItemCssClassVertical = 'dc-legend-item-vertical',\n        _parent,\n        _container,\n        _legendText = dc.pluck('name'),\n        _maxItems,\n        _horizontal = false,\n        _legendItemClass,\n        _highlightSelected = false;\n\n    _legend.parent = function (p) {\n        if (!arguments.length) {\n            return _parent;\n        }\n        _parent = p;\n        return _legend;\n    };\n\n    _legend.render = function () {\n        var _defaultLegendItemCssClass = _horizontal ?  _legendItemCssClassHorizontal : _legendItemCssClassVertical;\n        _container.select('div.dc-html-legend').remove();\n\n        var _l = _container.append('div').attr('class', _htmlLegendDivCssClass);\n        _l.attr('style', 'max-width:' + _container.nodes()[0].style.width);\n\n        var legendables = _parent.legendables();\n        var filters = _parent.filters();\n\n        if (_maxItems !== undefined) {\n            legendables = legendables.slice(0, _maxItems);\n        }\n\n        var legendItemClassName = _legendItemClass ? _legendItemClass : _defaultLegendItemCssClass;\n\n        var itemEnter = _l.selectAll('div.' + legendItemClassName)\n            .data(legendables).enter()\n            .append('div')\n            .classed(legendItemClassName, true)\n            .on('mouseover', _parent.legendHighlight)\n            .on('mouseout', _parent.legendReset)\n            .on('click', _parent.legendToggle);\n\n        if (_highlightSelected) {\n            itemEnter.classed(dc.constants.SELECTED_CLASS, function (d) {\n                return filters.indexOf(d.name) !== -1;\n            });\n        }\n\n        itemEnter.append('span')\n            .attr('class', 'dc-legend-item-color')\n            .style('background-color', dc.pluck('color'));\n\n        itemEnter.append('span')\n            .attr('class', 'dc-legend-item-label')\n            .attr('title', _legendText)\n            .text(_legendText);\n    };\n\n    /**\n     #### .container([selector])\n     Set the container selector for the legend widget. Required.\n     **/\n    _legend.container = function (c) {\n        if (!arguments.length) {\n            return _container;\n        }\n        _container = d3.select(c);\n        return _legend;\n    };\n\n    /**\n     #### .legendItemClass([selector])\n     This can be optionally used to override class for legenditem and just use this class style.\n     The reason to have this is so this can be done for a particular chart rather than overriding the style for all charts\n     Setting this will disable the highlighting of selected items also.\n     **/\n    _legend.legendItemClass = function (c) {\n        if (!arguments.length) {\n            return _legendItemClass;\n        }\n        _legendItemClass = c;\n        return _legend;\n    };\n\n    /**\n     #### .highlightSelected([boolean])\n     This can be optionally used to enable highlighting legends for the selections/filters for the chart.\n     **/\n    _legend.highlightSelected = function (c) {\n        if (!arguments.length) {\n            return _highlightSelected;\n        }\n        _highlightSelected = c;\n        return _legend;\n    };\n\n    /**\n     #### .horizontal([boolean])\n     Display the legend horizontally instead of horizontally\n     **/\n    _legend.horizontal = function (b) {\n        if (!arguments.length) {\n            return _horizontal;\n        }\n        _horizontal = b;\n        return _legend;\n    };\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     * @method legendText\n     * @memberof dc.htmlLegend\n     * @instance\n     * @param  {Function} [legendText]\n     * @returns {Function|dc.htmlLegend}\n     * @example\n     * // default legendText\n     * legend.legendText(dc.pluck('name'))\n     *\n     * // create numbered legend items\n     * chart.legend(dc.htmlLegend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(dc.htmlLegend().legendText(function(d) { return d.name + ': ' d.data; }))\n     **/\n    _legend.legendText = function (legendText) {\n        if (!arguments.length) {\n            return _legendText;\n        }\n        _legendText = legendText;\n        return _legend;\n    };\n\n    /**\n     * Maximum number of legend items to display\n     * @method maxItems\n     * @memberof dc.htmlLegend\n     * @instance\n     * @param  {Number} [maxItems]\n     * @return {dc.htmlLegend}\n     */\n    _legend.maxItems = function (maxItems) {\n        if (!arguments.length) {\n            return _maxItems;\n        }\n        _maxItems = dc.utils.isNumber(maxItems) ? maxItems : undefined;\n        return _legend;\n    };\n\n    return _legend;\n};\n\n\n/**\n * A scatter plot chart\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/scatter.html Scatter Chart}\n * - {@link http://dc-js.github.io/dc.js/examples/multi-scatter.html Multi-Scatter Chart}\n * @class scatterPlot\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a scatter plot under #chart-container1 element using the default global chart group\n * var chart1 = dc.scatterPlot('#chart-container1');\n * // create a scatter plot under #chart-container2 element using chart group A\n * var chart2 = dc.scatterPlot('#chart-container2', 'chartGroupA');\n * // create a sub-chart under a composite parent chart\n * var chart3 = dc.scatterPlot(compositeChart);\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.scatterPlot}\n */\ndc.scatterPlot = function (parent, chartGroup) {\n    var _chart = dc.coordinateGridMixin({});\n    var _symbol = d3.symbol();\n\n    var _existenceAccessor = function (d) { return d.value; };\n\n    var originalKeyAccessor = _chart.keyAccessor();\n    _chart.keyAccessor(function (d) { return originalKeyAccessor(d)[0]; });\n    _chart.valueAccessor(function (d) { return originalKeyAccessor(d)[1]; });\n    _chart.colorAccessor(function () { return _chart._groupName; });\n\n    _chart.title(function (d) {\n        // this basically just counteracts the setting of its own key/value accessors\n        // see https://github.com/dc-js/dc.js/issues/702\n        return _chart.keyAccessor()(d) + ',' + _chart.valueAccessor()(d) + ': ' +\n            _chart.existenceAccessor()(d);\n    });\n\n    var _locator = function (d) {\n        return 'translate(' + _chart.x()(_chart.keyAccessor()(d)) + ',' +\n                              _chart.y()(_chart.valueAccessor()(d)) + ')';\n    };\n\n    var _highlightedSize = 7;\n    var _symbolSize = 5;\n    var _excludedSize = 3;\n    var _excludedColor = null;\n    var _excludedOpacity = 1.0;\n    var _emptySize = 0;\n    var _emptyOpacity = 0;\n    var _nonemptyOpacity = 1;\n    var _emptyColor = null;\n    var _filtered = [];\n\n    // Use a 2 dimensional brush\n    _chart.brush(d3.brush());\n\n    function elementSize (d, i) {\n        if (!_existenceAccessor(d)) {\n            return Math.pow(_emptySize, 2);\n        } else if (_filtered[i]) {\n            return Math.pow(_symbolSize, 2);\n        } else {\n            return Math.pow(_excludedSize, 2);\n        }\n    }\n    _symbol.size(elementSize);\n\n    dc.override(_chart, '_filter', function (filter) {\n        if (!arguments.length) {\n            return _chart.__filter();\n        }\n\n        return _chart.__filter(dc.filters.RangedTwoDimensionalFilter(filter));\n    });\n\n    _chart.plotData = function () {\n        var symbols = _chart.chartBodyG().selectAll('path.symbol')\n            .data(_chart.data());\n\n        symbols = symbols\n            .enter()\n                .append('path')\n                .attr('class', 'symbol')\n                .attr('opacity', 0)\n                .attr('fill', _chart.getColor)\n                .attr('transform', _locator)\n            .merge(symbols);\n\n        symbols.call(renderTitles, _chart.data());\n\n        symbols.each(function (d, i) {\n            _filtered[i] = !_chart.filter() || _chart.filter().isFiltered([_chart.keyAccessor()(d), _chart.valueAccessor()(d)]);\n        });\n\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('opacity', function (d, i) {\n                if (!_existenceAccessor(d)) {\n                    return _emptyOpacity;\n                } else if (_filtered[i]) {\n                    return _nonemptyOpacity;\n                } else {\n                    return _chart.excludedOpacity();\n                }\n            })\n            .attr('fill', function (d, i) {\n                if (_emptyColor && !_existenceAccessor(d)) {\n                    return _emptyColor;\n                } else if (_chart.excludedColor() && !_filtered[i]) {\n                    return _chart.excludedColor();\n                } else {\n                    return _chart.getColor(d);\n                }\n            })\n            .attr('transform', _locator)\n            .attr('d', _symbol);\n\n        dc.transition(symbols.exit(), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('opacity', 0).remove();\n    };\n\n    function renderTitles (symbol, d) {\n        if (_chart.renderTitle()) {\n            symbol.selectAll('title').remove();\n            symbol.append('title').text(function (d) {\n                return _chart.title()(d);\n            });\n        }\n    }\n\n    /**\n     * Get or set the existence accessor.  If a point exists, it is drawn with\n     * {@link dc.scatterPlot#symbolSize symbolSize} radius and\n     * opacity 1; if it does not exist, it is drawn with\n     * {@link dc.scatterPlot#emptySize emptySize} radius and opacity 0. By default,\n     * the existence accessor checks if the reduced value is truthy.\n     * @method existenceAccessor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link dc.scatterPlot#symbolSize symbolSize}\n     * @see {@link dc.scatterPlot#emptySize emptySize}\n     * @example\n     * // default accessor\n     * chart.existenceAccessor(function (d) { return d.value; });\n     * @param {Function} [accessor]\n     * @returns {Function|dc.scatterPlot}\n     */\n    _chart.existenceAccessor = function (accessor) {\n        if (!arguments.length) {\n            return _existenceAccessor;\n        }\n        _existenceAccessor = accessor;\n        return this;\n    };\n\n    /**\n     * Get or set the symbol type used for each point. By default the symbol is a circle (d3.symbolCircle).\n     * Type can be a constant or an accessor.\n     * @method symbol\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_type symbol.type}\n     * @example\n     * // Circle type\n     * chart.symbol(d3.symbolCircle);\n     * // Square type\n     * chart.symbol(d3.symbolSquare);\n     * @param {Function} [type=d3.symbolCircle]\n     * @returns {Function|dc.scatterPlot}\n     */\n    _chart.symbol = function (type) {\n        if (!arguments.length) {\n            return _symbol.type();\n        }\n        _symbol.type(type);\n        return _chart;\n    };\n\n    /**\n     * Get or set the symbol generator. By default `dc.scatterPlot` will use\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol()}\n     * to generate symbols. `dc.scatterPlot` will set the\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size symbol size accessor}\n     * on the symbol generator.\n     * @method customSymbol\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol}\n     * @see {@link https://stackoverflow.com/questions/25332120/create-additional-d3-js-symbols Create additional D3.js symbols}\n     * @param {String|Function} [customSymbol=d3.symbol()]\n     * @returns {String|Function|dc.scatterPlot}\n     */\n    _chart.customSymbol = function (customSymbol) {\n        if (!arguments.length) {\n            return _symbol;\n        }\n        _symbol = customSymbol;\n        _symbol.size(elementSize);\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for symbols.\n     * @method symbolSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [symbolSize=3]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.symbolSize = function (symbolSize) {\n        if (!arguments.length) {\n            return _symbolSize;\n        }\n        _symbolSize = symbolSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for highlighted symbols.\n     * @method highlightedSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [highlightedSize=5]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.highlightedSize = function (highlightedSize) {\n        if (!arguments.length) {\n            return _highlightedSize;\n        }\n        _highlightedSize = highlightedSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get size for symbols excluded from this chart's filter. If null, no\n     * special size is applied for symbols based on their filter status.\n     * @method excludedSize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [excludedSize=null]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedSize = function (excludedSize) {\n        if (!arguments.length) {\n            return _excludedSize;\n        }\n        _excludedSize = excludedSize;\n        return _chart;\n    };\n\n    /**\n     * Set or get color for symbols excluded from this chart's filter. If null, no\n     * special color is applied for symbols based on their filter status.\n     * @method excludedColor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [excludedColor=null]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedColor = function (excludedColor) {\n        if (!arguments.length) {\n            return _excludedColor;\n        }\n        _excludedColor = excludedColor;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols excluded from this chart's filter.\n     * @method excludedOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [excludedOpacity=1.0]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.excludedOpacity = function (excludedOpacity) {\n        if (!arguments.length) {\n            return _excludedOpacity;\n        }\n        _excludedOpacity = excludedOpacity;\n        return _chart;\n    };\n\n    /**\n     * Set or get radius for symbols when the group is empty.\n     * @method emptySize\n     * @memberof dc.scatterPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param {Number} [emptySize=0]\n     * @returns {Number|dc.scatterPlot}\n     */\n    _chart.hiddenSize = _chart.emptySize = function (emptySize) {\n        if (!arguments.length) {\n            return _emptySize;\n        }\n        _emptySize = emptySize;\n        return _chart;\n    };\n\n    /**\n     * Set or get color for symbols when the group is empty. If null, just use the\n     * {@link dc.colorMixin#colors colorMixin.colors} color scale zero value.\n     * @name emptyColor\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {String} [emptyColor=null]\n     * @return {String}\n     * @return {dc.scatterPlot}/\n     */\n    _chart.emptyColor = function (emptyColor) {\n        if (!arguments.length) {\n            return _emptyColor;\n        }\n        _emptyColor = emptyColor;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols when the group is empty.\n     * @name emptyOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [emptyOpacity=0]\n     * @return {Number}\n     * @return {dc.scatterPlot}\n     */\n    _chart.emptyOpacity = function (emptyOpacity) {\n        if (!arguments.length) {\n            return _emptyOpacity;\n        }\n        _emptyOpacity = emptyOpacity;\n        return _chart;\n    };\n\n    /**\n     * Set or get opacity for symbols when the group is not empty.\n     * @name nonemptyOpacity\n     * @memberof dc.scatterPlot\n     * @instance\n     * @param {Number} [nonemptyOpacity=1]\n     * @return {Number}\n     * @return {dc.scatterPlot}\n     */\n    _chart.nonemptyOpacity = function (nonemptyOpacity) {\n        if (!arguments.length) {\n            return _emptyOpacity;\n        }\n        _nonemptyOpacity = nonemptyOpacity;\n        return _chart;\n    };\n\n    _chart.legendables = function () {\n        return [{chart: _chart, name: _chart._groupName, color: _chart.getColor()}];\n    };\n\n    _chart.legendHighlight = function (d) {\n        resizeSymbolsWhere(function (symbol) {\n            return symbol.attr('fill') === d.color;\n        }, _highlightedSize);\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return d3.select(this).attr('fill') !== d.color;\n        }).classed('fadeout', true);\n    };\n\n    _chart.legendReset = function (d) {\n        resizeSymbolsWhere(function (symbol) {\n            return symbol.attr('fill') === d.color;\n        }, _symbolSize);\n        _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return d3.select(this).attr('fill') !== d.color;\n        }).classed('fadeout', false);\n    };\n\n    function resizeSymbolsWhere (condition, size) {\n        var symbols = _chart.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\n            return condition(d3.select(this));\n        });\n        var oldSize = _symbol.size();\n        _symbol.size(Math.pow(size, 2));\n        dc.transition(symbols, _chart.transitionDuration(), _chart.transitionDelay()).attr('d', _symbol);\n        _symbol.size(oldSize);\n    }\n\n    _chart.createBrushHandlePaths = function () {\n        // no handle paths for poly-brushes\n    };\n\n    _chart.extendBrush = function (brushSelection) {\n        if (_chart.round()) {\n            brushSelection[0] = brushSelection[0].map(_chart.round());\n            brushSelection[1] = brushSelection[1].map(_chart.round());\n        }\n        return brushSelection;\n    };\n\n    _chart.brushIsEmpty = function (brushSelection) {\n        return !brushSelection || brushSelection[0][0] >= brushSelection[1][0] || brushSelection[0][1] >= brushSelection[1][1];\n    };\n\n    _chart._brushing = function () {\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\n        // Source Event will be null when brush.move is called programmatically (see below as well).\n        if (!d3.event.sourceEvent) { return; }\n\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\n        // In this case we are more worried about this handler causing brush move programmatically which will\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\n        // This check avoids recursive calls\n        if (d3.event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(d3.event.sourceEvent.type) !== -1) {\n            return;\n        }\n\n        var brushSelection = d3.event.selection;\n\n        // Testing with pixels is more reliable\n        var brushIsEmpty = _chart.brushIsEmpty(brushSelection);\n\n        if (brushSelection) {\n            brushSelection = brushSelection.map(function (point) {\n                return point.map(function (coord, i) {\n                    var scale = i === 0 ? _chart.x() : _chart.y();\n                    return scale.invert(coord);\n                });\n            });\n\n            brushSelection = _chart.extendBrush(brushSelection);\n\n            // The rounding process might have made brushSelection empty, so we need to recheck\n            brushIsEmpty = brushIsEmpty && _chart.brushIsEmpty(brushSelection);\n        }\n\n        _chart.redrawBrush(brushSelection, false);\n\n        var ranged2DFilter = brushIsEmpty ? null : dc.filters.RangedTwoDimensionalFilter(brushSelection);\n\n        dc.events.trigger(function () {\n            _chart.replaceFilter(ranged2DFilter);\n            _chart.redrawGroup();\n        }, dc.constants.EVENT_DELAY);\n    };\n\n    _chart.redrawBrush = function (brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        var _brush = _chart.brush();\n        var _gBrush = _chart.gBrush();\n\n        if (_chart.brushOn() && _gBrush) {\n            if (_chart.resizing()) {\n                _chart.setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                _gBrush\n                    .call(_brush.move, brushSelection);\n\n            } else {\n                brushSelection = brushSelection.map(function (point) {\n                    return point.map(function (coord, i) {\n                        var scale = i === 0 ? _chart.x() : _chart.y();\n                        return scale(coord);\n                    });\n                });\n\n                var gBrush =\n                    dc.optionalTransition(doTransition, _chart.transitionDuration(), _chart.transitionDelay())(_gBrush);\n\n                gBrush\n                    .call(_brush.move, brushSelection);\n\n            }\n        }\n\n        _chart.fadeDeselectedArea(brushSelection);\n    };\n\n    _chart.setBrushY = function (gBrush) {\n        gBrush.call(_chart.brush().y(_chart.y()));\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A display of a single numeric value.\n * Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and\n * a valueAccessor that returns a single value.\n * @class numberDisplay\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a number display under #chart-container1 element using the default global chart group\n * var display1 = dc.numberDisplay('#chart-container1');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.numberDisplay}\n */\ndc.numberDisplay = function (parent, chartGroup) {\n    var SPAN_CLASS = 'number-display';\n    var _formatNumber = d3.format('.2s');\n    var _chart = dc.baseMixin({});\n    var _html = {one: '', some: '', none: ''};\n    var _lastValue;\n\n    // dimension not required\n    _chart._mandatoryAttributes(['group']);\n\n    // default to ordering by value, to emulate old group.top(1) behavior when multiple groups\n    _chart.ordering(function (kv) { return kv.value; });\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending on the number\n     * displayed.  The text `%number` will be replaced with the current value.\n     * - one: HTML template to use if the number is 1\n     * - zero: HTML template to use if the number is 0\n     * - some: HTML template to use otherwise\n     * @method html\n     * @memberof dc.numberDisplay\n     * @instance\n     * @example\n     * numberWidget.html({\n     *      one:'%number record',\n     *      some:'%number records',\n     *      none:'no records'})\n     * @param {{one:String, some:String, none:String}} [html={one: '', some: '', none: ''}]\n     * @returns {{one:String, some:String, none:String}|dc.numberDisplay}\n     */\n    _chart.html = function (html) {\n        if (!arguments.length) {\n            return _html;\n        }\n        if (html.none) {\n            _html.none = html.none;//if none available\n        } else if (html.one) {\n            _html.none = html.one;//if none not available use one\n        } else if (html.some) {\n            _html.none = html.some;//if none and one not available use some\n        }\n        if (html.one) {\n            _html.one = html.one;//if one available\n        } else if (html.some) {\n            _html.one = html.some;//if one not available use some\n        }\n        if (html.some) {\n            _html.some = html.some;//if some available\n        } else if (html.one) {\n            _html.some = html.one;//if some not available use one\n        }\n        return _chart;\n    };\n\n    /**\n     * Calculate and return the underlying value of the display.\n     * @method value\n     * @memberof dc.numberDisplay\n     * @instance\n     * @returns {Number}\n     */\n    _chart.value = function () {\n        return _chart.data();\n    };\n\n    function maxBin (all) {\n        if (!all.length) {\n            return null;\n        }\n        var sorted = _chart._computeOrderedGroups(all);\n        return sorted[sorted.length - 1];\n    }\n    _chart.data(function (group) {\n        var valObj = group.value ? group.value() : maxBin(group.all());\n        return _chart.valueAccessor()(valObj);\n    });\n\n    _chart.transitionDuration(250); // good default\n    _chart.transitionDelay(0);\n\n    _chart._doRender = function () {\n        var newValue = _chart.value(),\n            span = _chart.selectAll('.' + SPAN_CLASS);\n\n        if (span.empty()) {\n            span = span.data([0])\n                .enter()\n                    .append('span')\n                    .attr('class', SPAN_CLASS)\n                .merge(span);\n        }\n\n        span.transition()\n            .duration(_chart.transitionDuration())\n            .delay(_chart.transitionDelay())\n            .ease(d3.easeQuad)\n            .tween('text', function () {\n                // [XA] don't try and interpolate from Infinity, else this breaks.\n                var interpStart = isFinite(_lastValue) ? _lastValue : 0;\n                var interp = d3.interpolateNumber(interpStart || 0, newValue);\n                _lastValue = newValue;\n\n                // need to save it in D3v4\n                var node = this;\n                return function (t) {\n                    var html = null, num = _chart.formatNumber()(interp(t));\n                    if (newValue === 0 && (_html.none !== '')) {\n                        html = _html.none;\n                    } else if (newValue === 1 && (_html.one !== '')) {\n                        html = _html.one;\n                    } else if (_html.some !== '') {\n                        html = _html.some;\n                    }\n                    node.innerHTML = html ? html.replace('%number', num) : num;\n                };\n            });\n    };\n\n    _chart._doRedraw = function () {\n        return _chart._doRender();\n    };\n\n    /**\n     * Get or set a function to format the value for the display.\n     * @method formatNumber\n     * @memberof dc.numberDisplay\n     * @instance\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @param {Function} [formatter=d3.format('.2s')]\n     * @returns {Function|dc.numberDisplay}\n     */\n    _chart.formatNumber = function (formatter) {\n        if (!arguments.length) {\n            return _formatNumber;\n        }\n        _formatNumber = formatter;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * A heat map is matrix that represents the values of two dimensions of data using colors.\n * @class heatMap\n * @memberof dc\n * @mixes dc.colorMixin\n * @mixes dc.marginMixin\n * @mixes dc.baseMixin\n * @example\n * // create a heat map under #chart-container1 element using the default global chart group\n * var heatMap1 = dc.heatMap('#chart-container1');\n * // create a heat map under #chart-container2 element using chart group A\n * var heatMap2 = dc.heatMap('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.heatMap}\n */\ndc.heatMap = function (parent, chartGroup) {\n\n    var DEFAULT_BORDER_RADIUS = 6.75;\n\n    var _chartBody;\n\n    var _cols;\n    var _rows;\n    var _colOrdering = d3.ascending;\n    var _rowOrdering = d3.ascending;\n    var _colScale = d3.scaleBand();\n    var _rowScale = d3.scaleBand();\n\n    var _xBorderRadius = DEFAULT_BORDER_RADIUS;\n    var _yBorderRadius = DEFAULT_BORDER_RADIUS;\n\n    var _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin({})));\n    _chart._mandatoryAttributes(['group']);\n    _chart.title(_chart.colorAccessor());\n\n    var _colsLabel = function (d) {\n        return d;\n    };\n    var _rowsLabel = function (d) {\n        return d;\n    };\n\n    /**\n     * Set or get the column label function. The chart class uses this function to render\n     * column labels on the X axis. It is passed the column name.\n     * @method colsLabel\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // the default label function just returns the name\n     * chart.colsLabel(function(d) { return d; });\n     * @param  {Function} [labelFunction=function(d) { return d; }]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.colsLabel = function (labelFunction) {\n        if (!arguments.length) {\n            return _colsLabel;\n        }\n        _colsLabel = labelFunction;\n        return _chart;\n    };\n\n    /**\n     * Set or get the row label function. The chart class uses this function to render\n     * row labels on the Y axis. It is passed the row name.\n     * @method rowsLabel\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // the default label function just returns the name\n     * chart.rowsLabel(function(d) { return d; });\n     * @param  {Function} [labelFunction=function(d) { return d; }]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.rowsLabel = function (labelFunction) {\n        if (!arguments.length) {\n            return _rowsLabel;\n        }\n        _rowsLabel = labelFunction;\n        return _chart;\n    };\n\n    var _xAxisOnClick = function (d) { filterAxis(0, d); };\n    var _yAxisOnClick = function (d) { filterAxis(1, d); };\n    var _boxOnClick = function (d) {\n        var filter = d.key;\n        dc.events.trigger(function () {\n            _chart.filter(filter);\n            _chart.redrawGroup();\n        });\n    };\n\n    function filterAxis (axis, value) {\n        var cellsOnAxis = _chart.selectAll('.box-group').filter(function (d) {\n            return d.key[axis] === value;\n        });\n        var unfilteredCellsOnAxis = cellsOnAxis.filter(function (d) {\n            return !_chart.hasFilter(d.key);\n        });\n        dc.events.trigger(function () {\n            var selection = unfilteredCellsOnAxis.empty() ? cellsOnAxis : unfilteredCellsOnAxis;\n            var filters = selection.data().map(function (kv) {\n                return dc.filters.TwoDimensionalFilter(kv.key);\n            });\n            _chart._filter([filters]);\n            _chart.redrawGroup();\n        });\n    }\n\n    dc.override(_chart, 'filter', function (filter) {\n        if (!arguments.length) {\n            return _chart._filter();\n        }\n\n        return _chart._filter(dc.filters.TwoDimensionalFilter(filter));\n    });\n\n    /**\n     * Gets or sets the values used to create the rows of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the value accessor.\n     * @method rows\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Array<String|Number>} [rows]\n     * @returns {Array<String|Number>|dc.heatMap}\n     */\n\n    _chart.rows = function (rows) {\n        if (!arguments.length) {\n            return _rows;\n        }\n        _rows = rows;\n        return _chart;\n    };\n\n    /**\n     #### .rowOrdering([orderFunction])\n     Get or set an accessor to order the rows.  Default is d3.ascending.\n     */\n    _chart.rowOrdering = function (_) {\n        if (!arguments.length) {\n            return _rowOrdering;\n        }\n        _rowOrdering = _;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the key accessor.\n     * @method cols\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Array<String|Number>} [cols]\n     * @returns {Array<String|Number>|dc.heatMap}\n     */\n    _chart.cols = function (cols) {\n        if (!arguments.length) {\n            return _cols;\n        }\n        _cols = cols;\n        return _chart;\n    };\n\n    /**\n     #### .colOrdering([orderFunction])\n     Get or set an accessor to order the cols.  Default is ascending.\n     */\n    _chart.colOrdering = function (_) {\n        if (!arguments.length) {\n            return _colOrdering;\n        }\n        _colOrdering = _;\n        return _chart;\n    };\n\n    _chart._doRender = function () {\n        _chart.resetSvg();\n\n        _chartBody = _chart.svg()\n            .append('g')\n            .attr('class', 'heatmap')\n            .attr('transform', 'translate(' + _chart.margins().left + ',' + _chart.margins().top + ')');\n\n        return _chart._doRedraw();\n    };\n\n    _chart._doRedraw = function () {\n        var data = _chart.data(),\n            rows = _chart.rows() || data.map(_chart.valueAccessor()),\n            cols = _chart.cols() || data.map(_chart.keyAccessor());\n        if (_rowOrdering) {\n            rows = rows.sort(_rowOrdering);\n        }\n        if (_colOrdering) {\n            cols = cols.sort(_colOrdering);\n        }\n        rows = _rowScale.domain(rows);\n        cols = _colScale.domain(cols);\n\n        var rowCount = rows.domain().length,\n            colCount = cols.domain().length,\n            boxWidth = Math.floor(_chart.effectiveWidth() / colCount),\n            boxHeight = Math.floor(_chart.effectiveHeight() / rowCount);\n\n        cols.rangeRound([0, _chart.effectiveWidth()]);\n        rows.rangeRound([_chart.effectiveHeight(), 0]);\n\n        var boxes = _chartBody.selectAll('g.box-group').data(_chart.data(), function (d, i) {\n            return _chart.keyAccessor()(d, i) + '\\0' + _chart.valueAccessor()(d, i);\n        });\n\n        boxes.exit().remove();\n\n        var gEnter = boxes.enter().append('g')\n            .attr('class', 'box-group');\n\n        gEnter.append('rect')\n            .attr('class', 'heat-box')\n            .attr('fill', 'white')\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n            .on('click', _chart.boxOnClick());\n\n        if (_chart.renderTitle()) {\n            gEnter.append('title');\n            boxes.select('title').text(_chart.title());\n        }\n\n        boxes = gEnter.merge(boxes);\n\n        dc.transition(boxes.select('rect'), _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('x', function (d, i) { return cols(_chart.keyAccessor()(d, i)); })\n            .attr('y', function (d, i) { return rows(_chart.valueAccessor()(d, i)); })\n            .attr('rx', _xBorderRadius)\n            .attr('ry', _yBorderRadius)\n            .attr('fill', _chart.getColor)\n            .attr('width', boxWidth)\n            .attr('height', boxHeight);\n\n        var gCols = _chartBody.select('g.cols');\n        if (gCols.empty()) {\n            gCols = _chartBody.append('g').attr('class', 'cols axis');\n        }\n        var gColsText = gCols.selectAll('text').data(cols.domain());\n\n        gColsText.exit().remove();\n\n        gColsText = gColsText\n            .enter()\n                .append('text')\n                .attr('x', function (d) {\n                    return cols(d) + boxWidth / 2;\n                })\n                .style('text-anchor', 'middle')\n                .attr('y', _chart.effectiveHeight())\n                .attr('dy', 12)\n                .on('click', _chart.xAxisOnClick())\n                .text(_chart.colsLabel())\n            .merge(gColsText);\n\n        dc.transition(gColsText, _chart.transitionDuration(), _chart.transitionDelay())\n               .text(_chart.colsLabel())\n               .attr('x', function (d) { return cols(d) + boxWidth / 2; })\n               .attr('y', _chart.effectiveHeight());\n\n        var gRows = _chartBody.select('g.rows');\n        if (gRows.empty()) {\n            gRows = _chartBody.append('g').attr('class', 'rows axis');\n        }\n\n        var gRowsText = gRows.selectAll('text').data(rows.domain());\n\n        gRowsText.exit().remove();\n\n        gRowsText = gRowsText\n            .enter()\n            .append('text')\n                .style('text-anchor', 'end')\n                .attr('x', 0)\n                .attr('dx', -2)\n                .attr('y', function (d) { return rows(d) + boxHeight / 2; })\n                .attr('dy', 6)\n                .on('click', _chart.yAxisOnClick())\n                .text(_chart.rowsLabel())\n            .merge(gRowsText);\n\n        dc.transition(gRowsText, _chart.transitionDuration(), _chart.transitionDelay())\n              .text(_chart.rowsLabel())\n              .attr('y', function (d) { return rows(d) + boxHeight / 2; });\n\n        if (_chart.hasFilter()) {\n            _chart.selectAll('g.box-group').each(function (d) {\n                if (_chart.isSelectedNode(d)) {\n                    _chart.highlightSelected(this);\n                } else {\n                    _chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            _chart.selectAll('g.box-group').each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when an individual cell is clicked in the heatmap.\n     * By default, filtering of the cell will be toggled.\n     * @method boxOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @example\n     * // default box on click handler\n     * chart.boxOnClick(function (d) {\n     *     var filter = d.key;\n     *     dc.events.trigger(function () {\n     *         _chart.filter(filter);\n     *         _chart.redrawGroup();\n     *     });\n     * });\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.boxOnClick = function (handler) {\n        if (!arguments.length) {\n            return _boxOnClick;\n        }\n        _boxOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when a column tick is clicked in the x axis.\n     * By default, if any cells in the column are unselected, the whole column will be selected,\n     * otherwise the whole column will be unselected.\n     * @method xAxisOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.xAxisOnClick = function (handler) {\n        if (!arguments.length) {\n            return _xAxisOnClick;\n        }\n        _xAxisOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the handler that fires when a row tick is clicked in the y axis.\n     * By default, if any cells in the row are unselected, the whole row will be selected,\n     * otherwise the whole row will be unselected.\n     * @method yAxisOnClick\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Function} [handler]\n     * @returns {Function|dc.heatMap}\n     */\n    _chart.yAxisOnClick = function (handler) {\n        if (!arguments.length) {\n            return _yAxisOnClick;\n        }\n        _yAxisOnClick = handler;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the X border radius.  Set to 0 to get full rectangles.\n     * @method xBorderRadius\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Number} [xBorderRadius=6.75]\n     * @returns {Number|dc.heatMap}\n     */\n    _chart.xBorderRadius = function (xBorderRadius) {\n        if (!arguments.length) {\n            return _xBorderRadius;\n        }\n        _xBorderRadius = xBorderRadius;\n        return _chart;\n    };\n\n    /**\n     * Gets or sets the Y border radius.  Set to 0 to get full rectangles.\n     * @method yBorderRadius\n     * @memberof dc.heatMap\n     * @instance\n     * @param  {Number} [yBorderRadius=6.75]\n     * @returns {Number|dc.heatMap}\n     */\n    _chart.yBorderRadius = function (yBorderRadius) {\n        if (!arguments.length) {\n            return _yBorderRadius;\n        }\n        _yBorderRadius = yBorderRadius;\n        return _chart;\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(d.key);\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n// https://github.com/d3/d3-plugins/blob/master/box/box.js\n(function () {\n\n    // Inspired by http://informationandvisualization.de/blog/box-plot\n    d3.box = function () {\n        var width = 1,\n            height = 1,\n            duration = 0,\n            delay = 0,\n            domain = null,\n            value = Number,\n            whiskers = boxWhiskers,\n            quartiles = boxQuartiles,\n            tickFormat = null;\n\n        // For each small multiple…\n        function box (g) {\n            g.each(function (d, i) {\n                d = d.map(value).sort(d3.ascending);\n                var g = d3.select(this),\n                    n = d.length,\n                    min = d[0],\n                    max = d[n - 1];\n\n                // Compute quartiles. Must return exactly 3 elements.\n                var quartileData = d.quartiles = quartiles(d);\n\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                var whiskerIndices = whiskers && whiskers.call(this, d, i),\n                    whiskerData = whiskerIndices && whiskerIndices.map(function (i) { return d[i]; });\n\n                // Compute outliers. If no whiskers are specified, all data are 'outliers'.\n                // We compute the outliers as indices, so that we can join across transitions!\n                var outlierIndices = whiskerIndices ?\n                    d3.range(0, whiskerIndices[0]).concat(d3.range(whiskerIndices[1] + 1, n)) : d3.range(n);\n\n                // Compute the new x-scale.\n                var x1 = d3.scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]);\n\n                // Retrieve the old x-scale, if this is an update.\n                var x0 = this.__chart__ || d3.scaleLinear()\n                    .domain([0, Infinity])\n                    .range(x1.range());\n\n                // Stash the new scale.\n                this.__chart__ = x1;\n\n                // Note: the box, median, and box tick elements are fixed in number,\n                // so we only have to handle enter and update. In contrast, the outliers\n                // and other elements are variable, so we need to exit them! Variable\n                // elements also fade in and out.\n\n                // Update center line: the vertical line spanning the whiskers.\n                var center = g.selectAll('line.center')\n                    .data(whiskerData ? [whiskerData] : []);\n\n                center.enter().insert('line', 'rect')\n                    .attr('class', 'center')\n                    .attr('x1', width / 2)\n                    .attr('y1', function (d) { return x0(d[0]); })\n                    .attr('x2', width / 2)\n                    .attr('y2', function (d) { return x0(d[1]); })\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); });\n\n                center.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1)\n                    .attr('x1', width / 2)\n                    .attr('x2', width / 2)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); });\n\n                center.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .style('opacity', 1e-6)\n                    .attr('y1', function (d) { return x1(d[0]); })\n                    .attr('y2', function (d) { return x1(d[1]); })\n                    .remove();\n\n                // Update innerquartile box.\n                var box = g.selectAll('rect.box')\n                    .data([quartileData]);\n\n                box.enter().append('rect')\n                    .attr('class', 'box')\n                    .attr('x', 0)\n                    .attr('y', function (d) { return x0(d[2]); })\n                    .attr('width', width)\n                    .attr('height', function (d) { return x0(d[0]) - x0(d[2]); })\n                  .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', function (d) { return x1(d[2]); })\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\n\n                box.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('width', width)\n                    .attr('y', function (d) { return x1(d[2]); })\n                    .attr('height', function (d) { return x1(d[0]) - x1(d[2]); });\n\n                // Update median line.\n                var medianLine = g.selectAll('line.median')\n                    .data([quartileData[1]]);\n\n                medianLine.enter().append('line')\n                    .attr('class', 'median')\n                    .attr('x1', 0)\n                    .attr('y1', x0)\n                    .attr('x2', width)\n                    .attr('y2', x0)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1);\n\n                medianLine.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('x1', 0)\n                    .attr('x2', width)\n                    .attr('y1', x1)\n                    .attr('y2', x1);\n\n                // Update whiskers.\n                var whisker = g.selectAll('line.whisker')\n                    .data(whiskerData || []);\n\n                whisker.enter().insert('line', 'circle, text')\n                    .attr('class', 'whisker')\n                    .attr('x1', 0)\n                    .attr('y1', x0)\n                    .attr('x2', width)\n                    .attr('y2', x0)\n                    .style('opacity', 1e-6)\n                  .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1);\n\n                whisker.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('x1', 0)\n                    .attr('x2', width)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1);\n\n                whisker.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y1', x1)\n                    .attr('y2', x1)\n                    .style('opacity', 1e-6)\n                    .remove();\n\n                // Update outliers.\n                var outlier = g.selectAll('circle.outlier')\n                    .data(outlierIndices, Number);\n\n                outlier.enter().insert('circle', 'text')\n                    .attr('class', 'outlier')\n                    .attr('r', 5)\n                    .attr('cx', width / 2)\n                    .attr('cy', function (i) { return x0(d[i]); })\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cy', function (i) { return x1(d[i]); })\n                    .style('opacity', 1);\n\n                outlier.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cx', width / 2)\n                    .attr('cy', function (i) { return x1(d[i]); })\n                    .style('opacity', 1);\n\n                outlier.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cy', function (i) { return x1(d[i]); })\n                    .style('opacity', 1e-6)\n                    .remove();\n\n                // Compute the tick format.\n                var format = tickFormat || x1.tickFormat(8);\n\n                // Update box ticks.\n                var boxTick = g.selectAll('text.box')\n                    .data(quartileData);\n\n                boxTick.enter().append('text')\n                    .attr('class', 'box')\n                    .attr('dy', '.3em')\n                    .attr('dx', function (d, i) { return i & 1 ? 6 : -6; })\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\n                    .attr('y', x0)\n                    .attr('text-anchor', function (d, i) { return i & 1 ? 'start' : 'end'; })\n                    .text(format)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1);\n\n                boxTick.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .text(format)\n                    .attr('x', function (d, i) { return i & 1 ? width : 0; })\n                    .attr('y', x1);\n\n                // Update whisker ticks. These are handled separately from the box\n                // ticks because they may or may not exist, and we want don't want\n                // to join box ticks pre-transition with whisker ticks post-.\n                var whiskerTick = g.selectAll('text.whisker')\n                    .data(whiskerData || []);\n\n                whiskerTick.enter().append('text')\n                    .attr('class', 'whisker')\n                    .attr('dy', '.3em')\n                    .attr('dx', 6)\n                    .attr('x', width)\n                    .attr('y', x0)\n                    .text(format)\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1)\n                    .style('opacity', 1);\n\n                whiskerTick.transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .text(format)\n                    .attr('x', width)\n                    .attr('y', x1)\n                    .style('opacity', 1);\n\n                whiskerTick.exit().transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('y', x1)\n                    .style('opacity', 1e-6)\n                    .remove();\n            });\n            d3.timerFlush();\n        }\n\n        box.width = function (x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = x;\n            return box;\n        };\n\n        box.height = function (x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = x;\n            return box;\n        };\n\n        box.tickFormat = function (x) {\n            if (!arguments.length) {\n                return tickFormat;\n            }\n            tickFormat = x;\n            return box;\n        };\n\n        box.duration = function (x) {\n            if (!arguments.length) {\n                return duration;\n            }\n            duration = x;\n            return box;\n        };\n\n        box.domain = function (x) {\n            if (!arguments.length) {\n                return domain;\n            }\n            domain = x === null ? x :  typeof x === 'function' ? x : dc.utils.constant(x);\n            return box;\n        };\n\n        box.value = function (x) {\n            if (!arguments.length) {\n                return value;\n            }\n            value = x;\n            return box;\n        };\n\n        box.whiskers = function (x) {\n            if (!arguments.length) {\n                return whiskers;\n            }\n            whiskers = x;\n            return box;\n        };\n\n        box.quartiles = function (x) {\n            if (!arguments.length) {\n                return quartiles;\n            }\n            quartiles = x;\n            return box;\n        };\n\n        return box;\n    };\n\n    function boxWhiskers (d) {\n        return [0, d.length - 1];\n    }\n\n    function boxQuartiles (d) {\n        return [\n            d3.quantile(d, 0.25),\n            d3.quantile(d, 0.5),\n            d3.quantile(d, 0.75)\n        ];\n    }\n\n})();\n\n\n/**\n * A box plot is a chart that depicts numerical data via their quartile ranges.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/box-plot-time.html Box plot time example}\n * - {@link http://dc-js.github.io/dc.js/examples/box-plot.html Box plot example}\n * @class boxPlot\n * @memberof dc\n * @mixes dc.coordinateGridMixin\n * @example\n * // create a box plot under #chart-container1 element using the default global chart group\n * var boxPlot1 = dc.boxPlot('#chart-container1');\n * // create a box plot under #chart-container2 element using chart group A\n * var boxPlot2 = dc.boxPlot('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.boxPlot}\n */\ndc.boxPlot = function (parent, chartGroup) {\n    var _chart = dc.coordinateGridMixin({});\n\n    // Returns a function to compute the interquartile range.\n    function DEFAULT_WHISKERS_IQR (k) {\n        return function (d) {\n            var q1 = d.quartiles[0],\n                q3 = d.quartiles[2],\n                iqr = (q3 - q1) * k,\n                i = -1,\n                j = d.length;\n            do { ++i; } while (d[i] < q1 - iqr);\n            do { --j; } while (d[j] > q3 + iqr);\n            return [i, j];\n        };\n    }\n\n    var _whiskerIqrFactor = 1.5;\n    var _whiskersIqr = DEFAULT_WHISKERS_IQR;\n    var _whiskers = _whiskersIqr(_whiskerIqrFactor);\n\n    var _box = d3.box();\n    var _tickFormat = null;\n\n    var _boxWidth = function (innerChartWidth, xUnits) {\n        if (_chart.isOrdinal()) {\n            return _chart.x().bandwidth();\n        } else {\n            return innerChartWidth / (1 + _chart.boxPadding()) / xUnits;\n        }\n    };\n\n    // default padding to handle min/max whisker text\n    _chart.yAxisPadding(12);\n\n    // default to ordinal\n    _chart.x(d3.scaleBand());\n    _chart.xUnits(dc.units.ordinal);\n\n    // valueAccessor should return an array of values that can be coerced into numbers\n    // or if data is overloaded for a static array of arrays, it should be `Number`.\n    // Empty arrays are not included.\n    _chart.data(function (group) {\n        return group.all().map(function (d) {\n            d.map = function (accessor) { return accessor.call(d, d); };\n            return d;\n        }).filter(function (d) {\n            var values = _chart.valueAccessor()(d);\n            return values.length !== 0;\n        });\n    });\n\n    /**\n     * Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.\n     * See the {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\n     * for a visual description of how the padding is applied.\n     * @method boxPadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3.scaleBand}\n     * @param {Number} [padding=0.8]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.boxPadding = _chart._rangeBandPadding;\n    _chart.boxPadding(0.8);\n\n    /**\n     * Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts\n     * or on charts with a custom {@link dc.boxPlot#boxWidth .boxWidth}. Will pad the width by\n     * `padding * barWidth` on each side of the chart.\n     * @method outerPadding\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number} [padding=0.5]\n     * @returns {Number|dc.boxPlot}\n     */\n    _chart.outerPadding = _chart._outerRangeBandPadding;\n    _chart.outerPadding(0.5);\n\n    /**\n     * Get or set the numerical width of the boxplot box. The width may also be a function taking as\n     * parameters the chart width excluding the right and left margins, as well as the number of x\n     * units.\n     * @example\n     * // Using numerical parameter\n     * chart.boxWidth(10);\n     * // Using function\n     * chart.boxWidth((innerChartWidth, xUnits) { ... });\n     * @method boxWidth\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Number|Function} [boxWidth=0.5]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.boxWidth = function (boxWidth) {\n        if (!arguments.length) {\n            return _boxWidth;\n        }\n        _boxWidth = typeof boxWidth === 'function' ? boxWidth : dc.utils.constant(boxWidth);\n        return _chart;\n    };\n\n    var boxTransform = function (d, i) {\n        var xOffset = _chart.x()(_chart.keyAccessor()(d, i));\n        return 'translate(' + xOffset + ', 0)';\n    };\n\n    _chart._preprocessData = function () {\n        if (_chart.elasticX()) {\n            _chart.x().domain([]);\n        }\n    };\n\n    _chart.plotData = function () {\n        var _calculatedBoxWidth = _boxWidth(_chart.effectiveWidth(), _chart.xUnitCount());\n\n        _box.whiskers(_whiskers)\n            .width(_calculatedBoxWidth)\n            .height(_chart.effectiveHeight())\n            .value(_chart.valueAccessor())\n            .domain(_chart.y().domain())\n            .duration(_chart.transitionDuration())\n            .tickFormat(_tickFormat);\n\n        var boxesG = _chart.chartBodyG().selectAll('g.box').data(_chart.data(), _chart.keyAccessor());\n\n        var boxesGEnterUpdate = renderBoxes(boxesG);\n        updateBoxes(boxesGEnterUpdate);\n        removeBoxes(boxesG);\n\n        _chart.fadeDeselectedArea(_chart.filter());\n    };\n\n    function renderBoxes (boxesG) {\n        var boxesGEnter = boxesG.enter().append('g');\n\n        boxesGEnter\n            .attr('class', 'box')\n            .attr('transform', boxTransform)\n            .call(_box)\n            .on('click', function (d) {\n                _chart.filter(_chart.keyAccessor()(d));\n                _chart.redrawGroup();\n            });\n\n        return boxesGEnter.merge(boxesG);\n    }\n\n    function updateBoxes (boxesG) {\n        dc.transition(boxesG, _chart.transitionDuration(), _chart.transitionDelay())\n            .attr('transform', boxTransform)\n            .call(_box)\n            .each(function () {\n                d3.select(this).select('rect.box').attr('fill', _chart.getColor);\n            });\n    }\n\n    function removeBoxes (boxesG) {\n        boxesG.exit().remove().call(_box);\n    }\n\n    _chart.fadeDeselectedArea = function (brushSelection) {\n        if (_chart.hasFilter()) {\n            if (_chart.isOrdinal()) {\n                _chart.g().selectAll('g.box').each(function (d) {\n                    if (_chart.isSelectedNode(d)) {\n                        _chart.highlightSelected(this);\n                    } else {\n                        _chart.fadeDeselected(this);\n                    }\n                });\n            } else {\n                if (!(_chart.brushOn() || _chart.parentBrushOn())) {\n                    return;\n                }\n                var start = brushSelection[0];\n                var end = brushSelection[1];\n                var keyAccessor = _chart.keyAccessor();\n                _chart.g().selectAll('g.box').each(function (d) {\n                    var key = keyAccessor(d);\n                    if (key < start || key >= end) {\n                        _chart.fadeDeselected(this);\n                    } else {\n                        _chart.highlightSelected(this);\n                    }\n                });\n            }\n        } else {\n            _chart.g().selectAll('g.box').each(function () {\n                _chart.resetHighlight(this);\n            });\n        }\n    };\n\n    _chart.isSelectedNode = function (d) {\n        return _chart.hasFilter(_chart.keyAccessor()(d));\n    };\n\n    _chart.yAxisMin = function () {\n        var min = d3.min(_chart.data(), function (e) {\n            return d3.min(_chart.valueAccessor()(e));\n        });\n        return dc.utils.subtract(min, _chart.yAxisPadding());\n    };\n\n    _chart.yAxisMax = function () {\n        var max = d3.max(_chart.data(), function (e) {\n            return d3.max(_chart.valueAccessor()(e));\n        });\n        return dc.utils.add(max, _chart.yAxisPadding());\n    };\n\n    /**\n     * Set the numerical format of the boxplot median, whiskers and quartile labels. Defaults to\n     * integer formatting.\n     * @example\n     * // format ticks to 2 decimal places\n     * chart.tickFormat(d3.format('.2f'));\n     * @method tickFormat\n     * @memberof dc.boxPlot\n     * @instance\n     * @param {Function} [tickFormat]\n     * @returns {Number|Function|dc.boxPlot}\n     */\n    _chart.tickFormat = function (tickFormat) {\n        if (!arguments.length) {\n            return _tickFormat;\n        }\n        _tickFormat = tickFormat;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The select menu is a simple widget designed to filter a dimension by selecting an option from\n * an HTML `<select/>` menu. The menu can be optionally turned into a multiselect.\n * @class selectMenu\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a select menu under #select-container using the default global chart group\n * var select = dc.selectMenu('#select-container')\n *                .dimension(states)\n *                .group(stateGroup);\n * // the option text can be set via the title() function\n * // by default the option text is '`key`: `value`'\n * select.title(function (d){\n *     return 'STATE: ' + d.key;\n * })\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\n * Interaction with the widget will only trigger events and redraws within its group.\n * @returns {selectMenu}\n **/\ndc.selectMenu = function (parent, chartGroup) {\n    var SELECT_CSS_CLASS = 'dc-select-menu';\n    var OPTION_CSS_CLASS = 'dc-select-option';\n\n    var _chart = dc.baseMixin({});\n\n    var _select;\n    var _promptText = 'Select all';\n    var _multiple = false;\n    var _promptValue = null;\n    var _numberVisible = null;\n    var _order = function (a, b) {\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\n            -1 : 0;\n    };\n\n    var _filterDisplayed = function (d) {\n        return _chart.valueAccessor()(d) > 0;\n    };\n\n    _chart.data(function (group) {\n        return group.all().filter(_filterDisplayed);\n    });\n\n    _chart._doRender = function () {\n        _chart.select('select').remove();\n        _select = _chart.root().append('select')\n                        .classed(SELECT_CSS_CLASS, true);\n        _select.append('option').text(_promptText).attr('value', '');\n\n        _chart._doRedraw();\n        return _chart;\n    };\n    // Fixing IE 11 crash when redrawing the chart\n    // see here for list of IE user Agents :\n    // http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer\n    var ua = window.navigator.userAgent;\n    // test for IE 11 but not a lower version (which contains MSIE in UA)\n    if (ua.indexOf('Trident/') > 0 && ua.indexOf('MSIE') === -1) {\n        _chart.redraw = _chart.render;\n    }\n\n    _chart._doRedraw = function () {\n        setAttributes();\n        renderOptions();\n        // select the option(s) corresponding to current filter(s)\n        if (_chart.hasFilter() && _multiple) {\n            _select.selectAll('option')\n                .property('selected', function (d) {\n                    return typeof d !== 'undefined' && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0;\n                });\n        } else if (_chart.hasFilter()) {\n            _select.property('value', _chart.filter());\n        } else {\n            _select.property('value', '');\n        }\n        return _chart;\n    };\n\n    function renderOptions () {\n        var options = _select.selectAll('option.' + OPTION_CSS_CLASS)\n          .data(_chart.data(), function (d) { return _chart.keyAccessor()(d); });\n\n        options.exit().remove();\n\n        options.enter()\n              .append('option')\n              .classed(OPTION_CSS_CLASS, true)\n              .attr('value', function (d) { return _chart.keyAccessor()(d); })\n            .merge(options)\n              .text(_chart.title());\n\n        _select.selectAll('option.' + OPTION_CSS_CLASS).sort(_order);\n\n        _select.on('change', onChange);\n    }\n\n    function onChange (d, i) {\n        var values;\n        var target = d3.event.target;\n        if (target.selectedOptions) {\n            var selectedOptions = Array.prototype.slice.call(target.selectedOptions);\n            values = selectedOptions.map(function (d) {\n                return d.value;\n            });\n        } else { // IE and other browsers do not support selectedOptions\n            // adapted from this polyfill: https://gist.github.com/brettz9/4212217\n            var options = [].slice.call(d3.event.target.options);\n            values = options.filter(function (option) {\n                return option.selected;\n            }).map(function (option) {\n                return option.value;\n            });\n        }\n        // console.log(values);\n        // check if only prompt option is selected\n        if (values.length === 1 && values[0] === '') {\n            values = _promptValue || null;\n        } else if (!_multiple && values.length === 1) {\n            values = values[0];\n        }\n        _chart.onChange(values);\n    }\n\n    _chart.onChange = function (val) {\n        if (val && _multiple) {\n            _chart.replaceFilter([val]);\n        } else if (val) {\n            _chart.replaceFilter(val);\n        } else {\n            _chart.filterAll();\n        }\n        dc.events.trigger(function () {\n            _chart.redrawGroup();\n        });\n    };\n\n    function setAttributes () {\n        if (_multiple) {\n            _select.attr('multiple', true);\n        } else {\n            _select.attr('multiple', null);\n        }\n        if (_numberVisible !== null) {\n            _select.attr('size', _numberVisible);\n        } else {\n            _select.attr('size', null);\n        }\n    }\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * select menu. By default options are ordered by the group key in ascending\n     * order.\n     * @name order\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {Function} [order]\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     **/\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @name promptText\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {String} [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     **/\n    _chart.promptText = function (_) {\n        if (!arguments.length) {\n            return _promptText;\n        }\n        _promptText = _;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that filters option tags prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @name filterDisplayed\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {function} [filterDisplayed]\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     **/\n    _chart.filterDisplayed = function (filterDisplayed) {\n        if (!arguments.length) {\n            return _filterDisplayed;\n        }\n        _filterDisplayed = filterDisplayed;\n        return _chart;\n    };\n\n    /**\n     * Controls the type of select menu. Setting it to true converts the underlying\n     * HTML tag into a multiple select.\n     * @name multiple\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {boolean} [multiple=false]\n     * @example\n     * chart.multiple(true);\n     **/\n    _chart.multiple = function (multiple) {\n        if (!arguments.length) {\n            return _multiple;\n        }\n        _multiple = multiple;\n\n        return _chart;\n    };\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     * @name promptValue\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {?*} [promptValue=null]\n     **/\n    _chart.promptValue = function (promptValue) {\n        if (!arguments.length) {\n            return _promptValue;\n        }\n        _promptValue = promptValue;\n\n        return _chart;\n    };\n\n    /**\n     * Controls the number of items to show in the select menu, when `.multiple()` is true. This\n     * controls the [`size` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Attributes) of\n     * the `select` element. If `null` (the default), uses the browser's default height.\n     * @name numberItems\n     * @memberof dc.selectMenu\n     * @instance\n     * @param {?number} [numberVisible=null]\n     * @example\n     * chart.numberVisible(10);\n     **/\n    _chart.numberVisible = function (numberVisible) {\n        if (!arguments.length) {\n            return _numberVisible;\n        }\n        _numberVisible = numberVisible;\n\n        return _chart;\n    };\n\n    _chart.size = dc.logger.deprecate(_chart.numberVisible, 'selectMenu.size is ambiguous - use numberVisible instead');\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * Text Filter Widget\n *\n * The text filter widget is a simple widget designed to display an input field allowing to filter\n * data that matches the text typed.\n * As opposed to the other charts, this doesn't display any result and doesn't update its display,\n * it's just to input an filter other charts.\n *\n * @class textFilterWidget\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n *\n * var data = [{\"firstName\":\"John\",\"lastName\":\"Coltrane\"}{\"firstName\":\"Miles\",lastName:\"Davis\"}]\n * var ndx = crossfilter(data);\n * var dimension = ndx.dimension(function(d) {\n *     return d.lastName.toLowerCase() + ' ' + d.firstName.toLowerCase();\n * });\n *\n * dc.textFilterWidget('#search')\n *     .dimension(dimension);\n *     // you don't need the group() function\n *\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\n * specifying a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n * @returns {dc.textFilterWidget}\n **/\n\ndc.textFilterWidget = function (parent, chartGroup) {\n    var INPUT_CSS_CLASS = 'dc-text-filter-input';\n\n    var _chart = dc.baseMixin({});\n\n    var _normalize = function (s) {\n        return s.toLowerCase();\n    };\n\n    var _filterFunctionFactory = function (query) {\n        query = _normalize(query);\n        return function (d) {\n            return _normalize(d).indexOf(query) !== -1;\n        };\n    };\n\n    var _placeHolder = 'search';\n\n    _chart.group(function () {\n        throw 'the group function on textFilterWidget should never be called, please report the issue';\n    });\n\n    _chart._doRender = function () {\n        _chart.select('input').remove();\n\n        var _input = _chart.root().append('input')\n            .classed(INPUT_CSS_CLASS, true);\n\n        _input.on('input', function () {\n            _chart.dimension().filterFunction(_filterFunctionFactory(this.value));\n            dc.events.trigger(function () {\n                dc.redrawAll();\n            }, dc.constants.EVENT_DELAY);\n        });\n\n        _chart._doRedraw();\n\n        return _chart;\n    };\n\n    _chart._doRedraw = function () {\n        _chart.root().selectAll('input')\n            .attr('placeholder', _placeHolder);\n\n        return _chart;\n    };\n\n    /**\n     * This function will be called on values before calling the filter function.\n     * @name normalize\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * chart.normalize(function (s) {\n     *   return s.toLowerCase();\n     * });\n     * @param {function} [normalize]\n     * @returns {dc.textFilterWidget|function}\n     **/\n    _chart.normalize = function (normalize) {\n        if (!arguments.length) {\n            return _normalize;\n        }\n        _normalize = normalize;\n        return _chart;\n    };\n\n    /**\n     * Placeholder text in the search box.\n     * @name placeHolder\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * chart.placeHolder('type to filter');\n     * @param {function} [placeHolder='search']\n     * @returns {dc.textFilterWidget|string}\n     **/\n    _chart.placeHolder = function (placeHolder) {\n        if (!arguments.length) {\n            return _placeHolder;\n        }\n        _placeHolder = placeHolder;\n        return _chart;\n    };\n\n    /**\n     * This function will be called with the search text, it needs to return a function that will be used to\n     * filter the data. The default function checks presence of the search text.\n     * @name filterFunctionFactory\n     * @memberof dc.textFilterWidget\n     * @instance\n     * @example\n     * // This is the default\n     * function (query) {\n     *     query = _normalize(query);\n     *     return function (d) {\n     *         return _normalize(d).indexOf(query) !== -1;\n     *     };\n     * };\n     * @param {function} [filterFunctionFactory]\n     * @returns {dc.textFilterWidget|function}\n     **/\n    _chart.filterFunctionFactory = function (filterFunctionFactory) {\n        if (!arguments.length) {\n            return _filterFunctionFactory;\n        }\n        _filterFunctionFactory = filterFunctionFactory;\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n/**\n * The cboxMenu is a simple widget designed to filter a dimension by\n * selecting option(s) from a set of HTML `<input />` elements. The menu can be\n * made into a set of radio buttons (single select) or checkboxes (multiple).\n * @class cboxMenu\n * @memberof dc\n * @mixes dc.baseMixin\n * @example\n * // create a cboxMenu under #cbox-container using the default global chart group\n * var cbox = dc.cboxMenu('#cbox-container')\n *                .dimension(states)\n *                .group(stateGroup);\n * // the option text can be set via the title() function\n * // by default the option text is '`key`: `value`'\n * cbox.title(function (d){\n *     return 'STATE: ' + d.key;\n * })\n * @param {String|node|d3.selection|dc.compositeChart} parent - Any valid\n * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\n * Interaction with the widget will only trigger events and redraws within its group.\n * @returns {cboxMenu}\n **/\ndc.cboxMenu = function (parent, chartGroup) {\n    var GROUP_CSS_CLASS = 'dc-cbox-group';\n    var ITEM_CSS_CLASS = 'dc-cbox-item';\n\n    var _chart = dc.baseMixin({});\n\n    var _cbox;\n    var _promptText = 'Select all';\n    var _multiple = false;\n    var _inputType = 'radio';\n    var _promptValue = null;\n    // generate a random number to use as an ID\n    var _randVal = Math.floor(Math.random() * (100000)) + 1;\n    var _order = function (a, b) {\n        return _chart.keyAccessor()(a) > _chart.keyAccessor()(b) ?\n             1 : _chart.keyAccessor()(b) > _chart.keyAccessor()(a) ?\n            -1 : 0;\n    };\n\n    var _filterDisplayed = function (d) {\n        return _chart.valueAccessor()(d) > 0;\n    };\n\n    _chart.data(function (group) {\n        return group.all().filter(_filterDisplayed);\n    });\n\n    _chart._doRender = function () {\n        return _chart._doRedraw();\n    };\n    /*\n    // IS THIS NEEDED?\n    // Fixing IE 11 crash when redrawing the chart\n    // see here for list of IE user Agents :\n    // http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer\n    var ua = window.navigator.userAgent;\n    // test for IE 11 but not a lower version (which contains MSIE in UA)\n    if (ua.indexOf('Trident/') > 0 && ua.indexOf('MSIE') === -1) {\n        _chart.redraw = _chart.render;\n    }\n    */\n    _chart._doRedraw = function () {\n        _chart.select('ul').remove();\n        _cbox = _chart.root()\n            .append('ul')\n            .classed(GROUP_CSS_CLASS, true);\n        renderOptions();\n\n        if (_chart.hasFilter() && _multiple) {\n            _cbox.selectAll('input')\n                .property('checked', function (d) {\n                    // adding `false` avoids failing test cases in phantomjs\n                    return d && _chart.filters().indexOf(String(_chart.keyAccessor()(d))) >= 0 || false;\n                });\n        } else if (_chart.hasFilter()) {\n            _cbox.selectAll('input')\n                .property('checked', function (d) {\n                    if (!d) {\n                        return false;\n                    }\n                    return _chart.keyAccessor()(d) === _chart.filter();\n                });\n        }\n        return _chart;\n    };\n\n    function renderOptions () {\n        var options = _cbox\n        .selectAll('li.' + ITEM_CSS_CLASS)\n            .data(_chart.data(), function (d) {\n            return _chart.keyAccessor()(d);\n        });\n\n        options.exit().remove();\n\n        options = options.enter()\n                .append('li')\n                .classed(ITEM_CSS_CLASS, true)\n            .merge(options);\n\n        options\n            .append('input')\n            .attr('type', _inputType)\n            .attr('value', function (d) { return _chart.keyAccessor()(d); })\n            .attr('name', 'domain_' + _randVal)\n            .attr('id', function (d, i) {\n                return 'input_' + _randVal + '_' + i;\n            });\n        options\n            .append('label')\n            .attr('for', function (d, i) {\n                return 'input_' + _randVal + '_' + i;\n            })\n            .text(_chart.title());\n\n        // 'all' option\n        if (_multiple) {\n            _cbox\n            .append('li')\n            .append('input')\n            .attr('type', 'reset')\n            .text(_promptText)\n            .on('click', onChange);\n        } else {\n            var li = _cbox.append('li');\n            li.append('input')\n                .attr('type', _inputType)\n                .attr('value', _promptValue)\n                .attr('name', 'domain_' + _randVal)\n                .attr('id', function (d, i) {\n                    return 'input_' + _randVal + '_all';\n                })\n                .property('checked', true);\n            li.append('label')\n                .attr('for', function (d, i) {\n                    return 'input_' + _randVal + '_all';\n                })\n                .text(_promptText);\n        }\n\n        _cbox\n            .selectAll('li.' + ITEM_CSS_CLASS)\n            .sort(_order);\n\n        _cbox.on('change', onChange);\n        return options;\n    }\n\n    function onChange (d, i) {\n        var values,\n            target = d3.select(d3.event.target),\n            options;\n\n        if (!target.datum()) {\n            values = _promptValue || null;\n        } else {\n            options = d3.select(this).selectAll('input')\n            .filter(function (o) {\n                if (o) {\n                    return this.checked;\n                }\n            });\n            values = options.nodes().map(function (option) {\n                return option.value;\n            });\n            // check if only prompt option is selected\n            if (!_multiple && values.length === 1) {\n                values = values[0];\n            }\n        }\n        _chart.onChange(values);\n    }\n\n    _chart.onChange = function (val) {\n        if (val && _multiple) {\n            _chart.replaceFilter([val]);\n        } else if (val) {\n            _chart.replaceFilter(val);\n        } else {\n            _chart.filterAll();\n        }\n        dc.events.trigger(function () {\n            _chart.redrawGroup();\n        });\n    };\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * cbox menu. By default options are ordered by the group key in ascending\n     * order.\n     * @name order\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {Function} [order]\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     **/\n    _chart.order = function (order) {\n        if (!arguments.length) {\n            return _order;\n        }\n        _order = order;\n        return _chart;\n    };\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @name promptText\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {String} [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     **/\n    _chart.promptText = function (_) {\n        if (!arguments.length) {\n            return _promptText;\n        }\n        _promptText = _;\n        return _chart;\n    };\n\n    /**\n     * Get or set the function that filters options prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @name filterDisplayed\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {function} [filterDisplayed]\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     **/\n    _chart.filterDisplayed = function (filterDisplayed) {\n        if (!arguments.length) {\n            return _filterDisplayed;\n        }\n        _filterDisplayed = filterDisplayed;\n        return _chart;\n    };\n\n    /**\n     * Controls the type of input element. Setting it to true converts\n     * the HTML `input` tags from radio buttons to checkboxes.\n     * @name multiple\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {boolean} [multiple=false]\n     * @example\n     * chart.multiple(true);\n     **/\n    _chart.multiple = function (multiple) {\n        if (!arguments.length) {\n            return _multiple;\n        }\n        _multiple = multiple;\n        if (_multiple) {\n            _inputType = 'checkbox';\n        } else {\n            _inputType = 'radio';\n        }\n        return _chart;\n    };\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     * @name promptValue\n     * @memberof dc.cboxMenu\n     * @instance\n     * @param {?*} [promptValue=null]\n     **/\n    _chart.promptValue = function (promptValue) {\n        if (!arguments.length) {\n            return _promptValue;\n        }\n        _promptValue = promptValue;\n\n        return _chart;\n    };\n\n    return _chart.anchor(parent, chartGroup);\n};\n\n// Renamed functions\n\ndc.abstractBubbleChart = dc.bubbleMixin;\ndc.baseChart = dc.baseMixin;\ndc.capped = dc.capMixin;\ndc.colorChart = dc.colorMixin;\ndc.coordinateGridChart = dc.coordinateGridMixin;\ndc.marginable = dc.marginMixin;\ndc.stackableChart = dc.stackMixin;\n\n// Expose d3 and crossfilter, so that clients in browserify\n// case can obtain them if they need them.\ndc.d3 = d3;\ndc.crossfilter = crossfilter;\n\nreturn dc;}\n    if(typeof define === \"function\" && define.amd) {\n        define([\"d3\", \"crossfilter2\"], _dc);\n    } else if(typeof module === \"object\" && module.exports) {\n        var _d3 = require('d3');\n        var _crossfilter = require('crossfilter2');\n        // When using npm + browserify, 'crossfilter' is a function,\n        // since package.json specifies index.js as main function, and it\n        // does special handling. When using bower + browserify,\n        // there's no main in bower.json (in fact, there's no bower.json),\n        // so we need to fix it.\n        if (typeof _crossfilter !== \"function\") {\n            _crossfilter = _crossfilter.crossfilter;\n        }\n        module.exports = _dc(_d3, _crossfilter);\n    } else {\n        this.dc = _dc(d3, crossfilter);\n    }\n}\n)();\n\n//# sourceMappingURL=dc.js.map","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    object = undefined;\n    length = 1;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nmodule.exports = result;\n","'use strict';\n\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\n\nmodule.exports = {\n  reduceIncrement: crossfilter_reduceIncrement,\n  reduceDecrement: crossfilter_reduceDecrement,\n  reduceAdd: crossfilter_reduceAdd,\n  reduceSubtract: crossfilter_reduceSubtract\n};\n","var crossfilter_identity = require('./identity');\nvar xFilterInsertionsort = require('./insertionsort');\n\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see NOTICE and AUTHORS for details.\n\nfunction quicksort_by(f) {\n  var insertionsort = xFilterInsertionsort.by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          /* eslint no-constant-condition: 0 */\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      (function () { // isolate scope\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n\n      (function () { // isolate scope\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            /* eslint no-constant-condition: 0 */\n            while (true) {\n              greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\n\nmodule.exports = quicksort_by(crossfilter_identity);\nmodule.exports.by = quicksort_by;\n","'use strict';\n\nfunction permute(array, index, deep) {\n  for (var i = 0, n = index.length, copy = deep ? JSON.parse(JSON.stringify(array)) : new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\n\nmodule.exports = permute;\n","'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\n\nmodule.exports = bisect_by(crossfilter_identity);\nmodule.exports.by = bisect_by; // assign the raw function to the export as well\n","'use strict';\n\nvar crossfilter_identity = require('./identity');\nvar xFilterHeap = require('./heap');\n\nfunction heapselect_by(f) {\n  var heap = xFilterHeap.by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\n\nmodule.exports = heapselect_by(crossfilter_identity);\nmodule.exports.by = heapselect_by; // assign the raw function to the export as well\n","'use strict';\n\nfunction crossfilter_zero() {\n  return 0;\n}\n\nmodule.exports = crossfilter_zero;\n","'use strict';\n\nfunction crossfilter_null() {\n  return null;\n}\n\nmodule.exports = crossfilter_null;\n","'use strict';\n\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\n\nmodule.exports = {\n  filterExact: crossfilter_filterExact,\n  filterRange: crossfilter_filterRange,\n  filterAll: crossfilter_filterAll\n};\n","if (typeof Uint8Array !== \"undefined\") {\n  var crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  var crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  var crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  var crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  var crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\n\n// An arbitrarily-wide array of bitmasks\nfunction crossfilter_bitarray(n) {\n  this.length = n;\n  this.subarrays = 1;\n  this.width = 8;\n  this.masks = {\n    0: 0\n  }\n\n  this[0] = crossfilter_array8(n);\n}\n\ncrossfilter_bitarray.prototype.lengthen = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i] = crossfilter_arrayLengthen(this[i], n);\n  }\n  this.length = n;\n};\n\n// Reserve a new bit index in the array, returns {offset, one}\ncrossfilter_bitarray.prototype.add = function() {\n  var m, w, one, i, len;\n\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    m = this.masks[i];\n    w = this.width - (32 * i);\n    one = ~m & -~m;\n\n    if (w >= 32 && !one) {\n      continue;\n    }\n\n    if (w < 32 && (one & (1 << w))) {\n      // widen this subarray\n      this[i] = crossfilter_arrayWiden(this[i], w <<= 1);\n      this.width = 32 * i + w;\n    }\n\n    this.masks[i] |= one;\n\n    return {\n      offset: i,\n      one: one\n    };\n  }\n\n  // add a new subarray\n  this[this.subarrays] = crossfilter_array8(this.length);\n  this.masks[this.subarrays] = 1;\n  this.width += 8;\n  return {\n    offset: this.subarrays++,\n    one: 1\n  };\n};\n\n// Copy record from index src to index dest\ncrossfilter_bitarray.prototype.copy = function(dest, src) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i][dest] = this[i][src];\n  }\n};\n\n// Truncate the array to the given length\ncrossfilter_bitarray.prototype.truncate = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    for (var j = this.length - 1; j >= n; j--) {\n      this[i][j] = 0;\n    }\n    this[i].length = n;\n  }\n  this.length = n;\n};\n\n// Checks that all bits for the given index are 0\ncrossfilter_bitarray.prototype.zero = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given index are 0 except for possibly one\ncrossfilter_bitarray.prototype.zeroExcept = function(n, offset, zero) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (i === offset ? this[i][n] & zero : this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given indez are 0 except for the specified mask.\n// The mask should be an array of the same size as the filter subarrays width.\ncrossfilter_bitarray.prototype.zeroExceptMask = function(n, mask) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] & mask[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks that only the specified bit is set for the given index\ncrossfilter_bitarray.prototype.only = function(n, offset, one) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] != (i === offset ? one : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that only the specified bit is set for the given index except for possibly one other\ncrossfilter_bitarray.prototype.onlyExcept = function(n, offset, zero, onlyOffset, onlyOne) {\n  var mask;\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    mask = this[i][n];\n    if (i === offset)\n      mask &= zero;\n    if (mask != (i === onlyOffset ? onlyOne : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = {\n  array8: crossfilter_arrayUntyped,\n  array16: crossfilter_arrayUntyped,\n  array32: crossfilter_arrayUntyped,\n  arrayLengthen: crossfilter_arrayLengthenUntyped,\n  arrayWiden: crossfilter_arrayWidenUntyped,\n  bitarray: crossfilter_bitarray\n};\n","'use strict';\n\nvar xfilterArray = require('./array');\nvar xfilterFilter = require('./filter');\nvar crossfilter_identity = require('./identity');\nvar crossfilter_null = require('./null');\nvar crossfilter_zero = require('./zero');\nvar xfilterHeapselect = require('./heapselect');\nvar xfilterHeap = require('./heap');\nvar bisect = require('./bisect');\nvar insertionsort = require('./insertionsort');\nvar permute = require('./permute');\nvar quicksort = require('./quicksort');\nvar xfilterReduce = require('./reduce');\nvar packageJson = require('./../package.json'); // require own package.json for the version field\nvar result = require('lodash.result');\n\n// constants\nvar REMOVED_INDEX = -1;\n\n// expose API exports\nexports.crossfilter = crossfilter;\nexports.crossfilter.heap = xfilterHeap;\nexports.crossfilter.heapselect = xfilterHeapselect;\nexports.crossfilter.bisect = bisect;\nexports.crossfilter.insertionsort = insertionsort;\nexports.crossfilter.permute = permute;\nexports.crossfilter.quicksort = quicksort;\nexports.crossfilter.version = packageJson.version; // please note use of \"package-json-versionify\" transform\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size,\n    all: all,\n    allFiltered: allFiltered,\n    onChange: onChange,\n    isElementFiltered: isElementFiltered\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      filters, // 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = [], // when data is removed\n      callbacks = [];\n\n  filters = new xfilterArray.bitarray(0);\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters.lengthen(n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n      triggerOnChange('dataAdded');\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters, or if a predicate function is passed,\n  // removes all records matching the predicate (ignoring filters).\n  function removeData(predicate) {\n    var // Mapping from old record indexes to new indexes (after records removed)\n        newIndex = crossfilter_index(n, n),\n        removed = [],\n        usePred = typeof predicate === 'function',\n        shouldRemove = function (i) {\n          return usePred ? predicate(data[i], i) : filters.zero(i)\n        };\n\n    for (var index1 = 0, index2 = 0; index1 < n; ++index1) {\n      if ( shouldRemove(index1) ) {\n        removed.push(index1);\n        newIndex[index1] = REMOVED_INDEX;\n      } else {\n        newIndex[index1] = index2++;\n      }\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(-1, -1, [], removed, true); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var index3 = 0, index4 = 0; index3 < n; ++index3) {\n      if ( newIndex[index3] !== REMOVED_INDEX ) {\n        if (index3 !== index4) filters.copy(index4, index3), data[index4] = data[index3];\n        ++index4;\n      }\n    }\n\n    data.length = n = index4;\n    filters.truncate(index4);\n    triggerOnChange('dataRemoved');\n  }\n\n  function maskForDimensions(dimensions) {\n    var n,\n        d,\n        len,\n        id,\n        mask = Array(filters.subarrays);\n    for (n = 0; n < filters.subarrays; n++) { mask[n] = ~0; }\n    for (d = 0, len = dimensions.length; d < len; d++) {\n      // The top bits of the ID are the subarray offset and the lower bits are the bit\n      // offset of the \"one\" mask.\n      id = dimensions[d].id();\n      mask[id >> 7] &= ~(0x1 << (id & 0x3f));\n    }\n    return mask;\n  }\n\n  // Return true if the data element at index i is filtered IN.\n  // Optionally, ignore the filters of any dimensions in the ignore_dimensions list.\n  function isElementFiltered(i, ignore_dimensions) {\n    var mask = maskForDimensions(ignore_dimensions || []);\n    return filters.zeroExceptMask(i,mask);\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value, iterable) {\n\n    if (typeof value === 'string') {\n      var accessorPath = value;\n      value = function(d) { return result(d, accessorPath); };\n    }\n\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      currentFilter: currentFilter,\n      hasCurrentFilter: hasCurrentFilter,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose, // for backwards-compatibility\n      accessor: value,\n      id: function() { return id; }\n    };\n\n    var one, // lowest unset bit as mask, e.g., 00001000\n        zero, // inverted one, e.g., 11110111\n        offset, // offset into the filters arrays\n        id, // unique ID for this dimension (reused when dimensions are disposed)\n        values, // sorted, cached array\n        index, // maps sorted value index -> record index (in data)\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        iterablesIndexCount,\n        newIterablesIndexCount,\n        iterablesIndexFilterStatus,\n        newIterablesIndexFilterStatus,\n        iterablesEmptyRows = [],\n        sort = quicksort.by(function(i) { return newValues[i]; }),\n        refilter = xfilterFilter.filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        filterValue, // the value used for filtering (value, array, function or undefined)\n        filterValuePresent, // true if filterValue contains something\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0,\n        t = 0,\n        k;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Add a new dimension in the filter bitmap and store the offset and bitmask.\n    var tmp = filters.add();\n    offset = tmp.offset;\n    one = tmp.one;\n    zero = ~one;\n\n    // Create a unique ID for the dimension\n    // IDs will be re-used if dimensions are disposed.\n    // For internal use the ID is the subarray offset shifted left 7 bits or'd with the\n    // bit offset of the set bit in the dimension's \"one\" mask.\n    id = (offset << 7) | (Math.log(one) / Math.log(2));\n\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      if (iterable){\n        // Count all the values\n        t = 0;\n        j = 0;\n        k = [];\n\n        for (var i0 = 0; i0 < newData.length; i0++) {\n          for(j = 0, k = value(newData[i0]); j < k.length; j++) {\n            t++;\n          }\n        }\n\n        newValues = [];\n        newIterablesIndexCount = crossfilter_range(newData.length);\n        newIterablesIndexFilterStatus = crossfilter_index(t,1);\n        var unsortedIndex = crossfilter_range(t);\n\n        for (var l = 0, index1 = 0; index1 < newData.length; index1++) {\n          k = value(newData[index1])\n          //\n          if(!k.length){\n            newIterablesIndexCount[index1] = 0;\n            iterablesEmptyRows.push(index1 + n0);\n            continue;\n          }\n          newIterablesIndexCount[index1] = k.length\n          for (j = 0; j < k.length; j++) {\n            newValues.push(k[j]);\n            unsortedIndex[l] = index1;\n            l++;\n          }\n        }\n\n        // Create the Sort map used to sort both the values and the valueToData indices\n        var sortMap = sort(crossfilter_range(t), 0, t);\n\n        // Use the sortMap to sort the newValues\n        newValues = permute(newValues, sortMap);\n\n\n        // Use the sortMap to sort the unsortedIndex map\n        // newIndex should be a map of sortedValue -> crossfilterData\n        newIndex = permute(unsortedIndex, sortMap)\n\n      } else{\n        // Permute new values into natural order using a standard sorted index.\n        newValues = newData.map(value);\n        newIndex = sort(crossfilter_range(n1), 0, n1);\n        newValues = permute(newValues, newIndex);\n      }\n\n      if(iterable) {\n        n1 = t;\n      }\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1];\n      if (refilterFunction) {\n        for (var index2 = 0; index2 < n1; ++index2) {\n          if (!refilterFunction(newValues[index2], index2)) {\n            filters[offset][newIndex[index2] + n0] |= one;\n            if(iterable) newIterablesIndexFilterStatus[index2] = 1;\n          }\n        }\n      } else {\n        for (var index3 = 0; index3 < lo1; ++index3) {\n          filters[offset][newIndex[index3] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index3] = 1;\n        }\n        for (var index4 = hi1; index4 < n1; ++index4) {\n          filters[offset][newIndex[index4] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index4] = 1;\n        }\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        iterablesIndexCount = newIterablesIndexCount;\n        iterablesIndexFilterStatus = newIterablesIndexFilterStatus;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n\n\n      var oldValues = values,\n        oldIndex = index,\n        oldIterablesIndexFilterStatus = iterablesIndexFilterStatus,\n        old_n0,\n        i1 = 0;\n\n      i0 = 0;\n\n      if(iterable){\n        old_n0 = n0\n        n0 = oldValues.length;\n        n1 = t\n      }\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = iterable ? new Array(n0 + n1) : new Array(n);\n      index = iterable ? new Array(n0 + n1) : crossfilter_index(n, n);\n      if(iterable) iterablesIndexFilterStatus = crossfilter_index(n0 + n1, 1);\n\n      // Concatenate the newIterablesIndexCount onto the old one.\n      if(iterable) {\n        var oldiiclength = iterablesIndexCount.length;\n        iterablesIndexCount = xfilterArray.arrayLengthen(iterablesIndexCount, n);\n        for(var j=0; j+oldiiclength < n; j++) {\n          iterablesIndexCount[j+oldiiclength] = newIterablesIndexCount[j];\n        }\n      }\n\n      // Merge the old and new sorted values, and old and new index.\n      var index5 = 0;\n      for (; i0 < n0 && i1 < n1; ++index5) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[index5] = oldValues[i0];\n          if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n          index[index5] = oldIndex[i0++];\n        } else {\n          values[index5] = newValues[i1];\n          if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n          index[index5] = newIndex[i1++] + (iterable ? old_n0 : n0);\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++index5) {\n        values[index5] = oldValues[i0];\n        if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n        index[index5] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++index5) {\n        values[index5] = newValues[i1];\n        if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n        index[index5] = newIndex[i1] + (iterable ? old_n0 : n0);\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      if (iterable) {\n        for (var i0 = 0, i1 = 0; i0 < iterablesEmptyRows.length; i0++) {\n          if (reIndex[iterablesEmptyRows[i0]] !== REMOVED_INDEX) {\n            iterablesEmptyRows[i1] = reIndex[iterablesEmptyRows[i0]];\n            i1++;\n          }\n        }\n        iterablesEmptyRows.length = i1;\n        for (i0 = 0, i1 = 0; i0 < n; i0++) {\n          if (reIndex[i0] !== REMOVED_INDEX) {\n            if (i1 !== i0) iterablesIndexCount[i1] = iterablesIndexCount[i0];\n            i1++;\n          }\n        }\n        iterablesIndexCount.length = i1;\n      }\n      // Rewrite our index, overwriting removed values\n      var n0 = values.length;\n      for (var i = 0, j = 0, oldDataIndex; i < n0; ++i) {\n        oldDataIndex = index[i];\n        if (reIndex[oldDataIndex] !== REMOVED_INDEX) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[oldDataIndex];\n          if (iterable) {\n            iterablesIndexFilterStatus[j] = iterablesIndexFilterStatus[i];\n          }\n          ++j;\n        }\n      }\n      values.length = j;\n      if (iterable) iterablesIndexFilterStatus.length = j;\n      while (j < n0) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; }, bounds[0] === 0 && bounds[1] === values.length);\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [];\n\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      if(!iterable) {\n        // Flip filters normally.\n\n        for(i=0; i<added.length; i++) {\n          filters[offset][added[i]] ^= one;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          filters[offset][removed[i]] ^= one;\n        }\n\n      } else {\n        // For iterables, we need to figure out if the row has been completely removed vs partially included\n        // Only count a row as added if it is not already being aggregated. Only count a row\n        // as removed if the last element being aggregated is removed.\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          iterablesIndexCount[added[i]]++\n          iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n          if(iterablesIndexCount[added[i]] === 1) {\n            filters[offset][added[i]] ^= one;\n            newAdded.push(added[i]);\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          iterablesIndexCount[removed[i]]--\n          iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n          if(iterablesIndexCount[removed[i]] === 0) {\n            filters[offset][removed[i]] ^= one;\n            newRemoved.push(removed[i]);\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(bounds[0] === 0 && bounds[1] === values.length) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      filterValue = value;\n      filterValuePresent = true;\n      return filterIndexBounds((refilter = xfilterFilter.filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      filterValue = range;\n      filterValuePresent = true;\n      return filterIndexBounds((refilter = xfilterFilter.filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      filterValue = undefined;\n      filterValuePresent = false;\n      return filterIndexBounds((refilter = xfilterFilter.filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      filterValue = f;\n      filterValuePresent = true;\n      \n      refilterFunction = f;\n      refilter = xfilterFilter.filterAll;\n\n      filterIndexFunction(f, false);\n\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f, filterAll) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [],\n          indexLength = values.length;\n\n      if(!iterable) {\n        for (i = 0; i < indexLength; ++i) {\n          if (!(filters[offset][k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n            if (x) added.push(k);\n            else removed.push(k);\n          }\n        }\n      }\n\n      if(iterable) {\n        for(i=0; i < indexLength; ++i) {\n          if(f(values[i], i)) {\n            added.push(index[i]);\n            valueIndexAdded.push(i);\n          } else {\n            removed.push(index[i]);\n            valueIndexRemoved.push(i);\n          }\n        }\n      }\n\n      if(!iterable) {\n        for(i=0; i<added.length; i++) {\n          if(filters[offset][added[i]] & one) filters[offset][added[i]] &= zero;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          if(!(filters[offset][removed[i]] & one)) filters[offset][removed[i]] |= one;\n        }\n      } else {\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          // First check this particular value needs to be added\n          if(iterablesIndexFilterStatus[valueIndexAdded[i]] === 1) {\n            iterablesIndexCount[added[i]]++\n            iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n            if(iterablesIndexCount[added[i]] === 1) {\n              filters[offset][added[i]] ^= one;\n              newAdded.push(added[i]);\n            }\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          // First check this particular value needs to be removed\n          if(iterablesIndexFilterStatus[valueIndexRemoved[i]] === 0) {\n            iterablesIndexCount[removed[i]]--\n            iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n            if(iterablesIndexCount[removed[i]] === 0) {\n              filters[offset][removed[i]] ^= one;\n              newRemoved.push(removed[i]);\n            }\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(filterAll) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n    }\n    \n    function currentFilter() {\n      return filterValue;\n    }\n    \n    function hasCurrentFilter() {\n      return filterValuePresent;\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k, top_offset) {\n      var array = [],\n          i = hi0,\n          j,\n          toSkip = 0;\n\n      if(top_offset && top_offset > 0) toSkip = top_offset;\n\n      while (--i >= lo0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n      }\n\n      if(iterable){\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          // Add row with empty iterable column at the end\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k, bottom_offset) {\n      var array = [],\n          i,\n          j,\n          toSkip = 0;\n\n      if(bottom_offset && bottom_offset > 0) toSkip = bottom_offset;\n\n      if(iterable) {\n        // Add row with empty iterable column at the top\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      i = lo0;\n\n      while (i < hi0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null,\n          n0old;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n\n        if(iterable) {\n          n0old = n0\n          n0 = values.length - newValues.length\n          n1 = newValues.length;\n        }\n\n        var oldGroups = groups,\n            reIndex = iterable ? [] : crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            remove = reduceRemove,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n        if (resetNeeded) remove = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        if(iterable){\n          groupIndex = k0 ? groupIndex : [];\n        }\n        else{\n          groupIndex = k0 > 1 ? xfilterArray.arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n        }\n\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            g0 = oldGroups[++i0];\n            if (g0) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n\n          while (x1 <= x) {\n            j = newIndex[i1] + (iterable ? n0old : n0)\n\n\n            if(iterable){\n              if(groupIndex[j]){\n                groupIndex[j].push(k)\n              }\n              else{\n                groupIndex[j] = [k]\n              }\n            }\n            else{\n              groupIndex[j] = k;\n            }\n\n            // Always add new values to groups. Only remove when not in filter.\n            // This gives groups full information on data life-cycle.\n            g.value = add(g.value, data[j], true);\n            if (!filters.zeroExcept(j, offset, zero)) g.value = remove(g.value, data[j], false);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater th1an all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n\n        // Fill in gaps with empty arrays where there may have been rows with empty iterables\n        if(iterable){\n          for (var index1 = 0; index1 < n; index1++) {\n            if(!groupIndex[index1]){\n              groupIndex[index1] = [];\n            }\n          }\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if(k > i0){\n          if(iterable){\n            for (i0 = 0; i0 < n0old; ++i0) {\n              for (index1 = 0; index1 < groupIndex[i0].length; index1++) {\n                groupIndex[i0][index1] = reIndex[groupIndex[i0][index1]];\n              }\n            }\n          }\n          else{\n            for (i0 = 0; i0 < n0; ++i0) {\n              groupIndex[i0] = reIndex[groupIndex[i0]];\n            }\n          }\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1 || iterable) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if(iterable){\n            k++\n            return\n          }\n          if (++k === groupCapacity) {\n            reIndex = xfilterArray.arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = xfilterArray.arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData(reIndex) {\n        if (k > 1 || iterable) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK),\n              i,\n              i0,\n              j;\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          if (!iterable) {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n                ++j;\n              }\n            }\n          } else {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                groupIndex[j] = groupIndex[i];\n                for (i0 = 0; i0 < groupIndex[j].length; i0++) {\n                  seenGroups[groupIndex[j][i0]] = 1;\n                }\n                ++j;\n              }\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1 || iterable) {\n            // Reindex the group index using seenGroups to find the new index.\n            if (!iterable) {\n              for (i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n            } else {\n              for (i = 0; i < j; ++i) {\n                for (i0 = 0; i0 < groupIndex[i].length; ++i0) {\n                  groupIndex[i][i0] = seenGroups[groupIndex[i][i0]];\n                }\n              }\n            }\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1 || iterable\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var index3 = 0; index3 < n; ++index3) if (reIndex[index3] !== REMOVED_INDEX) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateMany(filterOne, filterOffset, added, removed, notFilter) {\n\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            j,\n            k,\n            n,\n            g;\n\n        if(iterable){\n          // Add the added values.\n          for (i = 0, n = added.length; i < n; ++i) {\n            if (filters.zeroExcept(k = added[i], offset, zero)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceAdd(g.value, data[k], false, j);\n              }\n            }\n          }\n\n          // Remove the removed values.\n          for (i = 0, n = removed.length; i < n; ++i) {\n            if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceRemove(g.value, data[k], notFilter, j);\n              }\n            }\n          }\n          return;\n        }\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateOne(filterOne, filterOffset, added, removed, notFilter) {\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            j,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        if(iterable){\n          for (i = 0; i < n; ++i) {\n            for (j = 0; j < groupIndex[i].length; j++) {\n              g = groups[groupIndex[i][j]];\n              g.value = reduceAdd(g.value, data[i], true, j);\n            }\n          }\n          for (i = 0; i < n; ++i) {\n            if (!filters.zeroExcept(i, offset, zero)) {\n              for (j = 0; j < groupIndex[i].length; j++) {\n                g = groups[groupIndex[i][j]];\n                g.value = reduceRemove(g.value, data[i], false, j);\n              }\n            }\n          }\n          return;\n        }\n\n        for (i = 0; i < n; ++i) {\n          g = groups[groupIndex[i]];\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        for (i = 0; i < n; ++i) {\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = xfilterHeapselect.by(valueOf);\n        heap = xfilterHeap.by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        i = dimensionGroups.indexOf(group);\n        if (i >= 0) dimensionGroups.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      filters.masks[offset] &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Cycle through all the values.\n      for (i = n0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, filterOffset, added, removed, notFilter) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (filters.zero(k = added[i])) {\n          reduceValue = reduceAdd(reduceValue, data[k], notFilter);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters.only(k = removed[i], filterOffset, filterOne)) {\n          reduceValue = reduceRemove(reduceValue, data[k], notFilter);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      // Cycle through all the values.\n      for (i = 0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if it is filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i, 1);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i, 1);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  // Returns the raw row data contained in this crossfilter\n  function all(){\n    return data;\n  }\n\n  // Returns row data with all dimension filters applied, except for filters in ignore_dimensions\n  function allFiltered(ignore_dimensions) {\n    var array = [],\n        i = 0,\n        mask = maskForDimensions(ignore_dimensions || []);\n\n      for (i = 0; i < n; i++) {\n        if (filters.zeroExceptMask(i, mask)) {\n          array.push(data[i]);\n        }\n      }\n\n      return array;\n  }\n\n  function onChange(cb){\n    if(typeof cb !== 'function'){\n      /* eslint no-console: 0 */\n      console.warn('onChange callback parameter must be a function!');\n      return;\n    }\n    callbacks.push(cb);\n    return function(){\n      callbacks.splice(callbacks.indexOf(cb), 1);\n    };\n  }\n\n  function triggerOnChange(eventName){\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i](eventName);\n    }\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? xfilterArray.array8 : m < 0x10001\n      ? xfilterArray.array16\n      : xfilterArray.array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dc-chart path.dc-symbol,.dc-legend g.dc-legend-item.fadeout{fill-opacity:.5;stroke-opacity:.5}div.dc-chart{float:left}.dc-chart rect.bar{stroke:none;cursor:pointer}.dc-chart rect.bar:hover{fill-opacity:.5}.dc-chart rect.deselected{stroke:none;fill:#ccc}.dc-chart .pie-slice{fill:#fff;font-size:12px;cursor:pointer}.dc-chart .pie-slice.external{fill:#000}.dc-chart .pie-slice :hover,.dc-chart .pie-slice.highlight{fill-opacity:.8}.dc-chart .pie-path{fill:none;stroke-width:2px;stroke:#000;opacity:.4}.dc-chart .selected circle,.dc-chart .selected path{stroke-width:3;stroke:#ccc;fill-opacity:1}.dc-chart .deselected circle,.dc-chart .deselected path{stroke:none;fill-opacity:.5;fill:#ccc}.dc-chart .axis line,.dc-chart .axis path{fill:none;stroke:#000;shape-rendering:crispEdges}.dc-chart .axis text{font:10px sans-serif}.dc-chart .axis .grid-line,.dc-chart .axis .grid-line line,.dc-chart .grid-line,.dc-chart .grid-line line{fill:none;stroke:#ccc;opacity:.5;shape-rendering:crispEdges}.dc-chart .brush rect.selection{fill:#4682b4;fill-opacity:.125}.dc-chart .brush .custom-brush-handle{fill:#eee;stroke:#666;cursor:ew-resize}.dc-chart path.line{fill:none;stroke-width:1.5px}.dc-chart path.area{fill-opacity:.3;stroke:none}.dc-chart path.highlight{stroke-width:3;fill-opacity:1;stroke-opacity:1}.dc-chart g.state{cursor:pointer}.dc-chart g.state :hover{fill-opacity:.8}.dc-chart g.state path{stroke:#fff}.dc-chart g.deselected path{fill:grey}.dc-chart g.deselected text{display:none}.dc-chart g.row rect{fill-opacity:.8;cursor:pointer}.dc-chart g.row rect:hover{fill-opacity:.6}.dc-chart g.row text{fill:#fff;font-size:12px;cursor:pointer}.dc-chart g.dc-tooltip path{fill:none;stroke:grey;stroke-opacity:.8}.dc-chart g.county path{stroke:#fff;fill:none}.dc-chart g.debug rect{fill:#00f;fill-opacity:.2}.dc-chart g.axis text{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none}.dc-chart .node{font-size:.7em;cursor:pointer}.dc-chart .node :hover{fill-opacity:.8}.dc-chart .bubble{stroke:none;fill-opacity:.6}.dc-chart .highlight{fill-opacity:1;stroke-opacity:1}.dc-chart .fadeout{fill-opacity:.2;stroke-opacity:.2}.dc-chart .box text{font:10px sans-serif;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none}.dc-chart .box circle,.dc-chart .box line{fill:#fff}.dc-chart .box circle,.dc-chart .box line,.dc-chart .box rect{stroke:#000;stroke-width:1.5px}.dc-chart .box .center{stroke-dasharray:3,3}.dc-chart .box .outlier{fill:none;stroke:#ccc}.dc-chart .box.deselected{opacity:.5}.dc-chart .box.deselected .box{fill:#ccc}.dc-chart .symbol{stroke:none}.dc-chart .heatmap .box-group.deselected rect{stroke:none;fill-opacity:.5;fill:#ccc}.dc-chart .heatmap g.axis text{pointer-events:all;cursor:pointer}.dc-chart .empty-chart .pie-slice{cursor:default}.dc-chart .empty-chart .pie-slice path{fill:#fee;cursor:default}.dc-chart circle.dot{stroke:none}.dc-data-count{float:right;margin-top:15px;margin-right:15px}.dc-data-count .filter-count,.dc-data-count .total-count{color:#3182bd;font-weight:700}.dc-legend{font-size:11px}.dc-legend .dc-legend-item{cursor:pointer}.dc-hard .number-display{float:none}div.dc-html-legend{overflow-y:auto;overflow-x:hidden;height:inherit;float:right;padding-right:2px}div.dc-html-legend .dc-legend-item-horizontal{display:inline-block;margin-left:5px;margin-right:5px;cursor:pointer}div.dc-html-legend .dc-legend-item-horizontal.selected{background-color:#3182bd;color:#fff}div.dc-html-legend .dc-legend-item-vertical{display:block;margin-top:5px;padding-top:1px;padding-bottom:1px;cursor:pointer}div.dc-html-legend .dc-legend-item-vertical.selected{background-color:#3182bd;color:#fff}div.dc-html-legend .dc-legend-item-color{display:table-cell;width:12px;height:12px}div.dc-html-legend .dc-legend-item-label{line-height:12px;display:table-cell;vertical-align:middle;padding-left:3px;padding-right:3px;font-size:.75em}.dc-html-legend-container{height:inherit}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./dc.min.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./dc.min.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./dc.min.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","//import {scaleLinear} from 'd3-scale';\n//import crossfilter from 'crossfilter2';\n//import dc from 'dc';\nimport './dc.min.css';\nimport Data from './data.csv';\nvar d3 = require(\"d3\");\nvar crossfilter = require('crossfilter2')\nvar dc = require('dc')\n\nfunction component() {\n  var element = document.createElement('div');\n\n  //element.innerHTML = 'Chart failed loading...';\n  element.id = 'test';\n\n  return element;\n}\n\ndocument.body.appendChild(component());\n\ndc.config.defaultColors(d3.schemeSet1)\n\nvar chart = dc.barChart('#test')\n\n//d3.csv(\"data.csv\", function(d) {\n//  return {\n//    Expt: d.Expt,\n//    Run: d.Run,\n//    Speed: +d.Speed\n//  };\n//}).then(function(Data) {\n  //console.log(Data);\n\n\n  var ndx             = crossfilter(Data),\n      runDimension    = ndx.dimension(function(d) {return +d.Run;}),\n      speedSumGroup   = runDimension.group().reduceSum(function(d) {return d.Speed * d.Run / 1000;});\n\n  chart\n    .width(768)\n    .height(480)\n    .x(d3.scaleLinear().domain([6,20]))\n    .brushOn(false)\n    .yAxisLabel(\"This is the Y Axis!\")\n    .dimension(runDimension)\n    .group(speedSumGroup)\n    .on('renderlet', function(chart) {\n        chart.selectAll('rect').on(\"click\", function(d) {\n            console.log(\"click!\", d);\n        });\n    });\n\n  chart.render();\n\n//});\n"],"sourceRoot":""}